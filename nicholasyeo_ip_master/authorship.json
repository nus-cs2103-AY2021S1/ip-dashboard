[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    toolVersion \u003d \u00278.32\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasyeo": 17,
      "-": 44
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "D | 1 | finish assignment | 2020-08-28"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "T | 1 | math tutorial"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "E | 0 | birthday party | 2020-08-30"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "D | 1 | return book | 2020-08-29"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "E | 0 | outing | 2020-09-03"
      }
    ],
    "authorContributionMap": {
      "nicholasyeo": 5
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.logic.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.logic.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.task.TaskManager;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " * Represents the driver class to run the Duke programme."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * A storage instance to load and save tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * A task manager to handle task operations."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    private TaskManager manager;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * A ui instance to handle user interactions."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * Initializes all class variables."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @param filePath The file path for the storage."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            manager \u003d new TaskManager(storage.loadTasks());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            manager \u003d new TaskManager();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * Returns string representation of the response by Duke."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @param input The input message by the user."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @return The response by Duke after processing the input message."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            Command command \u003d Parser.parseCommand(input);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            return command.execute(manager, ui, storage);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasyeo": 60
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasyeo": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.ui.MainWindow;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * A duke instance for the programme to start."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    private final Duke duke \u003d new Duke(\"data/duke.txt\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasyeo": 35
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " * Represents a command to add tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "public abstract class AddCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * A description of the task to be added."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    protected final String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * Constructs a command that adds a task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public AddCommand(String description) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasyeo": 26
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.logic.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.task.TaskManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " * Represents a command that is being received by Duke."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * Executes the given command and returns corresponding message to the user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @param manager The task manager in charge of handling task operations."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @param ui The UI instance for printing messages."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @param storage The storage instance responsible for saving tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @return The string representation of the response by Duke after executing the command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @throws DukeException If command is deemed invalid or the tasks could not be saved."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public abstract String execute(TaskManager manager, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * Returns true if and only if the command is an exit command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @return True if command is an exit command, and false otherwise."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasyeo": 30
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.logic.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.task.TaskManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " * Represents a command to add tasks with a deadline."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "public class DeadlineCommand extends AddCommand {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * A local date instance to store the task deadline."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    private final LocalDate date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * Constructs a command that adds a deadline task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @param date The deadline of the task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public DeadlineCommand(String description, LocalDate date) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public String execute(TaskManager manager, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        Task task \u003d new Deadline(description, date);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        manager.addTask(task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        storage.saveTasks(manager.getTasks());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        return ui.showAddMessage(task, manager.getTasks().size());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasyeo": 40
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.logic.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.task.TaskManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " * Represents a command to delete tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * The task number on the list to be deleted."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    private final String taskNumber;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * Constructs a command that deletes a task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @param taskNumber The task number to be deleted."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public DeleteCommand(String taskNumber) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public String execute(TaskManager manager, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            int index \u003d Integer.parseInt(taskNumber) - 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            Task task \u003d manager.deleteTask(index);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            storage.saveTasks(manager.getTasks());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            return ui.showDeleteMessage(task, manager.getTasks().size());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        } catch (IndexOutOfBoundsException | NumberFormatException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            // Invalid task number or number out of range"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            String errorMessage \u003d \"Invalid task number! \""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                    + \"Please enter a valid task number :)\\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            throw new DukeException(errorMessage);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasyeo": 47
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.logic.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.task.TaskManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " * Represents a command to mark tasks as done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * The task number on the list to be marked as done."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    private final String taskNumber;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * Constructs a command that marks a task as done."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @param taskNumber The task number to be marked as done."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public DoneCommand(String taskNumber) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public String execute(TaskManager manager, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            int index \u003d Integer.parseInt(taskNumber) - 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            Task task \u003d manager.getTasks().get(index);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            manager.markTaskAsDone(task);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            storage.saveTasks(manager.getTasks());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            return ui.showDoneMessage(task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        } catch (IndexOutOfBoundsException | NumberFormatException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            // Invalid task number or number out of range"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            String errorMessage \u003d \"Invalid task number! \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                    + \"Please enter a valid task number :)\\n\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            throw new DukeException(errorMessage);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasyeo": 48
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.logic.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.task.TaskManager;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " * Represents a command to add event tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "public class EventCommand extends AddCommand {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * A local date instance to store the date of the event."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    private final LocalDate date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * Constructs a command that adds an event task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @param description The description of the event."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @param date The date of the event."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public EventCommand(String description, LocalDate date) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public String execute(TaskManager manager, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        Task task \u003d new Event(description, date);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        manager.addTask(task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        storage.saveTasks(manager.getTasks());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        return ui.showAddMessage(task, manager.getTasks().size());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasyeo": 40
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.logic.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.task.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " * Represents a command to exit the programme."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public String execute(TaskManager manager, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        return ui.showExitMessage();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasyeo": 21
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.logic.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.task.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " * Represents a command to find all matching tasks with a specified keyword."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * The keyword(s) used to find matching tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    private final String[] keywords;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * Constructs a command that finds all matching tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @param keywords The keyword(s) used to find matching tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public FindCommand(String... keywords) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        this.keywords \u003d keywords;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public String execute(TaskManager manager, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        return ui.displayMatchingTasks(manager.findTasks(keywords));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "nicholasyeo": 36
    }
  },
  {
    "path": "src/main/java/duke/command/InvalidCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.logic.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.task.TaskManager;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " * Represents an invalid command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "public class InvalidCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public String execute(TaskManager manager, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        String errorMessage \u003d \"Sorry! I don\u0027t know what that means...\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        throw new DukeException(errorMessage);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasyeo": 23
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.logic.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.task.TaskManager;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " * Represents a command to list all existing tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public String execute(TaskManager manager, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        return ui.displayTasks(manager.getTasks());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasyeo": 21
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.logic.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.task.TaskManager;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " * Represents a command to add todos."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "public class TodoCommand extends AddCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * Constructs a command that adds a todo."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public TodoCommand(String description) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public String execute(TaskManager manager, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        Task task \u003d new Todo(description);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        manager.addTask(task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        storage.saveTasks(manager.getTasks());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        return ui.showAddMessage(task, manager.getTasks().size());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasyeo": 31
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " * Represents an exception specific to Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * Constructs a duke exception that is specific to Duke."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @param errorMessage The error message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasyeo": 16
    }
  },
  {
    "path": "src/main/java/duke/logic/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "package duke.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.command.InvalidCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.command.TodoCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " * Represents a helper class that deals with making sense of the user command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * Returns a command instance after parsing the input command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @param fullCommand The command to be parsed."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @return A command instance which its type is determined by the input command."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @throws DukeException If the input command is deemed invalid or the format is incorrect."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public static Command parseCommand(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        String[] splitCommand \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        String action \u003d splitCommand[0];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        String errorMessage \u003d \"\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            if (action.equals(\"bye\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                command \u003d new ExitCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            } else if (action.equals(\"list\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                command \u003d new ListCommand();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            } else if (action.equals(\"todo\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                String description \u003d splitCommand[1];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                command \u003d new TodoCommand(description);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            } else if (action.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                String[] splitDeadline \u003d splitCommand[1].split(\"/by\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                String description \u003d splitDeadline[0].trim();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                String by \u003d splitDeadline[1].trim();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                LocalDate date \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                command \u003d new DeadlineCommand(description, date);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            } else if (action.equals(\"event\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                String[] splitEvent \u003d splitCommand[1].split(\"/at\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                String description \u003d splitEvent[0].trim();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                String at \u003d splitEvent[1].trim();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                LocalDate date \u003d LocalDate.parse(at);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                command \u003d new EventCommand(description, date);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            } else if (action.equals(\"done\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                String taskNumber \u003d splitCommand[1];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                command \u003d new DoneCommand(taskNumber);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            } else if (action.equals(\"delete\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                String taskNumber \u003d splitCommand[1];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                command \u003d new DeleteCommand(taskNumber);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            } else if (action.equals(\"find\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                String keyword \u003d splitCommand[1];"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                String[] keywords \u003d keyword.split(\" \");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                command \u003d new FindCommand(keywords);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                command \u003d new InvalidCommand();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            return command;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            if (splitCommand.length \u003c\u003d 1) { // Entered keyword without description/task number"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                if (isTask(action)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                    errorMessage \u003d \"OOPS!!! Description of a task cannot be empty :(\\n\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                } else if (action.equals(\"done\") || action.equals(\"delete\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                    errorMessage \u003d \"Missing task number! \""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                            + \"Please ensure to key in the task number :)\\n\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                } else if (action.equals(\"find\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                    errorMessage \u003d \"Please indicate the keyword which you want to find.\\n\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            } else { // Deadline/Event missing their respective keywords"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                if (action.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                    errorMessage \u003d \"Please indicate a deadline using the \\\"/by\\\" keyword.\\n\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                } else if (action.equals(\"event\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                    errorMessage \u003d \"Please indicate a timing using the \\\"/at\\\" keyword.\\n\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            throw new DukeException(errorMessage);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            errorMessage \u003d \"Invalid date format! \""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                    + \"Please use the proper date format i.e. yyyy-MM-dd\\n\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            throw new DukeException(errorMessage);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    private static boolean isTask(String action) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        return action.equals(\"todo\")"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                || action.equals(\"deadline\") || action.equals(\"event\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasyeo": 98
    }
  },
  {
    "path": "src/main/java/duke/logic/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "package duke.logic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " * Represents a Duke storage that deals with"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " * loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * The file instance to load tasks from and save tasks to."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    private final File file;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * Initializes a storage instance for a particular file path."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @param filePath The path of the file."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        this.file \u003d new File(filePath);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * Returns a list of tasks after loading them from the specified file."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @return A list of tasks."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @throws DukeException If the file is not found."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public List\u003cTask\u003e loadTasks() throws DukeException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                String data \u003d sc.nextLine();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                String[] dataArray \u003d data.split(\" \\\\| \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                String letter \u003d dataArray[0];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                int bit \u003d Integer.parseInt(dataArray[1]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                String description \u003d dataArray[2];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                if (letter.equals(\"T\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                    task \u003d new Todo(description);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                } else if (letter.equals(\"D\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                    LocalDate time \u003d LocalDate.parse(dataArray[3]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                    task \u003d new Deadline(description, time);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                    LocalDate time \u003d LocalDate.parse(dataArray[3]);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                    task \u003d new Event(description, time);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                if (bit \u003d\u003d 1) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                    task.markAsDone();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            sc.close();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            String errorMessage \u003d \"No previous save file found, \""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                    + \"starting up with no saved records...\\n\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            throw new DukeException(errorMessage);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * Saves tasks to the specified file."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @param tasks The list of tasks to be saved."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @throws DukeException If the path specified is a directory,"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * or if the file cannot be created or opened."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public void saveTasks(List\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            FileWriter myWriter \u003d new FileWriter(\"data/duke.txt\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                char letter \u003d task.toString().charAt(1);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                int bit \u003d task.isDone() ? 1 : 0;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                String description \u003d task.getDescription();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                String data;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                if (letter \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                    data \u003d letter + \" | \" + bit + \" | \" + description;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                } else if (letter \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                    String time \u003d task.getDate().toString();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                    data \u003d letter + \" | \" + bit + \" | \" + description + \" | \" + time;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                } else { // letter \u003d\u003d \u0027E\u0027"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                    String time \u003d task.getDate().toString();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                    data \u003d letter + \" | \" + bit + \" | \" + description + \" | \" + time;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                myWriter.write(data + \"\\n\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            myWriter.close();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            String errorMessage \u003d \"An error occurred, \""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                    + \"unable to save tasks to file :(\";"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            throw new DukeException(errorMessage);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasyeo": 119
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " * Represents a Deadline task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * The deadline of the task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    private final LocalDate by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * Initializes a task object with a deadline."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @param by The deadline of the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        String date \u003d by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + date + \")\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasyeo": 37
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " * Represents an Event task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * The date of the event."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    private final LocalDate at;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * Initializes an event object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @param description The description of the event."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @param at The date of the event."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public Event(String description, LocalDate at) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        String date \u003d at.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + date + \")\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasyeo": 37
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " * Represents a task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " * \u003cp\u003eThere are 3 types of tasks, namely Todo, Deadline and Event tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * The description of the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * A boolean to determine if the task is already done."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * Initializes a task object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * Returns the description of the task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @return The description of the task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * Returns the date of the task if the task has a date."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * Otherwise, the current date is being returned."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @return The date of the task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        return LocalDate.now();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * Returns the status icon of the task i.e. a tick or a cross."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @return A tick icon if the task is done, and a cross otherwise."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        return isDone ? \"\\u2713\" : \"\\u2718\"; //return tick or X symbols"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * Determines whether the task is done."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @return True if the task is done."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * Marks the task as done."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        String symbol \u003d getStatusIcon();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        return \"[\" + symbol + \"] \" + description;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasyeo": 81
    }
  },
  {
    "path": "src/main/java/duke/task/TaskManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " * Represents a manager that deals with task operations."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "public class TaskManager {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * The list of tasks that is stored."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    private final List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * Initializes a manager instance with an empty list of tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public TaskManager() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * Initializes a manager instance with a non-empty list of tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @param tasks The list of tasks to be managed."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public TaskManager(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * Returns the list of tasks."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @return The list of tasks."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * Adds a task to the list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @param task The task to be added."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * Deletes a task from the list."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @param index The index of the task in the list."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @return The deleted task."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public Task deleteTask(int index) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        return tasks.remove(index);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * Marks a task as done."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @param task The task to be marked as done."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public void markTaskAsDone(Task task) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * Finds all matching tasks with the specified keyword(s)."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @param keywords The keyword(s) used to find matching tasks."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @return The list of tasks that match the keyword(s)."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public List\u003cTask\u003e findTasks(String... keywords) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            for (String keyword : keywords) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                if (task.getDescription().contains(keyword) \u0026\u0026 !matchingTasks.contains(task)) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                    matchingTasks.add(task);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        return matchingTasks;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasyeo": 86
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " * Represents a Todo task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * Initializes a todo object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @param description The description of the todo."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasyeo": 21
    }
  },
  {
    "path": "src/main/java/duke/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " * Represents the dialog box that is shown to the user which contains the dialog and display picture."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * A label instance of the dialog box."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * The image view of the display picture."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * Constructs a dialog box that stores the text and display picture."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @param text The dialog text to be stored."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @param image The image of the display picture."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    private DialogBox(String text, Image image) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        super(20);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        // Add padding to text"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        dialog.setPadding(new Insets(8));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        // Add background color to text box"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        Color color \u003d Color.PINK;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        CornerRadii radii \u003d new CornerRadii(10);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        dialog.setBackground(new Background(new BackgroundFill(color, radii, Insets.EMPTY)));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        displayPicture.setImage(image);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * Flips the dialog box such that the image is on the left and text on the right."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * Returns a DialogBox object storing the user\u0027s input and display picture."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @param input The text representing the user input."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @param image The image of the display picture."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @return DialogBox object."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public static DialogBox getUserDialog(String input, Image image) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        return new DialogBox(input, image);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * Returns a DialogBox object storing Duke\u0027s response and display picture."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @param response The text representing Duke\u0027s response."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @param image The image of the display picture."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @return DialogBox object."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public static DialogBox getDukeDialog(String response, Image image) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        var db \u003d new DialogBox(response, image);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "}"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "nicholasyeo": 103
    }
  },
  {
    "path": "src/main/java/duke/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " * Controller for duke.ui.MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * Initializes the main window."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * Sets up duke."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @param duke The duke object to be passed in."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public void setDuke(Duke duke) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        this.duke \u003d duke;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                DialogBox.getDukeDialog(new Ui().showWelcomeMessage(), dukeImage)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        );"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        );"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        if (response.equals(new Ui().showExitMessage())) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            userInput.setDisable(true);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            // Exit programme after 2 seconds"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            new Thread(() -\u003e {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                    Thread.sleep(2000);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                    Platform.exit();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                } catch (InterruptedException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                    System.err.println(e.getMessage());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            }).start();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasyeo": 78
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " * Represents the class that deals with interactions with the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * The greeting message to be shown when the programme starts."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    private static final String GREETINGS \u003d \"Hello! I\u0027m Duke.\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            + \"What can I do for you?\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * The exit message to be shown when the programme terminates."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    private static final String GOODBYE \u003d \"Goodbye! Hope to see you again soon!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * Returns string representation of the welcome message to the user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @return The welcome message to the user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public String showWelcomeMessage() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        return GREETINGS;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * Returns string representation of the exit message to the user."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @return The exit message to the user."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public String showExitMessage() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        return GOODBYE;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * Returns string representation of the message when a task is being added."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @param task The task to be added."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @param numTasks The total number of tasks after adding."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @return The message indicating a task has been added."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public String showAddMessage(Task task, int numTasks) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        String message \u003d \"Okay! Task added for you!\\n\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        message \u003d message.concat(task.toString() + \"\\n\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        message \u003d message.concat(\"Now you have \" + numTasks + \" task(s) in the list.\" + \"\\n\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * Returns string representation of the message when a task is being deleted."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @param task The task to be deleted."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @param numTasks The total number of tasks after deleting."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @return The message indicating a task has been deleted."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public String showDeleteMessage(Task task, int numTasks) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        String message \u003d \"Noted. The following task is removed:\\n\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        message \u003d message.concat(task.toString() + \"\\n\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        message \u003d message.concat(\"Now you have \" + numTasks + \" task(s) in the list.\" + \"\\n\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * Returns string representation of the message when a task is being marked as done."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @param task The task to be marked as done."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @return The message indicating a task has been marked as done."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public String showDoneMessage(Task task) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        String message \u003d \"Good job! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        message \u003d message.concat(task + \"\\n\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * Returns string representation of the list of tasks to the user."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @param tasks The list of tasks to be displayed."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @return The list of tasks to the user."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public String displayTasks(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        String message;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            message \u003d \"No tasks added to your list yet!\\n\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            message \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                message \u003d message.concat(i + 1 + \". \" + tasks.get(i) + \"\\n\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * Returns string representation of the list of matching tasks to the user."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     * @param tasks The list of tasks to be displayed."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public String displayMatchingTasks(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        String message;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            message \u003d \"No matching tasks found in your list!\\n\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            message \u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                message \u003d message.concat(i + 1 + \". \" + tasks.get(i) + \"\\n\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasyeo": 117
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "nicholasyeo": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "nicholasyeo": 19
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasyeo": 12
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.command.InvalidCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.command.TodoCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.logic.Parser;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public void parseCommand_validCommand_success() throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        assertTrue(Parser.parseCommand(\"todo read book\") instanceof TodoCommand);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        assertTrue(Parser.parseCommand(\"deadline return book /by 2020-08-28\") instanceof DeadlineCommand);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        assertTrue(Parser.parseCommand(\"event birthday /at 2020-08-31\") instanceof EventCommand);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        assertTrue(Parser.parseCommand(\"list\") instanceof ListCommand);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        assertTrue(Parser.parseCommand(\"bye\") instanceof ExitCommand);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        assertTrue(Parser.parseCommand(\"done 1\") instanceof DoneCommand);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        assertTrue(Parser.parseCommand(\"delete 1\") instanceof DeleteCommand);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        assertTrue(Parser.parseCommand(\"blah\") instanceof InvalidCommand);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public void parseCommand_missingDescription_exceptionThrown() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        String message \u003d \"OOPS!!! Description of a task cannot be empty :(\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            Parser.parseCommand(\"todo\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            assertEquals(message, e.getMessage());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public void parseCommand_missingTaskNumber_exceptionThrown() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        String message \u003d \"Missing task number! \""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                + \"Please ensure to key in the task number :)\\n\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            Parser.parseCommand(\"done\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            assertEquals(message, e.getMessage());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public void parseCommand_missingKeyword_exceptionThrown() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        String message \u003d \"Please indicate a deadline using the \\\"/by\\\" keyword.\\n\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            Parser.parseCommand(\"deadline return book\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            assertEquals(message, e.getMessage());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public void parseCommand_invalidDateFormat_exceptionThrown() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        String message \u003d \"Invalid date format! \""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "                + \"Please use the proper date format i.e. yyyy-MM-dd\\n\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            Parser.parseCommand(\"event birthday /at next Monday\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "            assertEquals(message, e.getMessage());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasyeo": 78
    }
  },
  {
    "path": "src/test/java/duke/TaskManagerTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import duke.task.TaskManager;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "public class TaskManagerTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public void testAddTask() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        Task task \u003d new Task(\"read book\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        TaskManager manager \u003d new TaskManager();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        manager.addTask(task);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        assertEquals(task, manager.getTasks().get(0));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public void testDeleteTask() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        Task task \u003d new Task(\"buy bread\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        TaskManager manager \u003d new TaskManager(tasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        assertEquals(task, manager.deleteTask(0));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        assertEquals(0, manager.getTasks().size());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public void testMarkTaskAsDone() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        Task task \u003d new Task(\"buy bread\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        TaskManager manager \u003d new TaskManager(tasks);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        assertFalse(manager.getTasks().get(0).isDone());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        manager.markTaskAsDone(task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        assertTrue(manager.getTasks().get(0).isDone());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasyeo": 43
    }
  },
  {
    "path": "src/test/java/duke/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"return book\", LocalDate.parse(\"2020-09-30\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        assertEquals(\"[D][\\u2718] return book (by: Sep 30 2020)\", deadline.toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasyeo": 15
    }
  },
  {
    "path": "src/test/java/duke/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        Event event \u003d new Event(\"birthday\", LocalDate.parse(\"2020-09-30\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        assertEquals(\"[E][\\u2718] birthday (at: Sep 30 2020)\", event.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasyeo": 16
    }
  },
  {
    "path": "src/test/java/duke/task/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public void testDescription() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        assertEquals(\"read book\", new Task(\"read book\").getDescription());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public void testStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        Task task \u003d new Task(\"read book\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        assertEquals(\"\\u2713\", task.getStatusIcon());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        assertEquals(\"[\\u2718] read book\", new Task(\"read book\").toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasyeo": 24
    }
  },
  {
    "path": "src/test/java/duke/task/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "        assertEquals(\"[T][\\u2718] read book\", new Todo(\"read book\").toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholasyeo": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "deadline return book /by Tuesday 9pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "event project meeting /at Thursday 1-3pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "nicholasyeo": 10
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\command\\*.java ..\\src\\main\\java\\duke\\exception\\*.java ..\\src\\main\\java\\duke\\task\\*.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "    PAUSE"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholasyeo"
        },
        "content": "PAUSE"
      }
    ],
    "authorContributionMap": {
      "nicholasyeo": 6,
      "-": 20
    }
  }
]
