[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    protected String deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public Deadline(String description, String deadline) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        super(description, TaskType.DEADLINE);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return super.toString() + \" (by: \" + deadline + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private static void handleInputs() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        Tasks list \u003d new Tasks();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        while(scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            String command \u003d input.split(\" \")[0];"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                switch(command) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                    case \"bye\":"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                        PrintDuke.printExitMessage();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                        System.exit(0);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                    case \"list\":"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                        PrintDuke.printList(list.tasks);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                    case \"done\":"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                        list.markTaskAsDone(input);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                    case \"delete\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                        list.deleteTask(input);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                    case \"todo\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                        list.addTask(TaskType.TODO, input);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                    case \"event\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                        list.addTask(TaskType.EVENT, input);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                        list.addTask(TaskType.DEADLINE, input);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                        throw new UnknownInputException();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                PrintDuke.printException(ex);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        scanner.close();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        PrintDuke.printLogo();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        handleInputs();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 43,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 5
    }
  },
  {
    "path": "src/main/java/EmptyInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class EmptyInputException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    EmptyInputException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 5
    }
  },
  {
    "path": "src/main/java/EmptyTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class EmptyTaskException extends EmptyInputException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    EmptyTaskException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    EmptyTaskException(String field, TaskType type) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        super(String.format(\"The %s of %s %s cannot be empty.\","
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                field,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                type.compareTo(TaskType.EVENT) \u003d\u003d 0 ? \"an\" : \"a\","
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                type.toString().toLowerCase()));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 12
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public Event(String description, String date) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        super(description, TaskType.EVENT);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return super.toString() + \" (at: \" + date + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 13
    }
  },
  {
    "path": "src/main/java/InvalidInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class InvalidInputException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    InvalidInputException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 5
    }
  },
  {
    "path": "src/main/java/InvalidTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class InvalidTaskException extends InvalidInputException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    InvalidTaskException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 5
    }
  },
  {
    "path": "src/main/java/InvalidTaskNumberException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class InvalidTaskNumberException extends InvalidInputException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    InvalidTaskNumberException() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        super(\"The task number is invalid!\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    InvalidTaskNumberException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 9
    }
  },
  {
    "path": "src/main/java/PrintDuke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class PrintDuke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private static void printDashes() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        int length \u003d 60;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        System.out.println(\"_\".repeat(length));"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    protected static void printWithDashes(String str) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        printDashes();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        System.out.println(str);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        printDashes();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    protected static void printLogo() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        String logo \u003d \"  ____        _        \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                + \" |  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                + \" | | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                + \" | |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                + \" |____/ \\\\__,_|_|\\\\_\\\\___|\\n\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        String greeting \u003d logo + \" Hello! I\u0027m Duke\\n\" + \" What can I do for you?\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        printWithDashes(greeting);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    protected static void printExitMessage() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        String bye \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        printWithDashes(\" \" + bye);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    protected static void printAddTask(Task task, int length) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        String message \u003d \" Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        message +\u003d \" \" + task;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        message +\u003d String.format(\"\\n Now you have %s task%s in the list.\", length, length \u003e 1 ? \"s\" : \"\" );"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        printWithDashes(message);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    protected static void printList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        StringBuilder listStr \u003d new StringBuilder(\" Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            listStr.append(String.format(\" %s. %s\\n\", i + 1, list.get(i)));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        printWithDashes(listStr.toString());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    protected static void printMarkTaskAsDone(Task task) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        printWithDashes(\" Nice! I\u0027ve marked this task as done:\\n \" + task);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    protected static void printDeleteTask(Task task, int length) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        String message \u003d \" Noted. I\u0027ve removed this task:\\n \" + task;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        message +\u003d String.format(\"\\n Now you have %s task%s in the list.\", length, length \u003e 1 ? \"s\" : \"\" );"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        printWithDashes(message);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    protected static void printException(DukeException ex) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        printWithDashes(\" ERROR: \" + ex.getMessage());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 58
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    protected final TaskType type;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public Task(String description, TaskType type) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return (isDone ? \"✓\" : \"✘\"); // return tick or cross symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return String.format(\"[%S][%s] %s\", type.toString().charAt(0), this.getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 24
    }
  },
  {
    "path": "src/main/java/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    TODO, EVENT, DEADLINE;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 3
    }
  },
  {
    "path": "src/main/java/Tasks.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class Tasks {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    protected ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public Tasks() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private static Todo addTodo(String input) throws EmptyTaskException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        if (input.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new EmptyTaskException(\"description\", TaskType.TODO);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        String description \u003d input.substring(5).trim();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        if (description.length() \u003c 1) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new EmptyTaskException(\"description\", TaskType.TODO);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return new Todo(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private static Event addEvent(String input) throws InvalidTaskException, EmptyTaskException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        int slashIndex \u003d input.indexOf(\"/at\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        if (slashIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new InvalidTaskException(\"The /at command cannot be found.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        String description \u003d input.substring(6, slashIndex).trim();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        if (description.length() \u003c 1) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new EmptyTaskException(\"description\", TaskType.EVENT);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        String date \u003d input.substring(slashIndex + 3).trim();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        if (date.length() \u003c 1) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new EmptyTaskException(\"date\", TaskType.EVENT);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return new Event(description, date);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private static Deadline addDeadline(String input) throws InvalidTaskException, EmptyTaskException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        int slashIndex \u003d input.indexOf(\"/by\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        if (slashIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new InvalidTaskException(\"The /by command cannot be found.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        String description \u003d input.substring(9, slashIndex).trim();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        if (description.length() \u003c 1) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new EmptyTaskException(\"description\", TaskType.DEADLINE);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        String deadline \u003d input.substring(slashIndex + 3).trim();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        if (deadline.length() \u003c 1) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new EmptyTaskException(\"date\", TaskType.DEADLINE);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return new Deadline(description, deadline);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    protected void addTask(TaskType type, String input) throws EmptyTaskException, InvalidTaskException, UnknownInputException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                task \u003d addTodo(input);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                task \u003d addEvent(input);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                task \u003d addDeadline(input);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                throw new UnknownInputException();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        PrintDuke.printAddTask(task, this.tasks.size());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    protected void markTaskAsDone(String input) throws EmptyInputException, InvalidTaskNumberException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        String taskIndexStr;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            taskIndexStr \u003d input.substring(5).trim();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new EmptyInputException(\"The task to be marked as done is not specified.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        if (taskIndexStr.length() \u003c 1) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new EmptyInputException(\"The task to be marked as done is not specified.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        int taskIndex \u003d Integer.parseInt(taskIndexStr) - 1;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            this.tasks.get(taskIndex).markAsDone();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            PrintDuke.printMarkTaskAsDone(this.tasks.get(taskIndex));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new InvalidTaskNumberException(\"The task to be marked as done does not exist!\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    protected void deleteTask(String input) throws EmptyInputException, InvalidTaskNumberException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        String taskIndexStr;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            taskIndexStr \u003d input.substring(7).trim();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new EmptyInputException(\"The task to be deleted is not specified.\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        if (taskIndexStr.length() \u003c 1) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new EmptyInputException(\"The task to be deleted is not specified.\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        int taskIndex \u003d Integer.parseInt(taskIndexStr) - 1;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            Task task \u003d this.tasks.get(taskIndex);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            this.tasks.remove(taskIndex);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            PrintDuke.printDeleteTask(task, this.tasks.size());"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new InvalidTaskNumberException(\"The task to be deleted does not exist!\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 122
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        super(description, TaskType.TODO);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 5
    }
  },
  {
    "path": "src/main/java/UnknownInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class UnknownInputException extends InvalidInputException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    UnknownInputException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    UnknownInputException() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        super(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 9
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "todo"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "todo dfsfsdf"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "event"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "event"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "eventfsrfdg"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "event awrfawesf"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "event dads /at"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "event efaws /at"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "event /at gasrfg"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "event/at efew"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "event a /at somedate"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "deadlineedasfa"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "deadline awrfawesf"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "deadline dads /yb"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "deadline efaws /by"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "deadline /by gasrfg"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "deadline/by efew"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "deadline dda /by somedate"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "done"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "done"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "done 324341"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "delete"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "delete"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "delete 747"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 29
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "SET MY_PATH\u003dC:\\Users\\clara\\github\\ip"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "if not exist \"%MY_PATH%\\bin\" mkdir \"%MY_PATH%\\bin\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "javac  -cp \"%MY_PATH%\\src\\main\\java\" -Xlint:none -d \"%MY_PATH%\\bin\" \"%MY_PATH%\\src\\main\\java\\Duke.java\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "java -classpath \"%MY_PATH%\\bin\" Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 6,
      "-": 17
    }
  }
]
