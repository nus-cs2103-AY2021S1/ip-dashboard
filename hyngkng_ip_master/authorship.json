[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hyngkng": 16,
      "-": 45
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "[T][?] this"
      }
    ],
    "authorContributionMap": {
      "hyngkng": 1
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "[T][✘] homework for CS2105"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "[E][✓] TN\u0027s birthday - 7 Sep 2020"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "[D][✓] assignment 1 - 7 Sep 2020"
      }
    ],
    "authorContributionMap": {
      "hyngkng": 3
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hyngkng"
        },
        "content": " * Represents a Deadline Task. A \u003ccode\u003eDeadline\u003c/code\u003e object contains a description,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hyngkng"
        },
        "content": " * keeps track of whether it has been completed as well as the time."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hyngkng"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "public class Deadline extends TimedTask {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public Deadline(String description, String deadline) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        super(description, deadline);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        super.type \u003d Task.Type.DEADLINE;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public Deadline(String description, String deadline, boolean isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        super(description, deadline);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        super.type \u003d Task.Type.DEADLINE;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        super.isDone \u003d isDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hyngkng": 17
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hyngkng"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hyngkng"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hyngkng"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hyngkng"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hyngkng": 62
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hyngkng"
        },
        "content": " * The main Duke class."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hyngkng"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private static final String FILEPATH \u003d \"data/tasks.txt\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        this.storage \u003d new Storage(FILEPATH);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            this.tasks \u003d new TaskList(storage.loadFile());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        } catch (FileNotFoundException | DukeException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            ui.sayErrorMessage(e);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            ui.informFileNotFound();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            this.tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        ui.sayGreetings();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        boolean isBye \u003d false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        while (!isBye) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            String userInput \u003d ui.receiveUserInput();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "                Parser.parseInput(userInput, ui, tasks, storage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "                ui.sayErrorMessage(e);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "                isBye \u003d Parser.isBye(userInput);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            return Parser.parseInput(input, ui, tasks, storage);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public String getGreetings() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String greetings \u003d ui.sayGreetings();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "//        greetings +\u003d ui.showGreetings();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return greetings;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hyngkng": 58,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hyngkng"
        },
        "content": " * Handles exceptions related to Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hyngkng"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private String exception;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public DukeException(String error) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        exception \u003d error;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return exception;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return \"DukeException[\" + exception + \"]\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hyngkng": 20
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hyngkng"
        },
        "content": " * Represents a Event Task. A \u003ccode\u003eEvent\u003c/code\u003e object contains a description,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hyngkng"
        },
        "content": " * keeps track of whether it has been completed as well as the time."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hyngkng"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "public class Event extends TimedTask {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public Event(String description, String eventTime) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        super(description, eventTime);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        super.type \u003d Task.Type.EVENT;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public Event(String description, String eventTime, boolean isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        super(description, eventTime);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        super.type \u003d Task.Type.EVENT;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        super.isDone \u003d isDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hyngkng": 17
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hyngkng": 7
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hyngkng"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hyngkng"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hyngkng": 31
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        displayGreetings();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        );"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private void displayGreetings() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String greetings \u003d duke.getGreetings();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(greetings, dukeImage));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hyngkng": 56
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hyngkng"
        },
        "content": " * Responsible for parsing the user\u0027s input and processing the desired command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hyngkng"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private static final String BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private static final String LIST \u003d \"list\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private static final String DONE \u003d \"done\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private static final String DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private static final String TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private static final String DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private static final String EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private static final String FIND \u003d \"find\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private static final String DEADLINE_SEPARATOR \u003d \" /by \";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private static final String EVENT_SEPARATOR \u003d \" /at \";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public static String parseInput(String input, Ui ui, TaskList tasks, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String[] parsedInput \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String commandKeyword \u003d parsedInput[0].toLowerCase();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        if (commandKeyword.equals(BYE)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            return handleByeCommand(ui);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        if (commandKeyword.equals(LIST)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            return handleListCommand(ui, tasks);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        if (commandKeyword.equals(DONE)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            return handleDoneCommand(ui, tasks, storage, parsedInput);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        if (commandKeyword.equals(DELETE)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            return handleDeleteCommand(ui, tasks, storage, parsedInput);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        if (commandKeyword.equals(TODO)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            return handleTodoCommand(ui, tasks, storage, parsedInput);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        if (commandKeyword.equals(DEADLINE)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            return handleDeadlineCommand(ui, tasks, storage, parsedInput);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        if (commandKeyword.equals(EVENT)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            return handleEventCommand(ui, tasks, storage, parsedInput);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        if (commandKeyword.equals(FIND)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            return handleFindCommand(ui, tasks, parsedInput);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        throw new DukeException(\"Invalid command keyword\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private static String handleByeCommand(Ui ui) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return ui.sayGoodbye();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private static String handleListCommand(Ui ui, TaskList tasks) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return tasks.getList(ui);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private static String handleDoneCommand(Ui ui, TaskList tasks, Storage storage, String[] parsedInput) throws DukeException, IOException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        if (isValidSize(tasks, parsedInput)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            int taskNumber \u003d getNumber(parsedInput);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            return tasks.markTaskDone(ui, taskNumber, storage);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            throw new DukeException(\"Invalid number for DONE command\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private static String handleDeleteCommand(Ui ui, TaskList tasks, Storage storage, String[] parsedInput) throws DukeException, IOException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        if (isValidSize(tasks, parsedInput)) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            int taskNumber \u003d getNumber(parsedInput);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            return tasks.deleteTask(ui, taskNumber, storage);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            throw new DukeException(\"Invalid number for DELETE command\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private static String handleTodoCommand(Ui ui, TaskList tasks, Storage storage, String[] parsedInput) throws DukeException, IOException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        if (isValidFormat(parsedInput, Task.Type.TODO)) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            Todo newTodo \u003d getTodo(parsedInput);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            return tasks.addTask(newTodo, ui, storage);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            throw new DukeException(\"Invalid TODO format\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private static String handleDeadlineCommand(Ui ui, TaskList tasks, Storage storage, String[] parsedInput) throws DukeException, IOException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        if (isValidFormat(parsedInput, Task.Type.DEADLINE)) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            Deadline newDeadline \u003d getDeadline(parsedInput);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            return tasks.addTask(newDeadline, ui, storage);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            throw new DukeException(\"Invalid DEADLINE format\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private static String handleEventCommand(Ui ui, TaskList tasks, Storage storage, String[] parsedInput) throws DukeException, IOException {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        if (isValidFormat(parsedInput, Task.Type.EVENT)) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            Event newEvent \u003d getEvent(parsedInput);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            return tasks.addTask(newEvent, ui, storage);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            throw new DukeException(\"Invalid EVENT format\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private static String handleFindCommand(Ui ui, TaskList tasks, String[] parsedInput) throws DukeException {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        if (isValidFormat(parsedInput)) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            return tasks.findTask(ui, parsedInput);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            throw new DukeException(\"Invalid FIND format\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public static boolean isBye(String input){"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String commandKeyword \u003d input.split(\" \", 2)[0].toLowerCase();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return commandKeyword.equals(\"bye\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private static boolean isValidSize(TaskList tasks, String[] parsedInput) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        boolean hasDescription \u003d parsedInput.length \u003e 1;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        if (!hasDescription) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String num \u003d parsedInput[1];"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            int number \u003d Integer.parseInt(num);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            return tasks.getListSize() \u003e\u003d number \u0026\u0026 number \u003e 0;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private static int getNumber(String[] parsedInput) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String numberString \u003d parsedInput[1];"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return Integer.parseInt(numberString);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private static Todo getTodo(String[] parsedInput) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return new Todo(parsedInput[1]);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private static Deadline getDeadline(String[] parsedInput) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String description \u003d getDescription(parsedInput[1]);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String time \u003d getTime(parsedInput[1], Task.Type.DEADLINE);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return new Deadline(description, time);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private static Event getEvent(String[] parsedInput) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String description \u003d getDescription(parsedInput[1]);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String time \u003d getTime(parsedInput[1], Task.Type.EVENT);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return new Event(description, time);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private static String getDescription(String body) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return body.split(\" /\", 2)[0];"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private static String getTime(String body, Task.Type type) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String time \u003d \"\";"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        if (type \u003d\u003d Task.Type.DEADLINE) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            time \u003d body.split(\" /by \", 2)[1];"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        if (type \u003d\u003d Task.Type.EVENT) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            time \u003d body.split(\" /at \", 2)[1];"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        if (time.equals(\"now\")) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            return LocalDate.now().format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            return LocalDate.parse(time).format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private static boolean isValidFormat(String[] parsedInput, Task.Type type) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        boolean hasDescription \u003d parsedInput.length \u003e 1;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        if (!hasDescription) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String body \u003d parsedInput[1];"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        if (type \u003d\u003d Task.Type.TODO) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            return !body.equals(\"\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        if (type \u003d\u003d Task.Type.DEADLINE) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            return body.split(DEADLINE_SEPARATOR, 2).length \u003d\u003d 2 \u0026\u0026 isValidTime(body, Task.Type.DEADLINE);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        if (type \u003d\u003d Task.Type.EVENT) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            return body.split(EVENT_SEPARATOR, 2).length \u003d\u003d 2 \u0026\u0026 isValidTime(body, Task.Type.EVENT);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private static boolean isValidFormat(String[] parsedInput) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return parsedInput.length \u003e 1;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private static boolean isValidTime(String body, Task.Type type) throws DateTimeParseException {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String time \u003d \"\";"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        if (type \u003d\u003d Task.Type.DEADLINE) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            time \u003d body.split(\" /by \", 2)[1];"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        if (type \u003d\u003d Task.Type.EVENT) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            time \u003d body.split(\" /at \", 2)[1];"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        if (time.equals(\"now\")) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            LocalDate.parse(time);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hyngkng": 218
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hyngkng"
        },
        "content": " * Responsible for storing the file. A \u003ccode\u003eStorage\u003c/code\u003e object contains a \u003ccode\u003eFile\u003c/code\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hyngkng"
        },
        "content": " * object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hyngkng"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        file \u003d new File(filepath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     * Reads the user\u0027s saved file and returns a list of all the tasks found in the file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     * @return A list of task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     * @throws FileNotFoundException When no file is found."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     * @throws DukeException When no file is found."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public ArrayList\u003cTask\u003e loadFile() throws FileNotFoundException, DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        if (file.exists()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "                tasks.add(getTask(scanner.nextLine()));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            throw new DukeException(\"No file found\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     * Writes what is in the task list into the user\u0027s safe file."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     * @param tasks TaskList to be read."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     * @throws DukeException When no file is found."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public void writeFile(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        FileWriter writer \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        writer.write(tasks.toString());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private static Task getTask(String line) throws DukeException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String[] parsed \u003d line.split(\"]\", 3);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String type \u003d parsed[0].substring(1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String status \u003d parsed[1].substring(1);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        boolean isDone \u003d (status.equals(\"\\u2713\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String body \u003d parsed[2].substring(1);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            return new Todo(body, isDone);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            String[] dParsed \u003d body.split(\" - \", 2);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            String dDescription \u003d dParsed[0];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            String deadline \u003d dParsed[1];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            return new Deadline(dDescription, deadline, isDone);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            String[] eParsed \u003d body.split(\" - \", 2);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            String eDescription \u003d eParsed[0];"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            String eventTime \u003d eParsed[1];"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            return new Event(eDescription, eventTime, isDone);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            throw new DukeException(\"Error finding task\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hyngkng": 75
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hyngkng"
        },
        "content": " * Represents a Task. A \u003ccode\u003eTask\u003c/code\u003e object contains a description, keeps track of"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hyngkng"
        },
        "content": " * whether it has been completed and stores a type."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hyngkng"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    protected Type type;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     * Task types available."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public enum Type {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        TODO, DEADLINE, EVENT, NONE"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    protected Task(String desc) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        this.description \u003d desc;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        this.type \u003d Type.NONE;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return this.getTypeIcon() + this.getStatusIcon() + \" \" + description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    protected String getStatusIcon() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String icon \u003d (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return \"[\" + icon + \"]\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    protected String getTypeIcon() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String icon;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            icon \u003d \"T\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            icon \u003d \"D\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            icon \u003d \"E\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        case NONE:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            icon \u003d \"?\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            icon \u003d \"!\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return \"[\" + icon + \"]\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hyngkng": 57
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hyngkng"
        },
        "content": " * Responsible for storing a list of Tasks and interaction with the Tasks."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hyngkng"
        },
        "content": " * A \u003ccode\u003eTaskList\u003c/code\u003e contains an \u003ccode\u003eArrayList\u003c/code\u003e object."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hyngkng"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        tasks \u003d taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String listString \u003d \"\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            listString +\u003d task + \"\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return listString;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public String getList(Ui ui) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            return ui.sayCurrentListIsEmpty();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            String currentList \u003d \"\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            int count \u003d 1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "                currentList +\u003d count + \". \" + task + \"\\n\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            return ui.sayCurrentList(currentList);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public String markTaskDone(Ui ui, int taskNumber, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        Task task \u003d tasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        task.markDone();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        storage.writeFile(this);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return ui.sayMarkedAsDone(task);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public String deleteTask(Ui ui, int taskNumber, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        Task task \u003d tasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        tasks.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        storage.writeFile(this);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return ui.sayDeletedTask(task, getListSize());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     * Adds a task to the back of the list."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     * @param task The Task to be added."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     * @param ui A Ui object."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public String addTask(Task task, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        storage.writeFile(this);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return ui.sayAddedTask(task, getListSize());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public String findTask(Ui ui, String[] parsedInput) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        if (tasks.size() \u003e 0) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            String body \u003d parsedInput[1];"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            String foundTasks \u003d \"\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            boolean noneFound \u003d true;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "                if (task.toString().contains(body)) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "                    foundTasks +\u003d task + \"\\n\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "                    noneFound \u003d false;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            if (!noneFound) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "                return ui.sayFoundTasks(foundTasks);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "                return ui.sayNoMatchingFileFound();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            return ui.sayCurrentListIsEmpty();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     * Gets the size of the list."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     * @return The list size."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public int getListSize() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hyngkng": 110
    }
  },
  {
    "path": "src/main/java/TimedTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hyngkng"
        },
        "content": " * Represents a TimedTask. A \u003ccode\u003eTimedTask\u003c/code\u003e object contains a description,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hyngkng"
        },
        "content": " * keeps track of whether it has been completed, stores a type as well as time."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hyngkng"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "public class TimedTask extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public TimedTask(String description, String when) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        this.time \u003d when;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return this.getTypeIcon() + this.getStatusIcon() + \" \" + description + \" - \" + time;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hyngkng": 17
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hyngkng"
        },
        "content": " * Represents a Todo Task. A \u003ccode\u003eTodo\u003c/code\u003e object contains a description and"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hyngkng"
        },
        "content": " * keeps track of whether it has been completed."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hyngkng"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        super.type \u003d Task.Type.TODO;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        super.isDone \u003d isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        super.type \u003d Task.Type.TODO;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hyngkng": 17
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hyngkng"
        },
        "content": " * Keeps track of user input. A \u003ccode\u003eUi\u003c/code\u003e object contains a \u003ccode\u003eScanner\u003c/code\u003e object."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hyngkng"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private static final String BOT_NAME \u003d \"Duke: \";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     * Reads the user input and return it."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     * @return user input."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public String receiveUserInput() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String userInput \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     * Greets the user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public String sayGreetings() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String message \u003d BOT_NAME + \"Hello! How may I help you?\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     * Says goodbye to the user."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public String sayGoodbye() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String message \u003d BOT_NAME + \"Bye. Hope to see you again!\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public String informFileNotFound() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String message \u003d BOT_NAME + \"It seems like you have no saved files! Creating one now...\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public String sayErrorMessage(Exception e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String errorMessage \u003d BOT_NAME + \"Error! \" + e.getMessage();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        System.out.println(errorMessage);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return errorMessage;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public String sayCurrentListIsEmpty() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String message \u003d BOT_NAME + \"Your task list is currently empty.\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public String sayCurrentList(String currentList) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String message \u003d BOT_NAME + \"Here are your tasks:\\n\" + currentList;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public String sayMarkedAsDone(Task task) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String message \u003d BOT_NAME + \"I have marked it as done!\\n\" + task;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public String sayDeletedTask(Task task, int listSize) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String message \u003d BOT_NAME + \"I have deleted this task!\\n\" + task;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        message +\u003d \"\\n\" + \"Current list size: \" + listSize;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public String sayAddedTask(Task task, int listSize) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String message \u003d BOT_NAME + \"I have added this task!\\n\" + task;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        message +\u003d \"\\n\" + \"Current list size: \" + listSize;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public String sayFoundTasks(String foundTasks) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String message \u003d BOT_NAME + \"Here are the matching tasks found:\\n\" + foundTasks;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public String sayNoMatchingFileFound() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String message \u003d BOT_NAME + \"No matching file found!\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hyngkng": 101
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background-color: skyblue;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-border-color: black; -fx-background-color: pink; -fx-border-radius: 3; -fx-background-radius: 3; -fx-effect: dropshadow(gaussian, black, 10, 0.0, 2, 2);\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" style\u003d\"-fx-effect: dropshadow(gaussian, black, 10, 0.0, 3, 3);\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "hyngkng": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            \u003cFont size\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "         \u003c/font\u003e\u003c/Button\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: skyblue;\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "hyngkng": 23
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hyngkng": 10
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public void string() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        Todo todo \u003d new Todo(\"todo\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"deadline\", \"2020-08-25\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        Event event \u003d new Event(\"event\", \"2020-08-25\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        tasks.addTask(todo, ui);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        tasks.addTask(deadline, ui);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        tasks.addTask(event, ui);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        String expected \u003d \"[T][\\u2718] todo\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "                + \"[D][\\u2718] deadline - 2020-08-25\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "                + \"[E][\\u2718] event - 2020-08-25\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        assertEquals(tasks.toString(), expected);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hyngkng": 23
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hyngkng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    public void string() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        Task task \u003d new Task(\"test\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        assertEquals(task.toString(), \"[?][\\u2718] test\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        task.markDone();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "        assertEquals(task.toString(), \"[?][\\u2713] test\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hyngkng": 13
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "test"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "todo quiz"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "todo decorations"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "deadline homework /at 5pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "deadline homework /by 5pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "event birthday /by today"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "event birthday /at today"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "done 6"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "hyngkng": 13
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hyngkng"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "hyngkng": 1,
      "-": 20
    }
  }
]
