[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":16,"author":{"gitId":"tjwjoe"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":18,"author":{"gitId":"tjwjoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"tjwjoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"tjwjoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"tjwjoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"tjwjoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"tjwjoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"tjwjoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"tjwjoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"tjwjoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"tjwjoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"tjwjoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"tjwjoe"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"tjwjoe"},"content":"    mainClassName \u003d \"gui.Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"tjwjoe"},"content":"    toolVersion \u003d \u00278.32\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"tjwjoe":17,"-":44}},{"path":"data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tjwjoe"},"content":"D # 1 # IPPT # 31/10/1998 23:59"},{"lineNumber":2,"author":{"gitId":"tjwjoe"},"content":"E # 0 # Friend Dinner # 25/08/2021 11:53"},{"lineNumber":3,"author":{"gitId":"tjwjoe"},"content":"E # 1 # National Day # 09/08/2020 12:00"},{"lineNumber":4,"author":{"gitId":"tjwjoe"},"content":"D # 0 # Assignment # 07/09/2020 23:59"}],"authorContributionMap":{"tjwjoe":4}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"tjwjoe"},"content":"Welcome to Duke! Duke is a chat bot that helps you keep track of tasks, including deadlines and events!"},{"lineNumber":3,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":4,"author":{"gitId":"tjwjoe"},"content":"## Quick Start"},{"lineNumber":5,"author":{"gitId":"tjwjoe"},"content":"To get started, download the duke.jar file to your computer and place it in a folder of your choosing. To launch Duke, "},{"lineNumber":6,"author":{"gitId":"tjwjoe"},"content":"run the .jar file, and the Duke window should open shortly."},{"lineNumber":7,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":8,"author":{"gitId":"tjwjoe"},"content":"As a first command, create a new example ToDo task by typing in \"todo play around with Duke\" "},{"lineNumber":9,"author":{"gitId":"tjwjoe"},"content":"without the quotation marks. This will create the task \"play around with Duke\" and place it in your task list. To check"},{"lineNumber":10,"author":{"gitId":"tjwjoe"},"content":"that it has been added correctly, type in the \"list\" command to display the task list."},{"lineNumber":11,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":12,"author":{"gitId":"tjwjoe"},"content":"Next, try using the \"done 1\" and \"undone 1\" commands to mark the task done and not done respectively. Like before, you "},{"lineNumber":13,"author":{"gitId":"tjwjoe"},"content":"can verify that the commands worked by using \"list\" to view the task list. The number you enter represents the number "},{"lineNumber":14,"author":{"gitId":"tjwjoe"},"content":"of the task, so if you want to mark the third task in the list as done, use type in \"done 3\" instead of 1."},{"lineNumber":15,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":16,"author":{"gitId":"tjwjoe"},"content":"Finally, to close off this brief tutorial, use the command \"delete 1\" to delete the example task from your list. You can "},{"lineNumber":17,"author":{"gitId":"tjwjoe"},"content":"\"list\" once again to display your task list, which by now should be empty."},{"lineNumber":18,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":19,"author":{"gitId":"tjwjoe"},"content":"If you ever forget which command to use, you can type \"help\" to view the entire list of commands that you can use in"},{"lineNumber":20,"author":{"gitId":"tjwjoe"},"content":"interacting with Duke, including the more advanced \"find\" and \"upcoming\" commands!"},{"lineNumber":21,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":22,"author":{"gitId":"tjwjoe"},"content":"Have fun using Duke!"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":25,"author":{"gitId":"tjwjoe"},"content":"1. Add a new task to your list"},{"lineNumber":26,"author":{"gitId":"tjwjoe"},"content":"1. Delete a task from your list"},{"lineNumber":27,"author":{"gitId":"tjwjoe"},"content":"1. Mark a task as done or not done"},{"lineNumber":28,"author":{"gitId":"tjwjoe"},"content":"1. Search for a task using keywords"},{"lineNumber":29,"author":{"gitId":"tjwjoe"},"content":"1. Display your current list of tasks"},{"lineNumber":30,"author":{"gitId":"tjwjoe"},"content":"1. Display all tasks occurring within the next X days"},{"lineNumber":31,"author":{"gitId":"tjwjoe"},"content":"1. Store your list of tasks in the hard disk"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"tjwjoe"},"content":"### Adding a new task to your list"},{"lineNumber":34,"author":{"gitId":"tjwjoe"},"content":"Adds a new task (a ToDo, a deadline or an event) to your current list of tasks."},{"lineNumber":35,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":36,"author":{"gitId":"tjwjoe"},"content":"### Deleting a task from your list"},{"lineNumber":37,"author":{"gitId":"tjwjoe"},"content":"Deletes a task from your current list of tasks."},{"lineNumber":38,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":39,"author":{"gitId":"tjwjoe"},"content":"### Marking a task as done or not done"},{"lineNumber":40,"author":{"gitId":"tjwjoe"},"content":"Marks a task in your list as done, or marks a done task as not done."},{"lineNumber":41,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":42,"author":{"gitId":"tjwjoe"},"content":"### Searching for tasks using keywords"},{"lineNumber":43,"author":{"gitId":"tjwjoe"},"content":"Searches for all tasks containing the exact keywords you entered, similar to Ctrl-F on the browser or text editors."},{"lineNumber":44,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":45,"author":{"gitId":"tjwjoe"},"content":"### Display your current list of tasks"},{"lineNumber":46,"author":{"gitId":"tjwjoe"},"content":"Shows you your entire list of tasks."},{"lineNumber":47,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":48,"author":{"gitId":"tjwjoe"},"content":"### Display all tasks occurring in the next X days"},{"lineNumber":49,"author":{"gitId":"tjwjoe"},"content":"Shows you all your deadlines and events which are occurring in the next X days."},{"lineNumber":50,"author":{"gitId":"-"},"content":""},{"lineNumber":51,"author":{"gitId":"tjwjoe"},"content":"### Storing your list of tasks in the hard disk"},{"lineNumber":52,"author":{"gitId":"tjwjoe"},"content":"Duke will auto-save your list of tasks, so you can see the same list the next time you launch Duke. "},{"lineNumber":53,"author":{"gitId":"tjwjoe"},"content":"To close Duke without saving, close the window without using the \"exit\" keyword, such as by using the shortcut Alt-F4 or"},{"lineNumber":54,"author":{"gitId":"tjwjoe"},"content":"using End Task in Windows Task Manager."},{"lineNumber":55,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":56,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":57,"author":{"gitId":"tjwjoe"},"content":"If you wish to transfer your data to another computer, follow these simple steps:"},{"lineNumber":58,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":59,"author":{"gitId":"tjwjoe"},"content":"1. Go to the folder where your duke.jar file is"},{"lineNumber":60,"author":{"gitId":"tjwjoe"},"content":"1. Locate the text file named \"data\""},{"lineNumber":61,"author":{"gitId":"tjwjoe"},"content":"1. Create a new folder and copy the duke.jar and data.txt files inside"},{"lineNumber":62,"author":{"gitId":"tjwjoe"},"content":"1. Transfer this folder to your new computer"},{"lineNumber":63,"author":{"gitId":"tjwjoe"},"content":"1. Ensure that the folder on the new computer still contains both the duke.jar and data.txt files"},{"lineNumber":64,"author":{"gitId":"tjwjoe"},"content":"1. You\u0027re done!"},{"lineNumber":65,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":66,"author":{"gitId":"tjwjoe"},"content":"Ensure that your data.txt and duke.jar are in the **same folder**. If Duke cannot find the data.txt file in the folder,"},{"lineNumber":67,"author":{"gitId":"tjwjoe"},"content":"it will simply create a fresh data file from scratch. Additionally, make sure to not lose your original data.txt, or "},{"lineNumber":68,"author":{"gitId":"tjwjoe"},"content":"your task list data will be **lost**!"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"tjwjoe"},"content":"### `todo \u003ctask description\u003e` - Add a new ToDo"},{"lineNumber":73,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":74,"author":{"gitId":"tjwjoe"},"content":"Adds a new \"ToDo\" task with the given description to your list."},{"lineNumber":75,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":76,"author":{"gitId":"tjwjoe"},"content":"Example of usage: "},{"lineNumber":77,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":78,"author":{"gitId":"tjwjoe"},"content":"`todo Buy new clothes`"},{"lineNumber":79,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":80,"author":{"gitId":"tjwjoe"},"content":"Expected outcome:"},{"lineNumber":81,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":82,"author":{"gitId":"tjwjoe"},"content":"`Added new task: Buy new clothes"},{"lineNumber":83,"author":{"gitId":"tjwjoe"},"content":"You now have 1 task in your list.`"},{"lineNumber":84,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":85,"author":{"gitId":"tjwjoe"},"content":"The ToDo task will be added to your task list."},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"tjwjoe"},"content":"### `deadline \u003ctask description\u003e /by \u003cdate of task in DD/MM/YYYY format\u003e \u003ctime of task in hh:mm format\u003e` - Add a new Deadline"},{"lineNumber":88,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":89,"author":{"gitId":"tjwjoe"},"content":"Adds a new \"Deadline\" task with the given description, date and time to your list."},{"lineNumber":90,"author":{"gitId":"-"},"content":""},{"lineNumber":91,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":92,"author":{"gitId":"-"},"content":""},{"lineNumber":93,"author":{"gitId":"tjwjoe"},"content":"`deadline Math Assignment /by 20/10/2020 23:59`"},{"lineNumber":94,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":95,"author":{"gitId":"tjwjoe"},"content":"Expected outcome:"},{"lineNumber":96,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":97,"author":{"gitId":"tjwjoe"},"content":"`Added new task: Math Assignment"},{"lineNumber":98,"author":{"gitId":"tjwjoe"},"content":"You now have 2 tasks in your list.`"},{"lineNumber":99,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":100,"author":{"gitId":"tjwjoe"},"content":"The deadline \"Math Assignment\" will be added to your task list."},{"lineNumber":101,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":102,"author":{"gitId":"tjwjoe"},"content":"_NOTE: it is important that you follow the given format exactly. Duke will prompt you if you use an incorrect format._"},{"lineNumber":103,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":104,"author":{"gitId":"tjwjoe"},"content":"### `event \u003ctask description\u003e /at \u003cdate of task in DD/MM/YYYY format\u003e \u003ctime of task in hh:mm format\u003e` - Add a new Event"},{"lineNumber":105,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":106,"author":{"gitId":"tjwjoe"},"content":"Adds a new \"Event\" task with the given description, date and time to your list."},{"lineNumber":107,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":108,"author":{"gitId":"tjwjoe"},"content":"Example of usage:"},{"lineNumber":109,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":110,"author":{"gitId":"tjwjoe"},"content":"`event Mom\u0027s birthday /at 05/11/2020 00:00`"},{"lineNumber":111,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":112,"author":{"gitId":"tjwjoe"},"content":"Expected outcome:"},{"lineNumber":113,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":114,"author":{"gitId":"tjwjoe"},"content":"`Added new task: Mom\u0027s birthday "},{"lineNumber":115,"author":{"gitId":"tjwjoe"},"content":"You now have 3 tasks in your list.`"},{"lineNumber":116,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":117,"author":{"gitId":"tjwjoe"},"content":"The event \"Mom\u0027s birthday\" will be added to your task list."},{"lineNumber":118,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":119,"author":{"gitId":"tjwjoe"},"content":"### `delete \u003cnumber of the task you want to delete\u003e` - Deletes a task"},{"lineNumber":120,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":121,"author":{"gitId":"tjwjoe"},"content":"Deletes a task from your task list. The number you enter refers to the number of the task in the list. "},{"lineNumber":122,"author":{"gitId":"tjwjoe"},"content":"Be careful, this action is permanent!"},{"lineNumber":123,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":124,"author":{"gitId":"tjwjoe"},"content":"Example of usage:"},{"lineNumber":125,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":126,"author":{"gitId":"tjwjoe"},"content":"`delete 2`"},{"lineNumber":127,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":128,"author":{"gitId":"tjwjoe"},"content":"Expected outcome:"},{"lineNumber":129,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":130,"author":{"gitId":"tjwjoe"},"content":"`The task [D][X] Math Assignment (by Oct 20 2020 23:59) has been deleted from your list.`"},{"lineNumber":131,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":132,"author":{"gitId":"tjwjoe"},"content":"The second task in your list (Math Assignment) will be deleted from your list."},{"lineNumber":133,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":134,"author":{"gitId":"tjwjoe"},"content":"### `done \u003cnumber of task you want to mark as done\u003e` - Marks a task as done"},{"lineNumber":135,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":136,"author":{"gitId":"tjwjoe"},"content":"Marks a task in your list as done. The number you enter refers to the number of the task in the list. "},{"lineNumber":137,"author":{"gitId":"tjwjoe"},"content":"The opposite of this action is the \"undone\" command."},{"lineNumber":138,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":139,"author":{"gitId":"tjwjoe"},"content":"Example of usage:"},{"lineNumber":140,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":141,"author":{"gitId":"tjwjoe"},"content":"`done 2`"},{"lineNumber":142,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":143,"author":{"gitId":"tjwjoe"},"content":"Expected outcome:"},{"lineNumber":144,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":145,"author":{"gitId":"tjwjoe"},"content":"`Congrats, I\u0027ve marked this task as done!`"},{"lineNumber":146,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":147,"author":{"gitId":"tjwjoe"},"content":"The second task in your list (now Mom\u0027s Birthday) will be marked as done."},{"lineNumber":148,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":149,"author":{"gitId":"tjwjoe"},"content":"### `undone \u003cnumber of task you want to mark as done\u003e` - Marks a task as not done"},{"lineNumber":150,"author":{"gitId":"-"},"content":""},{"lineNumber":151,"author":{"gitId":"tjwjoe"},"content":"Marks a task in your list as not done. The number you enter refers to the number of the task in the list. "},{"lineNumber":152,"author":{"gitId":"tjwjoe"},"content":"The opposite of this action is the \"done\" command."},{"lineNumber":153,"author":{"gitId":"-"},"content":""},{"lineNumber":154,"author":{"gitId":"-"},"content":"Example of usage:"},{"lineNumber":155,"author":{"gitId":"-"},"content":""},{"lineNumber":156,"author":{"gitId":"tjwjoe"},"content":"`undone 2`"},{"lineNumber":157,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":158,"author":{"gitId":"tjwjoe"},"content":"Expected outcome:"},{"lineNumber":159,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":160,"author":{"gitId":"tjwjoe"},"content":"`I\u0027ve marked that task as unfinished.`"},{"lineNumber":161,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":162,"author":{"gitId":"tjwjoe"},"content":"The second task in your list (Mom\u0027s Birthday) will be marked as not done."},{"lineNumber":163,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":164,"author":{"gitId":"tjwjoe"},"content":"### `find \u003ckeywords\u003e` - Searches your tasks containing the keywords"},{"lineNumber":165,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":166,"author":{"gitId":"tjwjoe"},"content":"Searches your task list for all tasks containing the exact keywords. It works similar to Ctrl-F on your browser or text editors."},{"lineNumber":167,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":168,"author":{"gitId":"tjwjoe"},"content":"Example usage:"},{"lineNumber":169,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":170,"author":{"gitId":"tjwjoe"},"content":"```"},{"lineNumber":171,"author":{"gitId":"tjwjoe"},"content":"todo Buy new chair"},{"lineNumber":172,"author":{"gitId":"tjwjoe"},"content":"todo Buy new table"},{"lineNumber":173,"author":{"gitId":"tjwjoe"},"content":"find Buy new"},{"lineNumber":174,"author":{"gitId":"tjwjoe"},"content":"```"},{"lineNumber":175,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":176,"author":{"gitId":"tjwjoe"},"content":"Expected outcome:"},{"lineNumber":177,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":178,"author":{"gitId":"tjwjoe"},"content":"```"},{"lineNumber":179,"author":{"gitId":"tjwjoe"},"content":"I found 3 tasks matching your keywords:"},{"lineNumber":180,"author":{"gitId":"tjwjoe"},"content":"1.[T][X] Buy new clothes"},{"lineNumber":181,"author":{"gitId":"tjwjoe"},"content":"2.[T][X] Buy new chair"},{"lineNumber":182,"author":{"gitId":"tjwjoe"},"content":"3.[T][X] Buy new table"},{"lineNumber":183,"author":{"gitId":"tjwjoe"},"content":"```"},{"lineNumber":184,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":185,"author":{"gitId":"tjwjoe"},"content":"### `list` - Shows you your entire list of tasks"},{"lineNumber":186,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":187,"author":{"gitId":"tjwjoe"},"content":"Displays your entire list of tasks for you to read."},{"lineNumber":188,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":189,"author":{"gitId":"tjwjoe"},"content":"Example usage:"},{"lineNumber":190,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":191,"author":{"gitId":"tjwjoe"},"content":"list"},{"lineNumber":192,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":193,"author":{"gitId":"tjwjoe"},"content":"Expected outcome:"},{"lineNumber":194,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":195,"author":{"gitId":"tjwjoe"},"content":"```"},{"lineNumber":196,"author":{"gitId":"tjwjoe"},"content":"Here are your tasks:"},{"lineNumber":197,"author":{"gitId":"tjwjoe"},"content":"---------------------------------------------------------------"},{"lineNumber":198,"author":{"gitId":"tjwjoe"},"content":"1.[T][X] Buy new clothes"},{"lineNumber":199,"author":{"gitId":"tjwjoe"},"content":"2.[T][X] Mom\u0027s Birthday (at Nov 05 2020 14:00)"},{"lineNumber":200,"author":{"gitId":"tjwjoe"},"content":"3.[T][X] Buy new chair"},{"lineNumber":201,"author":{"gitId":"tjwjoe"},"content":"4.[T][X] Buy new table"},{"lineNumber":202,"author":{"gitId":"tjwjoe"},"content":"---------------------------------------------------------------"},{"lineNumber":203,"author":{"gitId":"tjwjoe"},"content":"```"},{"lineNumber":204,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":205,"author":{"gitId":"tjwjoe"},"content":"### `upcoming \u003cX number of days\u003e` - Shows you all upcoming tasks"},{"lineNumber":206,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":207,"author":{"gitId":"tjwjoe"},"content":"Duke will display all upcoming deadlines or events occurring within the number of days you enter. "},{"lineNumber":208,"author":{"gitId":"tjwjoe"},"content":"Since ToDos have no date or time associated with them, they will not be displayed."},{"lineNumber":209,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":210,"author":{"gitId":"tjwjoe"},"content":"Example usage:"},{"lineNumber":211,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":212,"author":{"gitId":"tjwjoe"},"content":"`deadline Math Assignment /by 19/09/2020 23:59"},{"lineNumber":213,"author":{"gitId":"tjwjoe"},"content":"upcoming 7`"},{"lineNumber":214,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":215,"author":{"gitId":"tjwjoe"},"content":"Expected outcome:"},{"lineNumber":216,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":217,"author":{"gitId":"tjwjoe"},"content":"```"},{"lineNumber":218,"author":{"gitId":"tjwjoe"},"content":"I found 1 task occurring in the next 7 days:"},{"lineNumber":219,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":220,"author":{"gitId":"tjwjoe"},"content":"1.[D][X] Math Assignment (by: Sep 19 2020 23:59)"},{"lineNumber":221,"author":{"gitId":"tjwjoe"},"content":"```"},{"lineNumber":222,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":223,"author":{"gitId":"tjwjoe"},"content":"### `exit` - Quits and saves"},{"lineNumber":224,"author":{"gitId":"tjwjoe"},"content":"Shuts down Duke after auto-saving your task list. If you shut down Duke without using this keyword, such as"},{"lineNumber":225,"author":{"gitId":"tjwjoe"},"content":"by using Alt-F4 or Windows Task Manager, Duke will not save your task list."},{"lineNumber":226,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":227,"author":{"gitId":"tjwjoe"},"content":"Example usage:"},{"lineNumber":228,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":229,"author":{"gitId":"tjwjoe"},"content":"`exit`"},{"lineNumber":230,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":231,"author":{"gitId":"tjwjoe"},"content":"Expected outcome:"},{"lineNumber":232,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":233,"author":{"gitId":"tjwjoe"},"content":"`Goodbye!`"},{"lineNumber":234,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":235,"author":{"gitId":"tjwjoe"},"content":"Duke will then exit and the window will close."},{"lineNumber":236,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":237,"author":{"gitId":"tjwjoe"},"content":"### `help` - Help message"},{"lineNumber":238,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":239,"author":{"gitId":"tjwjoe"},"content":"Displays a help message that tells you what each command does, so you don\u0027t have to refer to this guide."},{"lineNumber":240,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":241,"author":{"gitId":"tjwjoe"},"content":"Example usage:"},{"lineNumber":242,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":243,"author":{"gitId":"tjwjoe"},"content":"`help`"},{"lineNumber":244,"author":{"gitId":"-"},"content":""},{"lineNumber":245,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":246,"author":{"gitId":"-"},"content":""},{"lineNumber":247,"author":{"gitId":"tjwjoe"},"content":"```"},{"lineNumber":248,"author":{"gitId":"tjwjoe"},"content":"Welcome to Duke! Here is a list of commands you can use:"},{"lineNumber":249,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":250,"author":{"gitId":"tjwjoe"},"content":"todo \u003cname\u003e - adds a Todo task to your list"},{"lineNumber":251,"author":{"gitId":"tjwjoe"},"content":"deadline \u003cname\u003e /by \u003ctime\u003e - adds a Deadline task to your list"},{"lineNumber":252,"author":{"gitId":"tjwjoe"},"content":"event \u003cname\u003e /at \u003ctime\u003e - adds an Event task to your list"},{"lineNumber":253,"author":{"gitId":"tjwjoe"},"content":"list - displays the current list of your tasks"},{"lineNumber":254,"author":{"gitId":"tjwjoe"},"content":"done \u003cnumber\u003e - marks a task as done"},{"lineNumber":255,"author":{"gitId":"tjwjoe"},"content":"undone \u003cnumber\u003e - marks a task as not done"},{"lineNumber":256,"author":{"gitId":"tjwjoe"},"content":"delete \u003cnumber\u003e - deletes a task from your list"},{"lineNumber":257,"author":{"gitId":"tjwjoe"},"content":"find \u003ckeyword\u003e - displays all tasks containing the exact keyword"},{"lineNumber":258,"author":{"gitId":"tjwjoe"},"content":"upcoming \u003cnumber\u003e - displays all tasks occurring within the given number of days"},{"lineNumber":259,"author":{"gitId":"tjwjoe"},"content":"help - displays this helpful message"},{"lineNumber":260,"author":{"gitId":"tjwjoe"},"content":"exit - shuts down the bot"},{"lineNumber":261,"author":{"gitId":"tjwjoe"},"content":"```"}],"authorContributionMap":{"tjwjoe":242,"-":19}},{"path":"src/main/java/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjwjoe"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":3,"author":{"gitId":"tjwjoe"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"tjwjoe"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"tjwjoe"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":6,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":7,"author":{"gitId":"tjwjoe"},"content":"import duke.Storage;"},{"lineNumber":8,"author":{"gitId":"tjwjoe"},"content":"import duke.Ui;"},{"lineNumber":9,"author":{"gitId":"tjwjoe"},"content":"import exceptions.BadDtFormatException;"},{"lineNumber":10,"author":{"gitId":"tjwjoe"},"content":"import exceptions.InvalidTaskException;"},{"lineNumber":11,"author":{"gitId":"tjwjoe"},"content":"import exceptions.InvalidTimeException;"},{"lineNumber":12,"author":{"gitId":"tjwjoe"},"content":"import exceptions.UnknownCmdException;"},{"lineNumber":13,"author":{"gitId":"tjwjoe"},"content":"import tasks.Deadline;"},{"lineNumber":14,"author":{"gitId":"tjwjoe"},"content":"import tasks.Event;"},{"lineNumber":15,"author":{"gitId":"tjwjoe"},"content":"import tasks.TaskList;"},{"lineNumber":16,"author":{"gitId":"tjwjoe"},"content":"import tasks.Todo;"},{"lineNumber":17,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":18,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":19,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":20,"author":{"gitId":"tjwjoe"},"content":"/**"},{"lineNumber":21,"author":{"gitId":"tjwjoe"},"content":" * Represents an instruction from a user to add a new task to the list."},{"lineNumber":22,"author":{"gitId":"tjwjoe"},"content":" */"},{"lineNumber":23,"author":{"gitId":"tjwjoe"},"content":"public class AddCommand extends Command {"},{"lineNumber":24,"author":{"gitId":"tjwjoe"},"content":"    private String text;"},{"lineNumber":25,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":26,"author":{"gitId":"tjwjoe"},"content":"    public AddCommand(String text) {"},{"lineNumber":27,"author":{"gitId":"tjwjoe"},"content":"        this.text \u003d text;"},{"lineNumber":28,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":30,"author":{"gitId":"tjwjoe"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"tjwjoe"},"content":"     * Executes the command to add the task to the list."},{"lineNumber":32,"author":{"gitId":"tjwjoe"},"content":"     * @param tasks The current TaskList."},{"lineNumber":33,"author":{"gitId":"tjwjoe"},"content":"     * @param ui The Ui object in use."},{"lineNumber":34,"author":{"gitId":"tjwjoe"},"content":"     * @param storage The Storage object in use."},{"lineNumber":35,"author":{"gitId":"tjwjoe"},"content":"     * @throws InvalidTaskException If the task name is empty."},{"lineNumber":36,"author":{"gitId":"tjwjoe"},"content":"     * @throws UnknownCmdException If an unknown command is entered."},{"lineNumber":37,"author":{"gitId":"tjwjoe"},"content":"     * @throws InvalidTimeException If the time for the task is invalid."},{"lineNumber":38,"author":{"gitId":"tjwjoe"},"content":"     * @throws BadDtFormatException If the format of the date and time entered does not match."},{"lineNumber":39,"author":{"gitId":"tjwjoe"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"tjwjoe"},"content":"    @Override"},{"lineNumber":41,"author":{"gitId":"tjwjoe"},"content":"    public void exec(TaskList tasks, Ui ui, Storage storage) throws InvalidTaskException, UnknownCmdException,"},{"lineNumber":42,"author":{"gitId":"tjwjoe"},"content":"            InvalidTimeException, BadDtFormatException {"},{"lineNumber":43,"author":{"gitId":"tjwjoe"},"content":"        String[] info \u003d extractStringInfo(text);"},{"lineNumber":44,"author":{"gitId":"tjwjoe"},"content":"        assert ui !\u003d null : \"Null UI\";"},{"lineNumber":45,"author":{"gitId":"tjwjoe"},"content":"        assert tasks !\u003d null : \"Null TaskList\";"},{"lineNumber":46,"author":{"gitId":"tjwjoe"},"content":"        if (info[0].equals(\"todo\")) {"},{"lineNumber":47,"author":{"gitId":"tjwjoe"},"content":"            tasks.addItem(new Todo(info[1], false));"},{"lineNumber":48,"author":{"gitId":"tjwjoe"},"content":"            ui.setMessageNewTask(info[1], tasks.size());"},{"lineNumber":49,"author":{"gitId":"tjwjoe"},"content":"        } else if (info[0].equals(\"deadline\")) {"},{"lineNumber":50,"author":{"gitId":"tjwjoe"},"content":"            tasks.addItem(new Deadline(info[1], stringToTime(info[2]), false));"},{"lineNumber":51,"author":{"gitId":"tjwjoe"},"content":"            ui.setMessageNewTask(info[1], tasks.size());"},{"lineNumber":52,"author":{"gitId":"tjwjoe"},"content":"        } else {"},{"lineNumber":53,"author":{"gitId":"tjwjoe"},"content":"            tasks.addItem(new Event(info[1], stringToTime(info[2]), false));"},{"lineNumber":54,"author":{"gitId":"tjwjoe"},"content":"            ui.setMessageNewTask(info[1], tasks.size());"},{"lineNumber":55,"author":{"gitId":"tjwjoe"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":58,"author":{"gitId":"tjwjoe"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"tjwjoe"},"content":"     * Breaks down and stores user input in a string array for easy access."},{"lineNumber":60,"author":{"gitId":"tjwjoe"},"content":"     * @param str String to be broken down."},{"lineNumber":61,"author":{"gitId":"tjwjoe"},"content":"     * @return A string array split according to the information categories."},{"lineNumber":62,"author":{"gitId":"tjwjoe"},"content":"     * @throws InvalidTaskException If task description is empty."},{"lineNumber":63,"author":{"gitId":"tjwjoe"},"content":"     * @throws UnknownCmdException If an unknown command is entered."},{"lineNumber":64,"author":{"gitId":"tjwjoe"},"content":"     * @throws InvalidTimeException If an invalid time is entered for a Deadline or Event task."},{"lineNumber":65,"author":{"gitId":"tjwjoe"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"tjwjoe"},"content":"    public String[] extractStringInfo(String str) throws InvalidTaskException, UnknownCmdException,"},{"lineNumber":67,"author":{"gitId":"tjwjoe"},"content":"            InvalidTimeException {"},{"lineNumber":68,"author":{"gitId":"tjwjoe"},"content":"        assert str !\u003d null : \"Input is null!\";"},{"lineNumber":69,"author":{"gitId":"tjwjoe"},"content":"        String[] store \u003d new String[3];"},{"lineNumber":70,"author":{"gitId":"tjwjoe"},"content":"        // Handling the classification of event type"},{"lineNumber":71,"author":{"gitId":"tjwjoe"},"content":"        if (str.startsWith(\"todo\")) {"},{"lineNumber":72,"author":{"gitId":"tjwjoe"},"content":"            if (str.strip().equals(\"todo\")) {"},{"lineNumber":73,"author":{"gitId":"tjwjoe"},"content":"                throw new InvalidTaskException(\"Your task cannot be empty!\");"},{"lineNumber":74,"author":{"gitId":"tjwjoe"},"content":"            } else if (!str.startsWith(\"todo \")) {"},{"lineNumber":75,"author":{"gitId":"tjwjoe"},"content":"                throw new UnknownCmdException(\"Unknown command entered! Type \\\"help\\\" to view a list of all \""},{"lineNumber":76,"author":{"gitId":"tjwjoe"},"content":"                        + \"available commands!\");"},{"lineNumber":77,"author":{"gitId":"tjwjoe"},"content":"            } else {"},{"lineNumber":78,"author":{"gitId":"tjwjoe"},"content":"                store[0] \u003d \"todo\";"},{"lineNumber":79,"author":{"gitId":"tjwjoe"},"content":"            }"},{"lineNumber":80,"author":{"gitId":"tjwjoe"},"content":"        } else if (str.startsWith(\"deadline\")) {"},{"lineNumber":81,"author":{"gitId":"tjwjoe"},"content":"            if (str.strip().equals(\"deadline\")) {"},{"lineNumber":82,"author":{"gitId":"tjwjoe"},"content":"                throw new InvalidTaskException(\"Your task cannot be empty!\");"},{"lineNumber":83,"author":{"gitId":"tjwjoe"},"content":"            } else if (!str.startsWith(\"deadline \")) {"},{"lineNumber":84,"author":{"gitId":"tjwjoe"},"content":"                throw new UnknownCmdException(\"Unknown command entered! Type \\\"help\\\" to view a list of all \""},{"lineNumber":85,"author":{"gitId":"tjwjoe"},"content":"                        + \"available commands!\");"},{"lineNumber":86,"author":{"gitId":"tjwjoe"},"content":"            } else {"},{"lineNumber":87,"author":{"gitId":"tjwjoe"},"content":"                store[0] \u003d \"deadline\";"},{"lineNumber":88,"author":{"gitId":"tjwjoe"},"content":"            }"},{"lineNumber":89,"author":{"gitId":"tjwjoe"},"content":"        } else if (str.startsWith(\"event\")) {"},{"lineNumber":90,"author":{"gitId":"tjwjoe"},"content":"            if (str.strip().equals(\"event\")) {"},{"lineNumber":91,"author":{"gitId":"tjwjoe"},"content":"                throw new InvalidTaskException(\"Your task cannot be empty!\");"},{"lineNumber":92,"author":{"gitId":"tjwjoe"},"content":"            } else if (!str.startsWith(\"event \")) {"},{"lineNumber":93,"author":{"gitId":"tjwjoe"},"content":"                throw new UnknownCmdException(\"Unknown command entered! Type \\\"help\\\" to view a list of all \""},{"lineNumber":94,"author":{"gitId":"tjwjoe"},"content":"                        + \"available commands!\");"},{"lineNumber":95,"author":{"gitId":"tjwjoe"},"content":"            } else {"},{"lineNumber":96,"author":{"gitId":"tjwjoe"},"content":"                store[0] \u003d \"event\";"},{"lineNumber":97,"author":{"gitId":"tjwjoe"},"content":"            }"},{"lineNumber":98,"author":{"gitId":"tjwjoe"},"content":"        } else {"},{"lineNumber":99,"author":{"gitId":"tjwjoe"},"content":"            throw new UnknownCmdException(\"Unknown command entered! Type \\\"help\\\" to view a list of all \""},{"lineNumber":100,"author":{"gitId":"tjwjoe"},"content":"                    + \"available commands!\");"},{"lineNumber":101,"author":{"gitId":"tjwjoe"},"content":"        }"},{"lineNumber":102,"author":{"gitId":"tjwjoe"},"content":"        // Handling the content of the event"},{"lineNumber":103,"author":{"gitId":"tjwjoe"},"content":"        int splitPrefix \u003d str.indexOf(\" \");"},{"lineNumber":104,"author":{"gitId":"tjwjoe"},"content":"        String content \u003d str.substring(splitPrefix).strip();"},{"lineNumber":105,"author":{"gitId":"tjwjoe"},"content":"        if (content.length() \u003c\u003d 0) {"},{"lineNumber":106,"author":{"gitId":"tjwjoe"},"content":"            throw new InvalidTaskException(\"Your task cannot be empty!\");"},{"lineNumber":107,"author":{"gitId":"tjwjoe"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"tjwjoe"},"content":"        if (store[0].equals(\"todo\")) {"},{"lineNumber":109,"author":{"gitId":"tjwjoe"},"content":"            store[1] \u003d content;"},{"lineNumber":110,"author":{"gitId":"tjwjoe"},"content":"            store[2] \u003d \"\";"},{"lineNumber":111,"author":{"gitId":"tjwjoe"},"content":"        } else {"},{"lineNumber":112,"author":{"gitId":"tjwjoe"},"content":"            int splitTime \u003d store[0].equals(\"deadline\") ? content.indexOf(\"/by\") : content.indexOf(\"/at\");"},{"lineNumber":113,"author":{"gitId":"tjwjoe"},"content":"            if (splitTime \u003c 0) {"},{"lineNumber":114,"author":{"gitId":"tjwjoe"},"content":"                throw new InvalidTimeException(\"Please use /by (deadlines) or /at (events)! to \""},{"lineNumber":115,"author":{"gitId":"tjwjoe"},"content":"                        + \"indicate the date or time!\");"},{"lineNumber":116,"author":{"gitId":"tjwjoe"},"content":"            }"},{"lineNumber":117,"author":{"gitId":"tjwjoe"},"content":"            String name \u003d content.substring(0, splitTime).strip();"},{"lineNumber":118,"author":{"gitId":"tjwjoe"},"content":"            String time \u003d content.substring(splitTime + 3).strip();"},{"lineNumber":119,"author":{"gitId":"tjwjoe"},"content":"            if (name.length() \u003c\u003d 0) {"},{"lineNumber":120,"author":{"gitId":"tjwjoe"},"content":"                throw new InvalidTaskException(\"Your task cannot be empty!\");"},{"lineNumber":121,"author":{"gitId":"tjwjoe"},"content":"            }"},{"lineNumber":122,"author":{"gitId":"tjwjoe"},"content":"            if (time.length() \u003c\u003d 0) {"},{"lineNumber":123,"author":{"gitId":"tjwjoe"},"content":"                throw new InvalidTimeException(\"Please specify a date or time for this task!\");"},{"lineNumber":124,"author":{"gitId":"tjwjoe"},"content":"            }"},{"lineNumber":125,"author":{"gitId":"tjwjoe"},"content":"            store[1] \u003d name;"},{"lineNumber":126,"author":{"gitId":"tjwjoe"},"content":"            store[2] \u003d time;"},{"lineNumber":127,"author":{"gitId":"tjwjoe"},"content":"        }"},{"lineNumber":128,"author":{"gitId":"tjwjoe"},"content":"        return store;"},{"lineNumber":129,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":131,"author":{"gitId":"tjwjoe"},"content":"    /**"},{"lineNumber":132,"author":{"gitId":"tjwjoe"},"content":"     * Converts a string into a LocalDateTime."},{"lineNumber":133,"author":{"gitId":"tjwjoe"},"content":"     * @param time The string to be parsed."},{"lineNumber":134,"author":{"gitId":"tjwjoe"},"content":"     * @return A LocalDateTime object."},{"lineNumber":135,"author":{"gitId":"tjwjoe"},"content":"     * @throws BadDtFormatException If an invalid string format is entered."},{"lineNumber":136,"author":{"gitId":"tjwjoe"},"content":"     */"},{"lineNumber":137,"author":{"gitId":"tjwjoe"},"content":"    public LocalDateTime stringToTime(String time) throws BadDtFormatException {"},{"lineNumber":138,"author":{"gitId":"tjwjoe"},"content":"        try {"},{"lineNumber":139,"author":{"gitId":"tjwjoe"},"content":"            return LocalDateTime.parse(time, DateTimeFormatter.ofPattern(\"dd/MM/yyyy H:m\"));"},{"lineNumber":140,"author":{"gitId":"tjwjoe"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":141,"author":{"gitId":"tjwjoe"},"content":"            throw new BadDtFormatException(\"Please enter the date and time in the following format: dd/mm/yyyy hh:mm \""},{"lineNumber":142,"author":{"gitId":"tjwjoe"},"content":"                    + \"(24 hour clock)\");"},{"lineNumber":143,"author":{"gitId":"tjwjoe"},"content":"        }"},{"lineNumber":144,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":145,"author":{"gitId":"tjwjoe"},"content":"}"}],"authorContributionMap":{"tjwjoe":145}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjwjoe"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":3,"author":{"gitId":"tjwjoe"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"tjwjoe"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"tjwjoe"},"content":"import exceptions.DukeException;"},{"lineNumber":6,"author":{"gitId":"tjwjoe"},"content":"import tasks.TaskList;"},{"lineNumber":7,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":8,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":9,"author":{"gitId":"tjwjoe"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"tjwjoe"},"content":" * Represents a generic command entered by the user."},{"lineNumber":11,"author":{"gitId":"tjwjoe"},"content":" */"},{"lineNumber":12,"author":{"gitId":"tjwjoe"},"content":"public class Command {"},{"lineNumber":13,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":14,"author":{"gitId":"tjwjoe"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"tjwjoe"},"content":"     * Placeholder command to be overridden by subclasses."},{"lineNumber":16,"author":{"gitId":"tjwjoe"},"content":"     * @param tasks The current TaskList."},{"lineNumber":17,"author":{"gitId":"tjwjoe"},"content":"     * @param ui The Ui object in use."},{"lineNumber":18,"author":{"gitId":"tjwjoe"},"content":"     * @param storage The Storage object in use."},{"lineNumber":19,"author":{"gitId":"tjwjoe"},"content":"     * @throws DukeException If erroneous inputs are detected."},{"lineNumber":20,"author":{"gitId":"tjwjoe"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"tjwjoe"},"content":"    public void exec(TaskList tasks, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":22,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":23,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"tjwjoe"},"content":"}"}],"authorContributionMap":{"tjwjoe":24}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjwjoe"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":3,"author":{"gitId":"tjwjoe"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"tjwjoe"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"tjwjoe"},"content":"import exceptions.InvalidTaskNumberException;"},{"lineNumber":6,"author":{"gitId":"tjwjoe"},"content":"import exceptions.TaskNotFoundException;"},{"lineNumber":7,"author":{"gitId":"tjwjoe"},"content":"import tasks.TaskList;"},{"lineNumber":8,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":9,"author":{"gitId":"tjwjoe"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"tjwjoe"},"content":" * Represents an instruction from the user to delete a task from the list."},{"lineNumber":11,"author":{"gitId":"tjwjoe"},"content":" */"},{"lineNumber":12,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":13,"author":{"gitId":"tjwjoe"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"tjwjoe"},"content":"    private int index;"},{"lineNumber":15,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":16,"author":{"gitId":"tjwjoe"},"content":"    public DeleteCommand(int index) {"},{"lineNumber":17,"author":{"gitId":"tjwjoe"},"content":"        this.index \u003d index;"},{"lineNumber":18,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":20,"author":{"gitId":"tjwjoe"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"tjwjoe"},"content":"     * Executes the command to delete the task from the TaskList."},{"lineNumber":22,"author":{"gitId":"tjwjoe"},"content":"     * @param tasks The current TaskList."},{"lineNumber":23,"author":{"gitId":"tjwjoe"},"content":"     * @param ui The Ui object in use."},{"lineNumber":24,"author":{"gitId":"tjwjoe"},"content":"     * @param storage The Storage object in use."},{"lineNumber":25,"author":{"gitId":"tjwjoe"},"content":"     * @throws TaskNotFoundException If input task number is not found in the list."},{"lineNumber":26,"author":{"gitId":"tjwjoe"},"content":"     * @throws InvalidTaskNumberException If the user enters a non-integer argument."},{"lineNumber":27,"author":{"gitId":"tjwjoe"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"tjwjoe"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"tjwjoe"},"content":"    public void exec(TaskList tasks, Ui ui, Storage storage) throws TaskNotFoundException,"},{"lineNumber":30,"author":{"gitId":"tjwjoe"},"content":"            InvalidTaskNumberException {"},{"lineNumber":31,"author":{"gitId":"tjwjoe"},"content":"        assert ui !\u003d null : \"Null UI\";"},{"lineNumber":32,"author":{"gitId":"tjwjoe"},"content":"        assert tasks !\u003d null : \"Null TaskList\";"},{"lineNumber":33,"author":{"gitId":"tjwjoe"},"content":"        ui.setMessageDeleteTask(tasks, index);"},{"lineNumber":34,"author":{"gitId":"tjwjoe"},"content":"        deleteTask(index, tasks);"},{"lineNumber":35,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":37,"author":{"gitId":"tjwjoe"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"tjwjoe"},"content":"     * Deletes an input task from the list."},{"lineNumber":39,"author":{"gitId":"tjwjoe"},"content":"     * @param idx Index of the task indicated to be deleted."},{"lineNumber":40,"author":{"gitId":"tjwjoe"},"content":"     * @throws TaskNotFoundException If input task number is not found in the list."},{"lineNumber":41,"author":{"gitId":"tjwjoe"},"content":"     * @throws InvalidTaskNumberException If user enters a non-integer argument."},{"lineNumber":42,"author":{"gitId":"tjwjoe"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"tjwjoe"},"content":"    public void deleteTask(int idx, TaskList tasks) throws TaskNotFoundException, InvalidTaskNumberException {"},{"lineNumber":44,"author":{"gitId":"tjwjoe"},"content":"        assert tasks !\u003d null : \"Null TaskList\";"},{"lineNumber":45,"author":{"gitId":"tjwjoe"},"content":"        try {"},{"lineNumber":46,"author":{"gitId":"tjwjoe"},"content":"            tasks.getTasks().remove(idx - 1);"},{"lineNumber":47,"author":{"gitId":"tjwjoe"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":48,"author":{"gitId":"tjwjoe"},"content":"            throw new TaskNotFoundException(\"Sorry, I couldn\u0027t find that task.\");"},{"lineNumber":49,"author":{"gitId":"tjwjoe"},"content":"        } catch (NumberFormatException ex) {"},{"lineNumber":50,"author":{"gitId":"tjwjoe"},"content":"            throw new InvalidTaskNumberException(\"Please enter a valid number!\");"},{"lineNumber":51,"author":{"gitId":"tjwjoe"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"tjwjoe"},"content":"}"}],"authorContributionMap":{"tjwjoe":53}},{"path":"src/main/java/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjwjoe"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":3,"author":{"gitId":"tjwjoe"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"tjwjoe"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"tjwjoe"},"content":"import exceptions.InvalidTaskNumberException;"},{"lineNumber":6,"author":{"gitId":"tjwjoe"},"content":"import exceptions.TaskNotFoundException;"},{"lineNumber":7,"author":{"gitId":"tjwjoe"},"content":"import tasks.TaskList;"},{"lineNumber":8,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":9,"author":{"gitId":"tjwjoe"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"tjwjoe"},"content":" * Represents an instruction from the user to mark a task as done."},{"lineNumber":11,"author":{"gitId":"tjwjoe"},"content":" */"},{"lineNumber":12,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":13,"author":{"gitId":"tjwjoe"},"content":"public class DoneCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"tjwjoe"},"content":"    private int index;"},{"lineNumber":15,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":16,"author":{"gitId":"tjwjoe"},"content":"    public DoneCommand(int index) {"},{"lineNumber":17,"author":{"gitId":"tjwjoe"},"content":"        this.index \u003d index;"},{"lineNumber":18,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":20,"author":{"gitId":"tjwjoe"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"tjwjoe"},"content":"     * Executes the command to mark the task as done."},{"lineNumber":22,"author":{"gitId":"tjwjoe"},"content":"     * @param tasks The current TaskList."},{"lineNumber":23,"author":{"gitId":"tjwjoe"},"content":"     * @param ui The Ui object in use."},{"lineNumber":24,"author":{"gitId":"tjwjoe"},"content":"     * @param storage The Storage object in use."},{"lineNumber":25,"author":{"gitId":"tjwjoe"},"content":"     * @throws TaskNotFoundException If input task number is not found in the list."},{"lineNumber":26,"author":{"gitId":"tjwjoe"},"content":"     * @throws InvalidTaskNumberException If the user enters a non-integer argument."},{"lineNumber":27,"author":{"gitId":"tjwjoe"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"tjwjoe"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"tjwjoe"},"content":"    public void exec(TaskList tasks, Ui ui, Storage storage) throws TaskNotFoundException,"},{"lineNumber":30,"author":{"gitId":"tjwjoe"},"content":"            InvalidTaskNumberException {"},{"lineNumber":31,"author":{"gitId":"tjwjoe"},"content":"        assert ui !\u003d null : \"Null UI\";"},{"lineNumber":32,"author":{"gitId":"tjwjoe"},"content":"        assert tasks !\u003d null : \"Null TaskList\";"},{"lineNumber":33,"author":{"gitId":"tjwjoe"},"content":"        ui.setMessageDoneTask();"},{"lineNumber":34,"author":{"gitId":"tjwjoe"},"content":"        doneTask(index, tasks);"},{"lineNumber":35,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":37,"author":{"gitId":"tjwjoe"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"tjwjoe"},"content":"     * Marks an input task as done."},{"lineNumber":39,"author":{"gitId":"tjwjoe"},"content":"     * @param idx Index of the task which the user wishes to mark as done."},{"lineNumber":40,"author":{"gitId":"tjwjoe"},"content":"     * @throws TaskNotFoundException If input task number is not found in the list."},{"lineNumber":41,"author":{"gitId":"tjwjoe"},"content":"     * @throws InvalidTaskNumberException If user enters a non-integer input."},{"lineNumber":42,"author":{"gitId":"tjwjoe"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":44,"author":{"gitId":"tjwjoe"},"content":"    public void doneTask(int idx, TaskList tasks) throws TaskNotFoundException, InvalidTaskNumberException {"},{"lineNumber":45,"author":{"gitId":"tjwjoe"},"content":"        assert tasks !\u003d null;"},{"lineNumber":46,"author":{"gitId":"tjwjoe"},"content":"        try {"},{"lineNumber":47,"author":{"gitId":"tjwjoe"},"content":"            tasks.getTasks().get(idx - 1).setDone(true);"},{"lineNumber":48,"author":{"gitId":"tjwjoe"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":49,"author":{"gitId":"tjwjoe"},"content":"            throw new TaskNotFoundException(\"Sorry, I couldn\u0027t find that task.\");"},{"lineNumber":50,"author":{"gitId":"tjwjoe"},"content":"        } catch (NumberFormatException ex) {"},{"lineNumber":51,"author":{"gitId":"tjwjoe"},"content":"            throw new InvalidTaskNumberException(\"Please enter a valid number!\");"},{"lineNumber":52,"author":{"gitId":"tjwjoe"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"tjwjoe"},"content":"}"}],"authorContributionMap":{"tjwjoe":54}},{"path":"src/main/java/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjwjoe"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":3,"author":{"gitId":"tjwjoe"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"tjwjoe"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"tjwjoe"},"content":"import exceptions.InvalidFileException;"},{"lineNumber":6,"author":{"gitId":"tjwjoe"},"content":"import javafx.application.Platform;"},{"lineNumber":7,"author":{"gitId":"tjwjoe"},"content":"import tasks.TaskList;"},{"lineNumber":8,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":9,"author":{"gitId":"tjwjoe"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"tjwjoe"},"content":" * Represents an instruction from the user to quit the bot."},{"lineNumber":11,"author":{"gitId":"tjwjoe"},"content":" */"},{"lineNumber":12,"author":{"gitId":"tjwjoe"},"content":"public class ExitCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":14,"author":{"gitId":"tjwjoe"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"tjwjoe"},"content":"     * Prints the exit message and writes the current TaskList to the hard drive."},{"lineNumber":16,"author":{"gitId":"tjwjoe"},"content":"     * @param tasks The current TaskList."},{"lineNumber":17,"author":{"gitId":"tjwjoe"},"content":"     * @param ui The Ui object in use."},{"lineNumber":18,"author":{"gitId":"tjwjoe"},"content":"     * @param storage The Storage object in use."},{"lineNumber":19,"author":{"gitId":"tjwjoe"},"content":"     * @throws InvalidFileException If file to be written to cannot be found."},{"lineNumber":20,"author":{"gitId":"tjwjoe"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"tjwjoe"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"tjwjoe"},"content":"    public void exec(TaskList tasks, Ui ui, Storage storage) throws InvalidFileException {"},{"lineNumber":23,"author":{"gitId":"tjwjoe"},"content":"        assert ui !\u003d null : \"Null Ui\";"},{"lineNumber":24,"author":{"gitId":"tjwjoe"},"content":"        assert storage !\u003d null : \"Null Storage\";"},{"lineNumber":25,"author":{"gitId":"tjwjoe"},"content":"        assert tasks !\u003d null : \"Null TaskList\";"},{"lineNumber":26,"author":{"gitId":"tjwjoe"},"content":"        ui.setMessageExit();"},{"lineNumber":27,"author":{"gitId":"tjwjoe"},"content":"        storage.writeToFile(\"data.txt\", tasks.writeString());"},{"lineNumber":28,"author":{"gitId":"tjwjoe"},"content":"        setTimeout(Platform::exit, 1000);"},{"lineNumber":29,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":31,"author":{"gitId":"tjwjoe"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"tjwjoe"},"content":"     * Delays the execution of a command. Used to ensure exit message is shown before the program ends."},{"lineNumber":33,"author":{"gitId":"tjwjoe"},"content":"     * @param runnable A Runnable that you want to delay the execution for."},{"lineNumber":34,"author":{"gitId":"tjwjoe"},"content":"     * @param delay Number of milliseconds to delay execution of the command by."},{"lineNumber":35,"author":{"gitId":"tjwjoe"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"tjwjoe"},"content":"    public static void setTimeout(Runnable runnable, int delay) {"},{"lineNumber":37,"author":{"gitId":"tjwjoe"},"content":"        new Thread(() -\u003e {"},{"lineNumber":38,"author":{"gitId":"tjwjoe"},"content":"            try {"},{"lineNumber":39,"author":{"gitId":"tjwjoe"},"content":"                Thread.sleep(delay);"},{"lineNumber":40,"author":{"gitId":"tjwjoe"},"content":"                runnable.run();"},{"lineNumber":41,"author":{"gitId":"tjwjoe"},"content":"            } catch (Exception e) {"},{"lineNumber":42,"author":{"gitId":"tjwjoe"},"content":"                System.err.println(e);"},{"lineNumber":43,"author":{"gitId":"tjwjoe"},"content":"            }"},{"lineNumber":44,"author":{"gitId":"tjwjoe"},"content":"        }).start();"},{"lineNumber":45,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"tjwjoe"},"content":"}"}],"authorContributionMap":{"tjwjoe":46}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjwjoe"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":3,"author":{"gitId":"tjwjoe"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"tjwjoe"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"tjwjoe"},"content":"import tasks.Task;"},{"lineNumber":6,"author":{"gitId":"tjwjoe"},"content":"import tasks.TaskList;"},{"lineNumber":7,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":8,"author":{"gitId":"tjwjoe"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"tjwjoe"},"content":" * Represents an instruction from the user to find specific tasks matching the input keywords."},{"lineNumber":10,"author":{"gitId":"tjwjoe"},"content":" */"},{"lineNumber":11,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":12,"author":{"gitId":"tjwjoe"},"content":"public class FindCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"tjwjoe"},"content":"    private String text;"},{"lineNumber":14,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":15,"author":{"gitId":"tjwjoe"},"content":"    public FindCommand(String text) {"},{"lineNumber":16,"author":{"gitId":"tjwjoe"},"content":"        this.text \u003d text;"},{"lineNumber":17,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":19,"author":{"gitId":"tjwjoe"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"tjwjoe"},"content":"     * Executes the command to find the specific tasks matching the input keywords."},{"lineNumber":21,"author":{"gitId":"tjwjoe"},"content":"     * @param tasks The current TaskList."},{"lineNumber":22,"author":{"gitId":"tjwjoe"},"content":"     * @param ui The Ui object in use."},{"lineNumber":23,"author":{"gitId":"tjwjoe"},"content":"     * @param storage The Storage object in use."},{"lineNumber":24,"author":{"gitId":"tjwjoe"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"tjwjoe"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"tjwjoe"},"content":"    public void exec(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":27,"author":{"gitId":"tjwjoe"},"content":"        assert ui !\u003d null : \"Null UI\";"},{"lineNumber":28,"author":{"gitId":"tjwjoe"},"content":"        assert tasks !\u003d null : \"Null Tasklist\";"},{"lineNumber":29,"author":{"gitId":"tjwjoe"},"content":"        StringBuilder output \u003d new StringBuilder();"},{"lineNumber":30,"author":{"gitId":"tjwjoe"},"content":"        int counter \u003d 1;"},{"lineNumber":31,"author":{"gitId":"tjwjoe"},"content":"        for (Task task : tasks.getTasks()) {"},{"lineNumber":32,"author":{"gitId":"tjwjoe"},"content":"            String name \u003d task.getName();"},{"lineNumber":33,"author":{"gitId":"tjwjoe"},"content":"            if (name.contains(text)) {"},{"lineNumber":34,"author":{"gitId":"tjwjoe"},"content":"                output.append(counter \u003d\u003d 1 ? \"\" : \"\\n\").append(counter).append(\".\").append(task);"},{"lineNumber":35,"author":{"gitId":"tjwjoe"},"content":"                counter++;"},{"lineNumber":36,"author":{"gitId":"tjwjoe"},"content":"            }"},{"lineNumber":37,"author":{"gitId":"tjwjoe"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"tjwjoe"},"content":"        ui.setMessageFindTask(output.toString(), counter - 1);"},{"lineNumber":39,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"tjwjoe"},"content":"}"}],"authorContributionMap":{"tjwjoe":40}},{"path":"src/main/java/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjwjoe"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":3,"author":{"gitId":"tjwjoe"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"tjwjoe"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"tjwjoe"},"content":"import tasks.TaskList;"},{"lineNumber":6,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":7,"author":{"gitId":"tjwjoe"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"tjwjoe"},"content":" * Represents an instruction from the user to display the help message."},{"lineNumber":9,"author":{"gitId":"tjwjoe"},"content":" */"},{"lineNumber":10,"author":{"gitId":"tjwjoe"},"content":"public class HelpCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":12,"author":{"gitId":"tjwjoe"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"tjwjoe"},"content":"     * Executes the command to print the help message."},{"lineNumber":14,"author":{"gitId":"tjwjoe"},"content":"     * @param tasks The current TaskList."},{"lineNumber":15,"author":{"gitId":"tjwjoe"},"content":"     * @param ui The Ui object in use."},{"lineNumber":16,"author":{"gitId":"tjwjoe"},"content":"     * @param storage The Storage object in use."},{"lineNumber":17,"author":{"gitId":"tjwjoe"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"tjwjoe"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"tjwjoe"},"content":"    public void exec(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":20,"author":{"gitId":"tjwjoe"},"content":"        assert ui !\u003d null : \"Null UI\";"},{"lineNumber":21,"author":{"gitId":"tjwjoe"},"content":"        ui.setMessagePrintHelp();"},{"lineNumber":22,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"tjwjoe"},"content":"}"}],"authorContributionMap":{"tjwjoe":23}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjwjoe"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":3,"author":{"gitId":"tjwjoe"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"tjwjoe"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"tjwjoe"},"content":"import tasks.TaskList;"},{"lineNumber":6,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":7,"author":{"gitId":"tjwjoe"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"tjwjoe"},"content":" * Represents a command from the user to print the current TaskList."},{"lineNumber":9,"author":{"gitId":"tjwjoe"},"content":" */"},{"lineNumber":10,"author":{"gitId":"tjwjoe"},"content":"public class ListCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":12,"author":{"gitId":"tjwjoe"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"tjwjoe"},"content":"     * Executes the command to print the TaskList."},{"lineNumber":14,"author":{"gitId":"tjwjoe"},"content":"     * @param tasks The current TaskList."},{"lineNumber":15,"author":{"gitId":"tjwjoe"},"content":"     * @param ui The Ui object in use."},{"lineNumber":16,"author":{"gitId":"tjwjoe"},"content":"     * @param storage The Storage object in use."},{"lineNumber":17,"author":{"gitId":"tjwjoe"},"content":"     */"},{"lineNumber":18,"author":{"gitId":"tjwjoe"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"tjwjoe"},"content":"    public void exec(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":20,"author":{"gitId":"tjwjoe"},"content":"        assert ui !\u003d null : \"Null UI\";"},{"lineNumber":21,"author":{"gitId":"tjwjoe"},"content":"        assert tasks !\u003d null : \"Null TaskList\";"},{"lineNumber":22,"author":{"gitId":"tjwjoe"},"content":"        ui.setMessagePrintList(tasks);"},{"lineNumber":23,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"tjwjoe"},"content":"}"}],"authorContributionMap":{"tjwjoe":24}},{"path":"src/main/java/commands/UndoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjwjoe"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":3,"author":{"gitId":"tjwjoe"},"content":"import duke.Storage;"},{"lineNumber":4,"author":{"gitId":"tjwjoe"},"content":"import duke.Ui;"},{"lineNumber":5,"author":{"gitId":"tjwjoe"},"content":"import exceptions.InvalidTaskNumberException;"},{"lineNumber":6,"author":{"gitId":"tjwjoe"},"content":"import exceptions.TaskNotFoundException;"},{"lineNumber":7,"author":{"gitId":"tjwjoe"},"content":"import tasks.TaskList;"},{"lineNumber":8,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":9,"author":{"gitId":"tjwjoe"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"tjwjoe"},"content":" * Represents an instruction from the user to mark a task as not done."},{"lineNumber":11,"author":{"gitId":"tjwjoe"},"content":" */"},{"lineNumber":12,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":13,"author":{"gitId":"tjwjoe"},"content":"public class UndoneCommand extends Command {"},{"lineNumber":14,"author":{"gitId":"tjwjoe"},"content":"    private int index;"},{"lineNumber":15,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":16,"author":{"gitId":"tjwjoe"},"content":"    public UndoneCommand(int index) {"},{"lineNumber":17,"author":{"gitId":"tjwjoe"},"content":"        this.index \u003d index;"},{"lineNumber":18,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":20,"author":{"gitId":"tjwjoe"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"tjwjoe"},"content":"     * Executes the command to mark the task as not done."},{"lineNumber":22,"author":{"gitId":"tjwjoe"},"content":"     * @param tasks The current TaskList."},{"lineNumber":23,"author":{"gitId":"tjwjoe"},"content":"     * @param ui The Ui object in use."},{"lineNumber":24,"author":{"gitId":"tjwjoe"},"content":"     * @param storage The Storage object in use."},{"lineNumber":25,"author":{"gitId":"tjwjoe"},"content":"     * @throws TaskNotFoundException If input task number is not found in the list."},{"lineNumber":26,"author":{"gitId":"tjwjoe"},"content":"     * @throws InvalidTaskNumberException If the user enters a non-integer argument."},{"lineNumber":27,"author":{"gitId":"tjwjoe"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"tjwjoe"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"tjwjoe"},"content":"    public void exec(TaskList tasks, Ui ui, Storage storage) throws TaskNotFoundException,"},{"lineNumber":30,"author":{"gitId":"tjwjoe"},"content":"            InvalidTaskNumberException {"},{"lineNumber":31,"author":{"gitId":"tjwjoe"},"content":"        assert ui !\u003d null : \"Null UI\";"},{"lineNumber":32,"author":{"gitId":"tjwjoe"},"content":"        assert tasks !\u003d null : \"Null TaskList\";"},{"lineNumber":33,"author":{"gitId":"tjwjoe"},"content":"        ui.setMessageUndoneTask();"},{"lineNumber":34,"author":{"gitId":"tjwjoe"},"content":"        undoneTask(index, tasks);"},{"lineNumber":35,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":37,"author":{"gitId":"tjwjoe"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"tjwjoe"},"content":"     * Marks an input task as not done."},{"lineNumber":39,"author":{"gitId":"tjwjoe"},"content":"     * @param idx Index of the task which the user wishes to mark as not done."},{"lineNumber":40,"author":{"gitId":"tjwjoe"},"content":"     * @throws TaskNotFoundException If input task number is not found in the list."},{"lineNumber":41,"author":{"gitId":"tjwjoe"},"content":"     * @throws InvalidTaskNumberException If user enters a non-integer input."},{"lineNumber":42,"author":{"gitId":"tjwjoe"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":44,"author":{"gitId":"tjwjoe"},"content":"    public void undoneTask(int idx, TaskList tasks) throws TaskNotFoundException, InvalidTaskNumberException {"},{"lineNumber":45,"author":{"gitId":"tjwjoe"},"content":"        assert tasks !\u003d null : \"Null TaskList\";"},{"lineNumber":46,"author":{"gitId":"tjwjoe"},"content":"        try {"},{"lineNumber":47,"author":{"gitId":"tjwjoe"},"content":"            tasks.getTasks().get(idx - 1).setDone(false);"},{"lineNumber":48,"author":{"gitId":"tjwjoe"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":49,"author":{"gitId":"tjwjoe"},"content":"            throw new TaskNotFoundException(\"Sorry, I couldn\u0027t find that task.\");"},{"lineNumber":50,"author":{"gitId":"tjwjoe"},"content":"        } catch (NumberFormatException ex) {"},{"lineNumber":51,"author":{"gitId":"tjwjoe"},"content":"            throw new InvalidTaskNumberException(\"Please enter a valid number!\");"},{"lineNumber":52,"author":{"gitId":"tjwjoe"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"tjwjoe"},"content":"}"}],"authorContributionMap":{"tjwjoe":54}},{"path":"src/main/java/commands/UpcomingCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjwjoe"},"content":"package commands;"},{"lineNumber":2,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":3,"author":{"gitId":"tjwjoe"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":5,"author":{"gitId":"tjwjoe"},"content":"import duke.Storage;"},{"lineNumber":6,"author":{"gitId":"tjwjoe"},"content":"import duke.Ui;"},{"lineNumber":7,"author":{"gitId":"tjwjoe"},"content":"import exceptions.InvalidUpcomingInputException;"},{"lineNumber":8,"author":{"gitId":"tjwjoe"},"content":"import tasks.Deadline;"},{"lineNumber":9,"author":{"gitId":"tjwjoe"},"content":"import tasks.Event;"},{"lineNumber":10,"author":{"gitId":"tjwjoe"},"content":"import tasks.Task;"},{"lineNumber":11,"author":{"gitId":"tjwjoe"},"content":"import tasks.TaskList;"},{"lineNumber":12,"author":{"gitId":"tjwjoe"},"content":"import tasks.TimedTask;"},{"lineNumber":13,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":14,"author":{"gitId":"tjwjoe"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"tjwjoe"},"content":" * Represents an instruction from the user to print all tasks occurring within an input number of days."},{"lineNumber":16,"author":{"gitId":"tjwjoe"},"content":" */"},{"lineNumber":17,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":18,"author":{"gitId":"tjwjoe"},"content":"public class UpcomingCommand extends Command {"},{"lineNumber":19,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":20,"author":{"gitId":"tjwjoe"},"content":"    private int dayRange;"},{"lineNumber":21,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":22,"author":{"gitId":"tjwjoe"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"tjwjoe"},"content":"     * Creates a RemindCommand object and checks whether the number of days input is valid."},{"lineNumber":24,"author":{"gitId":"tjwjoe"},"content":"     * @param dayRange number of days the user wants to search up to."},{"lineNumber":25,"author":{"gitId":"tjwjoe"},"content":"     * @throws InvalidUpcomingInputException if the number of days entered is invalid."},{"lineNumber":26,"author":{"gitId":"tjwjoe"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"tjwjoe"},"content":"    public UpcomingCommand(int dayRange) throws InvalidUpcomingInputException {"},{"lineNumber":28,"author":{"gitId":"tjwjoe"},"content":"        if (dayRange \u003c 1) {"},{"lineNumber":29,"author":{"gitId":"tjwjoe"},"content":"            throw new InvalidUpcomingInputException(\"Please enter a valid number of days!\");"},{"lineNumber":30,"author":{"gitId":"tjwjoe"},"content":"        } else {"},{"lineNumber":31,"author":{"gitId":"tjwjoe"},"content":"            this.dayRange \u003d dayRange;"},{"lineNumber":32,"author":{"gitId":"tjwjoe"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":35,"author":{"gitId":"tjwjoe"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"tjwjoe"},"content":"     * Executes the command to find timed tasks that occur within the range of days."},{"lineNumber":37,"author":{"gitId":"tjwjoe"},"content":"     * @param tasks The current TaskList."},{"lineNumber":38,"author":{"gitId":"tjwjoe"},"content":"     * @param ui The Ui object in use."},{"lineNumber":39,"author":{"gitId":"tjwjoe"},"content":"     * @param storage The Storage object in use."},{"lineNumber":40,"author":{"gitId":"tjwjoe"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"tjwjoe"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"tjwjoe"},"content":"    public void exec(TaskList tasks, Ui ui, Storage storage) {"},{"lineNumber":43,"author":{"gitId":"tjwjoe"},"content":"        assert ui !\u003d null : \"Null UI\";"},{"lineNumber":44,"author":{"gitId":"tjwjoe"},"content":"        assert tasks !\u003d null : \"Null Tasklist\";"},{"lineNumber":45,"author":{"gitId":"tjwjoe"},"content":"        StringBuilder output \u003d new StringBuilder();"},{"lineNumber":46,"author":{"gitId":"tjwjoe"},"content":"        int counter \u003d 1;"},{"lineNumber":47,"author":{"gitId":"tjwjoe"},"content":"        for (Task task : tasks.getTasks()) {"},{"lineNumber":48,"author":{"gitId":"tjwjoe"},"content":"            if (task instanceof TimedTask) {"},{"lineNumber":49,"author":{"gitId":"tjwjoe"},"content":"                if (checkIfInRange((TimedTask) task)) {"},{"lineNumber":50,"author":{"gitId":"tjwjoe"},"content":"                    output.append(counter \u003d\u003d 1 ? \"\" : \"\\n\").append(counter).append(\".\").append(task);"},{"lineNumber":51,"author":{"gitId":"tjwjoe"},"content":"                    counter++;"},{"lineNumber":52,"author":{"gitId":"tjwjoe"},"content":"                }"},{"lineNumber":53,"author":{"gitId":"tjwjoe"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"tjwjoe"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"tjwjoe"},"content":"        ui.setMessageUpcoming(output.toString(), counter - 1, dayRange);"},{"lineNumber":56,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":58,"author":{"gitId":"tjwjoe"},"content":"    /**"},{"lineNumber":59,"author":{"gitId":"tjwjoe"},"content":"     * Checks whether the input TimedTask takes place within the number of days input."},{"lineNumber":60,"author":{"gitId":"tjwjoe"},"content":"     * @param timedTask The task to check."},{"lineNumber":61,"author":{"gitId":"tjwjoe"},"content":"     * @return A boolean indicating whether the task takes places within the number of days input."},{"lineNumber":62,"author":{"gitId":"tjwjoe"},"content":"     */"},{"lineNumber":63,"author":{"gitId":"tjwjoe"},"content":"    protected boolean checkIfInRange(TimedTask timedTask) {"},{"lineNumber":64,"author":{"gitId":"tjwjoe"},"content":"        assert timedTask instanceof Deadline || timedTask instanceof Event : \"Non-timed task entered!\";"},{"lineNumber":65,"author":{"gitId":"tjwjoe"},"content":"        LocalDateTime time \u003d timedTask.getDateTime();"},{"lineNumber":66,"author":{"gitId":"tjwjoe"},"content":"        LocalDateTime newTime \u003d time.minusDays(dayRange);"},{"lineNumber":67,"author":{"gitId":"tjwjoe"},"content":"        return newTime.isBefore(LocalDateTime.now()) \u0026\u0026 time.isAfter(LocalDateTime.now());"},{"lineNumber":68,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"tjwjoe"},"content":"}"}],"authorContributionMap":{"tjwjoe":69}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjwjoe"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":3,"author":{"gitId":"tjwjoe"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":4,"author":{"gitId":"tjwjoe"},"content":"import java.nio.file.Paths;"},{"lineNumber":5,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":6,"author":{"gitId":"tjwjoe"},"content":"import commands.Command;"},{"lineNumber":7,"author":{"gitId":"tjwjoe"},"content":"import exceptions.DukeException;"},{"lineNumber":8,"author":{"gitId":"tjwjoe"},"content":"import tasks.TaskList;"},{"lineNumber":9,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":10,"author":{"gitId":"tjwjoe"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"tjwjoe"},"content":" * Over-arching class containing the main information of the Duke bot."},{"lineNumber":12,"author":{"gitId":"tjwjoe"},"content":" */"},{"lineNumber":13,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":14,"author":{"gitId":"tjwjoe"},"content":"public class Duke {"},{"lineNumber":15,"author":{"gitId":"tjwjoe"},"content":"    private TaskList tasks;"},{"lineNumber":16,"author":{"gitId":"tjwjoe"},"content":"    private boolean isQuit;"},{"lineNumber":17,"author":{"gitId":"tjwjoe"},"content":"    private Ui ui;"},{"lineNumber":18,"author":{"gitId":"tjwjoe"},"content":"    private Storage storage;"},{"lineNumber":19,"author":{"gitId":"tjwjoe"},"content":"    private Parser parser;"},{"lineNumber":20,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":21,"author":{"gitId":"tjwjoe"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"tjwjoe"},"content":"     * Attempts to read an existing stored data.txt file, and creates a new data.txt file if one is not found."},{"lineNumber":23,"author":{"gitId":"tjwjoe"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"tjwjoe"},"content":"    public Duke() {"},{"lineNumber":25,"author":{"gitId":"tjwjoe"},"content":"        this.tasks \u003d new TaskList();"},{"lineNumber":26,"author":{"gitId":"tjwjoe"},"content":"        this.isQuit \u003d false;"},{"lineNumber":27,"author":{"gitId":"tjwjoe"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":28,"author":{"gitId":"tjwjoe"},"content":"        this.parser \u003d new Parser();"},{"lineNumber":29,"author":{"gitId":"tjwjoe"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"tjwjoe"},"content":"            this.storage \u003d new Storage(Paths.get(\"data.txt\").toFile(), tasks);"},{"lineNumber":31,"author":{"gitId":"tjwjoe"},"content":"            storage.readData();"},{"lineNumber":32,"author":{"gitId":"tjwjoe"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":33,"author":{"gitId":"tjwjoe"},"content":"            System.out.println(\"No data found, creating new .txt file\");"},{"lineNumber":34,"author":{"gitId":"tjwjoe"},"content":"            this.storage \u003d new Storage();"},{"lineNumber":35,"author":{"gitId":"tjwjoe"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":38,"author":{"gitId":"tjwjoe"},"content":"    public TaskList getTaskList() {"},{"lineNumber":39,"author":{"gitId":"tjwjoe"},"content":"        return tasks;"},{"lineNumber":40,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"tjwjoe"},"content":"    public Storage getStorage() {"},{"lineNumber":42,"author":{"gitId":"tjwjoe"},"content":"        return storage;"},{"lineNumber":43,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"tjwjoe"},"content":"    public Ui getUi() {"},{"lineNumber":45,"author":{"gitId":"tjwjoe"},"content":"        return ui;"},{"lineNumber":46,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"tjwjoe"},"content":"    public Parser getParser() {"},{"lineNumber":48,"author":{"gitId":"tjwjoe"},"content":"        return parser;"},{"lineNumber":49,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":51,"author":{"gitId":"tjwjoe"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"tjwjoe"},"content":"     * Allows the system to begin taking in user input and edits the stored data accordingly. Runs until an \"exit\""},{"lineNumber":53,"author":{"gitId":"tjwjoe"},"content":"     * command is received."},{"lineNumber":54,"author":{"gitId":"tjwjoe"},"content":"     */"},{"lineNumber":55,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":56,"author":{"gitId":"tjwjoe"},"content":"    public void run() {"},{"lineNumber":57,"author":{"gitId":"tjwjoe"},"content":"        while (!isQuit) {"},{"lineNumber":58,"author":{"gitId":"tjwjoe"},"content":"            String input \u003d ui.takeInput();"},{"lineNumber":59,"author":{"gitId":"tjwjoe"},"content":"            try {"},{"lineNumber":60,"author":{"gitId":"tjwjoe"},"content":"                Command command \u003d parser.parse(input);"},{"lineNumber":61,"author":{"gitId":"tjwjoe"},"content":"                command.exec(tasks, ui, storage);"},{"lineNumber":62,"author":{"gitId":"tjwjoe"},"content":"            } catch (DukeException e) {"},{"lineNumber":63,"author":{"gitId":"tjwjoe"},"content":"                ui.printException(e);"},{"lineNumber":64,"author":{"gitId":"tjwjoe"},"content":"            }"},{"lineNumber":65,"author":{"gitId":"tjwjoe"},"content":"            isQuit \u003d parser.hasQuit();"},{"lineNumber":66,"author":{"gitId":"tjwjoe"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":69,"author":{"gitId":"tjwjoe"},"content":"    public String getResponse() {"},{"lineNumber":70,"author":{"gitId":"tjwjoe"},"content":"        assert ui.getMessage() !\u003d null : \"Message is null!\";"},{"lineNumber":71,"author":{"gitId":"tjwjoe"},"content":"        return ui.getMessage();"},{"lineNumber":72,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":74,"author":{"gitId":"tjwjoe"},"content":"    /**"},{"lineNumber":75,"author":{"gitId":"tjwjoe"},"content":"     * Driver method."},{"lineNumber":76,"author":{"gitId":"tjwjoe"},"content":"     * @param args args."},{"lineNumber":77,"author":{"gitId":"tjwjoe"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"tjwjoe"},"content":"    public static void main(String[] args) {"},{"lineNumber":79,"author":{"gitId":"tjwjoe"},"content":"        Duke duke \u003d new Duke();"},{"lineNumber":80,"author":{"gitId":"tjwjoe"},"content":"        duke.run();"},{"lineNumber":81,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":82,"author":{"gitId":"tjwjoe"},"content":"}"}],"authorContributionMap":{"tjwjoe":82}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjwjoe"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":3,"author":{"gitId":"tjwjoe"},"content":"import commands.AddCommand;"},{"lineNumber":4,"author":{"gitId":"tjwjoe"},"content":"import commands.Command;"},{"lineNumber":5,"author":{"gitId":"tjwjoe"},"content":"import commands.DeleteCommand;"},{"lineNumber":6,"author":{"gitId":"tjwjoe"},"content":"import commands.DoneCommand;"},{"lineNumber":7,"author":{"gitId":"tjwjoe"},"content":"import commands.ExitCommand;"},{"lineNumber":8,"author":{"gitId":"tjwjoe"},"content":"import commands.FindCommand;"},{"lineNumber":9,"author":{"gitId":"tjwjoe"},"content":"import commands.HelpCommand;"},{"lineNumber":10,"author":{"gitId":"tjwjoe"},"content":"import commands.ListCommand;"},{"lineNumber":11,"author":{"gitId":"tjwjoe"},"content":"import commands.UndoneCommand;"},{"lineNumber":12,"author":{"gitId":"tjwjoe"},"content":"import commands.UpcomingCommand;"},{"lineNumber":13,"author":{"gitId":"tjwjoe"},"content":"import exceptions.InvalidNumberInputException;"},{"lineNumber":14,"author":{"gitId":"tjwjoe"},"content":"import exceptions.InvalidUpcomingInputException;"},{"lineNumber":15,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":16,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":17,"author":{"gitId":"tjwjoe"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"tjwjoe"},"content":" * Handles parsing of inputs from the user and generates Command objects accordingly."},{"lineNumber":19,"author":{"gitId":"tjwjoe"},"content":" */"},{"lineNumber":20,"author":{"gitId":"tjwjoe"},"content":"public class Parser {"},{"lineNumber":21,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":22,"author":{"gitId":"tjwjoe"},"content":"    private boolean isQuit \u003d false;"},{"lineNumber":23,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":24,"author":{"gitId":"tjwjoe"},"content":"    public boolean hasQuit() {"},{"lineNumber":25,"author":{"gitId":"tjwjoe"},"content":"        return isQuit;"},{"lineNumber":26,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":28,"author":{"gitId":"tjwjoe"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"tjwjoe"},"content":"     * Parses and makes sense of the user input."},{"lineNumber":30,"author":{"gitId":"tjwjoe"},"content":"     * @param input The user\u0027s input string."},{"lineNumber":31,"author":{"gitId":"tjwjoe"},"content":"     * @return A Command object corresponding to what the user has input."},{"lineNumber":32,"author":{"gitId":"tjwjoe"},"content":"     * @throws InvalidNumberInputException if an invalid input is entered at commands where integer input is required."},{"lineNumber":33,"author":{"gitId":"tjwjoe"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"tjwjoe"},"content":"    public Command parse(String input) throws InvalidNumberInputException {"},{"lineNumber":35,"author":{"gitId":"tjwjoe"},"content":"        assert !isQuit;"},{"lineNumber":36,"author":{"gitId":"tjwjoe"},"content":"        if (input.equals(\"exit\")) {"},{"lineNumber":37,"author":{"gitId":"tjwjoe"},"content":"            isQuit \u003d true;"},{"lineNumber":38,"author":{"gitId":"tjwjoe"},"content":"            return new ExitCommand();"},{"lineNumber":39,"author":{"gitId":"tjwjoe"},"content":"        } else if (input.equals(\"list\")) {"},{"lineNumber":40,"author":{"gitId":"tjwjoe"},"content":"            return new ListCommand();"},{"lineNumber":41,"author":{"gitId":"tjwjoe"},"content":"        } else if (input.equals(\"help\")) {"},{"lineNumber":42,"author":{"gitId":"tjwjoe"},"content":"            return new HelpCommand();"},{"lineNumber":43,"author":{"gitId":"tjwjoe"},"content":"        } else if (input.startsWith(\"done\")) {"},{"lineNumber":44,"author":{"gitId":"tjwjoe"},"content":"            try {"},{"lineNumber":45,"author":{"gitId":"tjwjoe"},"content":"                int num \u003d Integer.parseInt(input.substring(input.length() - 1));"},{"lineNumber":46,"author":{"gitId":"tjwjoe"},"content":"                return new DoneCommand(num);"},{"lineNumber":47,"author":{"gitId":"tjwjoe"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":48,"author":{"gitId":"tjwjoe"},"content":"                throw new InvalidNumberInputException(\"Please enter a valid number!\");"},{"lineNumber":49,"author":{"gitId":"tjwjoe"},"content":"            }"},{"lineNumber":50,"author":{"gitId":"tjwjoe"},"content":"        } else if (input.startsWith(\"undone\")) {"},{"lineNumber":51,"author":{"gitId":"tjwjoe"},"content":"            try {"},{"lineNumber":52,"author":{"gitId":"tjwjoe"},"content":"                int num \u003d Integer.parseInt(input.substring(input.length() - 1));"},{"lineNumber":53,"author":{"gitId":"tjwjoe"},"content":"                return new UndoneCommand(num);"},{"lineNumber":54,"author":{"gitId":"tjwjoe"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":55,"author":{"gitId":"tjwjoe"},"content":"                throw new InvalidNumberInputException(\"Please enter a valid number!\");"},{"lineNumber":56,"author":{"gitId":"tjwjoe"},"content":"            }"},{"lineNumber":57,"author":{"gitId":"tjwjoe"},"content":"        } else if (input.startsWith(\"delete\")) {"},{"lineNumber":58,"author":{"gitId":"tjwjoe"},"content":"            try {"},{"lineNumber":59,"author":{"gitId":"tjwjoe"},"content":"                int num \u003d Integer.parseInt(input.substring(input.length() - 1));"},{"lineNumber":60,"author":{"gitId":"tjwjoe"},"content":"                return new DeleteCommand(num);"},{"lineNumber":61,"author":{"gitId":"tjwjoe"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":62,"author":{"gitId":"tjwjoe"},"content":"                throw new InvalidNumberInputException(\"Please enter a valid number!\");"},{"lineNumber":63,"author":{"gitId":"tjwjoe"},"content":"            }"},{"lineNumber":64,"author":{"gitId":"tjwjoe"},"content":"        } else if (input.startsWith(\"find \")) {"},{"lineNumber":65,"author":{"gitId":"tjwjoe"},"content":"            return new FindCommand(input.substring(5));"},{"lineNumber":66,"author":{"gitId":"tjwjoe"},"content":"        } else if (input.startsWith(\"remindme\")) {"},{"lineNumber":67,"author":{"gitId":"tjwjoe"},"content":"            try {"},{"lineNumber":68,"author":{"gitId":"tjwjoe"},"content":"                int num \u003d Integer.parseInt(input.substring(input.length() - 1));"},{"lineNumber":69,"author":{"gitId":"tjwjoe"},"content":"                return new UpcomingCommand(num);"},{"lineNumber":70,"author":{"gitId":"tjwjoe"},"content":"            } catch (NumberFormatException e) {"},{"lineNumber":71,"author":{"gitId":"tjwjoe"},"content":"                throw new InvalidNumberInputException(\"Please enter a valid number!\");"},{"lineNumber":72,"author":{"gitId":"tjwjoe"},"content":"            } catch (InvalidUpcomingInputException e) {"},{"lineNumber":73,"author":{"gitId":"tjwjoe"},"content":"                throw new InvalidNumberInputException(e.getMessage());"},{"lineNumber":74,"author":{"gitId":"tjwjoe"},"content":"            }"},{"lineNumber":75,"author":{"gitId":"tjwjoe"},"content":"        } else {"},{"lineNumber":76,"author":{"gitId":"tjwjoe"},"content":"            return new AddCommand(input);"},{"lineNumber":77,"author":{"gitId":"tjwjoe"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":79,"author":{"gitId":"tjwjoe"},"content":"}"}],"authorContributionMap":{"tjwjoe":79}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjwjoe"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":3,"author":{"gitId":"tjwjoe"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"tjwjoe"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"tjwjoe"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"tjwjoe"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"tjwjoe"},"content":"import java.time.LocalDateTime;"},{"lineNumber":8,"author":{"gitId":"tjwjoe"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":9,"author":{"gitId":"tjwjoe"},"content":"import java.util.Scanner;"},{"lineNumber":10,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":11,"author":{"gitId":"tjwjoe"},"content":"import exceptions.InvalidFileException;"},{"lineNumber":12,"author":{"gitId":"tjwjoe"},"content":"import tasks.Deadline;"},{"lineNumber":13,"author":{"gitId":"tjwjoe"},"content":"import tasks.Event;"},{"lineNumber":14,"author":{"gitId":"tjwjoe"},"content":"import tasks.TaskList;"},{"lineNumber":15,"author":{"gitId":"tjwjoe"},"content":"import tasks.Todo;"},{"lineNumber":16,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":17,"author":{"gitId":"tjwjoe"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"tjwjoe"},"content":" * Handles the reading and writing of the data.txt file on the user\u0027s hard-disk."},{"lineNumber":19,"author":{"gitId":"tjwjoe"},"content":" */"},{"lineNumber":20,"author":{"gitId":"tjwjoe"},"content":"public class Storage {"},{"lineNumber":21,"author":{"gitId":"tjwjoe"},"content":"    private TaskList tasks;"},{"lineNumber":22,"author":{"gitId":"tjwjoe"},"content":"    private File file;"},{"lineNumber":23,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":24,"author":{"gitId":"tjwjoe"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"tjwjoe"},"content":"     * Creates a new Storage object from a pre-existing file."},{"lineNumber":26,"author":{"gitId":"tjwjoe"},"content":"     * @param file The file to be read from."},{"lineNumber":27,"author":{"gitId":"tjwjoe"},"content":"     * @param tasks The TaskList object to be built."},{"lineNumber":28,"author":{"gitId":"tjwjoe"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"tjwjoe"},"content":"    public Storage(File file, TaskList tasks) {"},{"lineNumber":30,"author":{"gitId":"tjwjoe"},"content":"        this.file \u003d file;"},{"lineNumber":31,"author":{"gitId":"tjwjoe"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":32,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":34,"author":{"gitId":"tjwjoe"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"tjwjoe"},"content":"     * Constructor for if the file cannot be found in the working directory."},{"lineNumber":36,"author":{"gitId":"tjwjoe"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"tjwjoe"},"content":"    public Storage() {"},{"lineNumber":38,"author":{"gitId":"tjwjoe"},"content":"        file \u003d new File(\"data.txt\");"},{"lineNumber":39,"author":{"gitId":"tjwjoe"},"content":"        tasks \u003d new TaskList();"},{"lineNumber":40,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":42,"author":{"gitId":"tjwjoe"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"tjwjoe"},"content":"     * Reads data from a pre-existing .txt file."},{"lineNumber":44,"author":{"gitId":"tjwjoe"},"content":"     * @throws FileNotFoundException If required file is not found."},{"lineNumber":45,"author":{"gitId":"tjwjoe"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"tjwjoe"},"content":"    public void readData() throws FileNotFoundException {"},{"lineNumber":47,"author":{"gitId":"tjwjoe"},"content":"        assert file !\u003d null : \"Null file\";"},{"lineNumber":48,"author":{"gitId":"tjwjoe"},"content":"        assert tasks !\u003d null : \"Null TaskList\";"},{"lineNumber":49,"author":{"gitId":"tjwjoe"},"content":"        Scanner reader \u003d new Scanner(file);"},{"lineNumber":50,"author":{"gitId":"tjwjoe"},"content":"        while (reader.hasNextLine()) {"},{"lineNumber":51,"author":{"gitId":"tjwjoe"},"content":"            String[] line \u003d reader.nextLine().split(\" # \");"},{"lineNumber":52,"author":{"gitId":"tjwjoe"},"content":"            String type \u003d line[0];"},{"lineNumber":53,"author":{"gitId":"tjwjoe"},"content":"            boolean done \u003d line[1].equals(\"1\");"},{"lineNumber":54,"author":{"gitId":"tjwjoe"},"content":"            String name \u003d line[2];"},{"lineNumber":55,"author":{"gitId":"tjwjoe"},"content":"            if (type.equals(\"T\")) {"},{"lineNumber":56,"author":{"gitId":"tjwjoe"},"content":"                tasks.addItem(new Todo(name, done));"},{"lineNumber":57,"author":{"gitId":"tjwjoe"},"content":"            } else {"},{"lineNumber":58,"author":{"gitId":"tjwjoe"},"content":"                String time \u003d line[3];"},{"lineNumber":59,"author":{"gitId":"tjwjoe"},"content":"                LocalDateTime ldt \u003d LocalDateTime.parse(time, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"));"},{"lineNumber":60,"author":{"gitId":"tjwjoe"},"content":"                if (type.equals(\"D\")) {"},{"lineNumber":61,"author":{"gitId":"tjwjoe"},"content":"                    tasks.addItem(new Deadline(name, ldt, done));"},{"lineNumber":62,"author":{"gitId":"tjwjoe"},"content":"                } else {"},{"lineNumber":63,"author":{"gitId":"tjwjoe"},"content":"                    tasks.addItem(new Event(name, ldt, done));"},{"lineNumber":64,"author":{"gitId":"tjwjoe"},"content":"                }"},{"lineNumber":65,"author":{"gitId":"tjwjoe"},"content":"            }"},{"lineNumber":66,"author":{"gitId":"tjwjoe"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":69,"author":{"gitId":"tjwjoe"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"tjwjoe"},"content":"     * Writes data into a .txt file."},{"lineNumber":71,"author":{"gitId":"tjwjoe"},"content":"     * @param path Path to the file."},{"lineNumber":72,"author":{"gitId":"tjwjoe"},"content":"     * @param text Text to be written into the file."},{"lineNumber":73,"author":{"gitId":"tjwjoe"},"content":"     * @throws InvalidFileException File was not found at the end of the input path."},{"lineNumber":74,"author":{"gitId":"tjwjoe"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"tjwjoe"},"content":"    public void writeToFile(String path, String text) throws InvalidFileException {"},{"lineNumber":76,"author":{"gitId":"tjwjoe"},"content":"        assert path.equals(\"data.txt\");"},{"lineNumber":77,"author":{"gitId":"tjwjoe"},"content":"        try {"},{"lineNumber":78,"author":{"gitId":"tjwjoe"},"content":"            FileWriter fw \u003d new FileWriter(path);"},{"lineNumber":79,"author":{"gitId":"tjwjoe"},"content":"            fw.write(text);"},{"lineNumber":80,"author":{"gitId":"tjwjoe"},"content":"            fw.close();"},{"lineNumber":81,"author":{"gitId":"tjwjoe"},"content":"        } catch (IOException e) {"},{"lineNumber":82,"author":{"gitId":"tjwjoe"},"content":"            throw new InvalidFileException(\"File was not found\");"},{"lineNumber":83,"author":{"gitId":"tjwjoe"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"tjwjoe"},"content":"}"}],"authorContributionMap":{"tjwjoe":85}},{"path":"src/main/java/duke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjwjoe"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":3,"author":{"gitId":"tjwjoe"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":5,"author":{"gitId":"tjwjoe"},"content":"import exceptions.DukeException;"},{"lineNumber":6,"author":{"gitId":"tjwjoe"},"content":"import tasks.TaskList;"},{"lineNumber":7,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":8,"author":{"gitId":"tjwjoe"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"tjwjoe"},"content":" * Handles interactions with users, namely accepting inputs and printing of info."},{"lineNumber":10,"author":{"gitId":"tjwjoe"},"content":" */"},{"lineNumber":11,"author":{"gitId":"tjwjoe"},"content":"public class Ui {"},{"lineNumber":12,"author":{"gitId":"tjwjoe"},"content":"    private static final String LINE \u003d \"---------------------------------------------------------------\";"},{"lineNumber":13,"author":{"gitId":"tjwjoe"},"content":"    private static final String INTRO \u003d \"Welcome to Duke! How may I help you today?\";"},{"lineNumber":14,"author":{"gitId":"tjwjoe"},"content":"    private Scanner sc;"},{"lineNumber":15,"author":{"gitId":"tjwjoe"},"content":"    private String message;"},{"lineNumber":16,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":17,"author":{"gitId":"tjwjoe"},"content":"    public Ui() {"},{"lineNumber":18,"author":{"gitId":"tjwjoe"},"content":"        sc \u003d new Scanner(System.in);"},{"lineNumber":19,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":21,"author":{"gitId":"tjwjoe"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"tjwjoe"},"content":"     * Reads an input from a user."},{"lineNumber":23,"author":{"gitId":"tjwjoe"},"content":"     * @return The user\u0027s input."},{"lineNumber":24,"author":{"gitId":"tjwjoe"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"tjwjoe"},"content":"    public String takeInput() {"},{"lineNumber":26,"author":{"gitId":"tjwjoe"},"content":"        return sc.nextLine();"},{"lineNumber":27,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"tjwjoe"},"content":"    public String getMessage() {"},{"lineNumber":29,"author":{"gitId":"tjwjoe"},"content":"        return message;"},{"lineNumber":30,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"tjwjoe"},"content":"    public static String getIntro() {"},{"lineNumber":32,"author":{"gitId":"tjwjoe"},"content":"        return INTRO;"},{"lineNumber":33,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"tjwjoe"},"content":"    public void setMessageException(DukeException e) {"},{"lineNumber":35,"author":{"gitId":"tjwjoe"},"content":"        message \u003d e.getMessage();"},{"lineNumber":36,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"tjwjoe"},"content":"    public void setMessagePrintHelp() {"},{"lineNumber":38,"author":{"gitId":"tjwjoe"},"content":"        message \u003d \"Welcome to Duke! Here is a list of commands you can use: \\n\\n\""},{"lineNumber":39,"author":{"gitId":"tjwjoe"},"content":"                + \"todo \u003cname\u003e - adds a Todo task to your list\\n\""},{"lineNumber":40,"author":{"gitId":"tjwjoe"},"content":"                + \"deadline \u003cname\u003e /by \u003ctime\u003e - adds a Deadline task to your list\\n\""},{"lineNumber":41,"author":{"gitId":"tjwjoe"},"content":"                + \"event \u003cname\u003e /at \u003ctime\u003e - adds an Event task to your list\\n\""},{"lineNumber":42,"author":{"gitId":"tjwjoe"},"content":"                + \"list - displays the current list of your tasks\\n\""},{"lineNumber":43,"author":{"gitId":"tjwjoe"},"content":"                + \"done \u003cnumber\u003e - marks a task as done\\n\""},{"lineNumber":44,"author":{"gitId":"tjwjoe"},"content":"                + \"undone \u003cnumber\u003e - marks a task as not done \\n\""},{"lineNumber":45,"author":{"gitId":"tjwjoe"},"content":"                + \"delete \u003cnumber\u003e - deletes a task from your list\\n\""},{"lineNumber":46,"author":{"gitId":"tjwjoe"},"content":"                + \"find \u003ckeyword\u003e - displays all tasks containing the exact keyword\\n\""},{"lineNumber":47,"author":{"gitId":"tjwjoe"},"content":"                + \"upcoming \u003cnumber\u003e - displays all tasks occurring within the given number of days\\n\""},{"lineNumber":48,"author":{"gitId":"tjwjoe"},"content":"                + \"help - displays this helpful message\\n\""},{"lineNumber":49,"author":{"gitId":"tjwjoe"},"content":"                + \"exit - shuts down the bot\\n\""},{"lineNumber":50,"author":{"gitId":"tjwjoe"},"content":"                + LINE;"},{"lineNumber":51,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"tjwjoe"},"content":"    public void setMessagePrintList(TaskList tasks) {"},{"lineNumber":53,"author":{"gitId":"tjwjoe"},"content":"        message \u003d \"Here are your tasks:\\n\""},{"lineNumber":54,"author":{"gitId":"tjwjoe"},"content":"                + LINE + \"\\n\""},{"lineNumber":55,"author":{"gitId":"tjwjoe"},"content":"                + tasks + \"\\n\""},{"lineNumber":56,"author":{"gitId":"tjwjoe"},"content":"                + LINE;"},{"lineNumber":57,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"tjwjoe"},"content":"    public void setMessageExit() {"},{"lineNumber":59,"author":{"gitId":"tjwjoe"},"content":"        message \u003d \"Goodbye!\";"},{"lineNumber":60,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"tjwjoe"},"content":"    public void setMessageNewTask(String task, int size) {"},{"lineNumber":62,"author":{"gitId":"tjwjoe"},"content":"        message \u003d \"Added new task: \" + task + \"\\n\""},{"lineNumber":63,"author":{"gitId":"tjwjoe"},"content":"                + \"You now have \" + size + (size \u003d\u003d 1"},{"lineNumber":64,"author":{"gitId":"tjwjoe"},"content":"                        ? \"task in your list.\""},{"lineNumber":65,"author":{"gitId":"tjwjoe"},"content":"                        : \" tasks in your list.\");"},{"lineNumber":66,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"tjwjoe"},"content":"    public void setMessageDoneTask() {"},{"lineNumber":68,"author":{"gitId":"tjwjoe"},"content":"        message \u003d \"Congrats, I have marked that task as finished!\";"},{"lineNumber":69,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":70,"author":{"gitId":"tjwjoe"},"content":"    public void setMessageDeleteTask(TaskList tasks, int idx) {"},{"lineNumber":71,"author":{"gitId":"tjwjoe"},"content":"        message \u003d \"The task \" + tasks.getTasks().get(idx - 1) + \" has been removed.\";"},{"lineNumber":72,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"tjwjoe"},"content":"    public void setMessageFindTask(String tasks, int num) {"},{"lineNumber":74,"author":{"gitId":"tjwjoe"},"content":"        if (num \u003d\u003d 0) {"},{"lineNumber":75,"author":{"gitId":"tjwjoe"},"content":"            message \u003d \"I couldn\u0027t find any tasks matching your keyword.\";"},{"lineNumber":76,"author":{"gitId":"tjwjoe"},"content":"        } else {"},{"lineNumber":77,"author":{"gitId":"tjwjoe"},"content":"            message \u003d \"I found \" + num + (num \u003e 1 ? \" tasks \" : \" task \") + \"matching your keyword.\\n\" + tasks;"},{"lineNumber":78,"author":{"gitId":"tjwjoe"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"tjwjoe"},"content":"    public void setMessageUndoneTask() {"},{"lineNumber":81,"author":{"gitId":"tjwjoe"},"content":"        message \u003d \"I have marked that task as unfinished.\";"},{"lineNumber":82,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"tjwjoe"},"content":"    public void setMessageUpcoming(String tasks, int numTasks, int numDays) {"},{"lineNumber":84,"author":{"gitId":"tjwjoe"},"content":"        if (numTasks \u003d\u003d 0) {"},{"lineNumber":85,"author":{"gitId":"tjwjoe"},"content":"            message \u003d \"I couldn\u0027t find any tasks occurring within \" + numDays + \" days.\";"},{"lineNumber":86,"author":{"gitId":"tjwjoe"},"content":"        } else {"},{"lineNumber":87,"author":{"gitId":"tjwjoe"},"content":"            message \u003d \"I found \" + numTasks + (numTasks \u003e 1 ? \" tasks \" : \" task \") + \"occurring within \" + numDays"},{"lineNumber":88,"author":{"gitId":"tjwjoe"},"content":"                    + \" days.\\n\" + tasks;"},{"lineNumber":89,"author":{"gitId":"tjwjoe"},"content":"        }"},{"lineNumber":90,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":91,"author":{"gitId":"tjwjoe"},"content":"    public void printException(DukeException e) {"},{"lineNumber":92,"author":{"gitId":"tjwjoe"},"content":"        System.out.println(e.getMessage());"},{"lineNumber":93,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":94,"author":{"gitId":"tjwjoe"},"content":"}"}],"authorContributionMap":{"tjwjoe":94}},{"path":"src/main/java/exceptions/BadDtFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjwjoe"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":3,"author":{"gitId":"tjwjoe"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tjwjoe"},"content":" * Thrown if a user enters an invalid date-time format when adding a task."},{"lineNumber":5,"author":{"gitId":"tjwjoe"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":7,"author":{"gitId":"tjwjoe"},"content":"public class BadDtFormatException extends DukeException {"},{"lineNumber":8,"author":{"gitId":"tjwjoe"},"content":"    public BadDtFormatException(String message) {"},{"lineNumber":9,"author":{"gitId":"tjwjoe"},"content":"        super(message);"},{"lineNumber":10,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"tjwjoe"},"content":"}"}],"authorContributionMap":{"tjwjoe":11}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjwjoe"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":3,"author":{"gitId":"tjwjoe"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tjwjoe"},"content":" * Over-arching Exception from which all other Duke-specific exceptions extend from."},{"lineNumber":5,"author":{"gitId":"tjwjoe"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tjwjoe"},"content":"public abstract class DukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"tjwjoe"},"content":"    public DukeException(String message) {"},{"lineNumber":8,"author":{"gitId":"tjwjoe"},"content":"        super(message);"},{"lineNumber":9,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"tjwjoe"},"content":"}"}],"authorContributionMap":{"tjwjoe":10}},{"path":"src/main/java/exceptions/InvalidFileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjwjoe"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":3,"author":{"gitId":"tjwjoe"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tjwjoe"},"content":" * Thrown if the data.txt file cannot be found when required."},{"lineNumber":5,"author":{"gitId":"tjwjoe"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tjwjoe"},"content":"public class InvalidFileException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"tjwjoe"},"content":"    public InvalidFileException(String msg) {"},{"lineNumber":8,"author":{"gitId":"tjwjoe"},"content":"        super(msg);"},{"lineNumber":9,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"tjwjoe"},"content":"}"}],"authorContributionMap":{"tjwjoe":10}},{"path":"src/main/java/exceptions/InvalidNumberInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjwjoe"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":3,"author":{"gitId":"tjwjoe"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tjwjoe"},"content":" * Thrown if an invalid input is detected in a command that requires an integer input."},{"lineNumber":5,"author":{"gitId":"tjwjoe"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tjwjoe"},"content":"public class InvalidNumberInputException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"tjwjoe"},"content":"    public InvalidNumberInputException(String message) {"},{"lineNumber":8,"author":{"gitId":"tjwjoe"},"content":"        super(message);"},{"lineNumber":9,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"tjwjoe"},"content":"}"}],"authorContributionMap":{"tjwjoe":10}},{"path":"src/main/java/exceptions/InvalidTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjwjoe"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":3,"author":{"gitId":"tjwjoe"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tjwjoe"},"content":" * Thrown if description is empty when attempting to add a task."},{"lineNumber":5,"author":{"gitId":"tjwjoe"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tjwjoe"},"content":"public class InvalidTaskException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"tjwjoe"},"content":"    public InvalidTaskException(String message) {"},{"lineNumber":8,"author":{"gitId":"tjwjoe"},"content":"        super(message);"},{"lineNumber":9,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"tjwjoe"},"content":"}"}],"authorContributionMap":{"tjwjoe":10}},{"path":"src/main/java/exceptions/InvalidTaskNumberException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjwjoe"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":3,"author":{"gitId":"tjwjoe"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tjwjoe"},"content":" * Thrown if a non-integer argument is entered when attempting to delete or mark a task as done."},{"lineNumber":5,"author":{"gitId":"tjwjoe"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tjwjoe"},"content":"public class InvalidTaskNumberException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"tjwjoe"},"content":"    public InvalidTaskNumberException(String message) {"},{"lineNumber":8,"author":{"gitId":"tjwjoe"},"content":"        super(message);"},{"lineNumber":9,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"tjwjoe"},"content":"}"}],"authorContributionMap":{"tjwjoe":10}},{"path":"src/main/java/exceptions/InvalidTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjwjoe"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":3,"author":{"gitId":"tjwjoe"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tjwjoe"},"content":" * Thrown if the date-time field is empty when attempting to add a task."},{"lineNumber":5,"author":{"gitId":"tjwjoe"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tjwjoe"},"content":"public class InvalidTimeException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"tjwjoe"},"content":"    public InvalidTimeException(String message) {"},{"lineNumber":8,"author":{"gitId":"tjwjoe"},"content":"        super(message);"},{"lineNumber":9,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"tjwjoe"},"content":"}"}],"authorContributionMap":{"tjwjoe":10}},{"path":"src/main/java/exceptions/InvalidUpcomingInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjwjoe"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":3,"author":{"gitId":"tjwjoe"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tjwjoe"},"content":" * Thrown if an invalid number of days is entered for the \"upcoming\" command."},{"lineNumber":5,"author":{"gitId":"tjwjoe"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tjwjoe"},"content":"public class InvalidUpcomingInputException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"tjwjoe"},"content":"    public InvalidUpcomingInputException(String message) {"},{"lineNumber":8,"author":{"gitId":"tjwjoe"},"content":"        super(message);"},{"lineNumber":9,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"tjwjoe"},"content":"}"}],"authorContributionMap":{"tjwjoe":10}},{"path":"src/main/java/exceptions/TaskNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjwjoe"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":3,"author":{"gitId":"tjwjoe"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tjwjoe"},"content":" * Thrown if the user enters a number that is out of bounds when trying to delete or mark a task as done."},{"lineNumber":5,"author":{"gitId":"tjwjoe"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tjwjoe"},"content":"public class TaskNotFoundException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"tjwjoe"},"content":"    public TaskNotFoundException(String message) {"},{"lineNumber":8,"author":{"gitId":"tjwjoe"},"content":"        super(message);"},{"lineNumber":9,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"tjwjoe"},"content":"}"}],"authorContributionMap":{"tjwjoe":10}},{"path":"src/main/java/exceptions/UnknownCmdException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjwjoe"},"content":"package exceptions;"},{"lineNumber":2,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":3,"author":{"gitId":"tjwjoe"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tjwjoe"},"content":" * Thrown if the user enters an unknown command."},{"lineNumber":5,"author":{"gitId":"tjwjoe"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tjwjoe"},"content":"public class UnknownCmdException extends DukeException {"},{"lineNumber":7,"author":{"gitId":"tjwjoe"},"content":"    public UnknownCmdException(String message) {"},{"lineNumber":8,"author":{"gitId":"tjwjoe"},"content":"        super(message);"},{"lineNumber":9,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"tjwjoe"},"content":"}"}],"authorContributionMap":{"tjwjoe":10}},{"path":"src/main/java/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjwjoe"},"content":"package gui;"},{"lineNumber":2,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":3,"author":{"gitId":"tjwjoe"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"tjwjoe"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":6,"author":{"gitId":"tjwjoe"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"tjwjoe"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"tjwjoe"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"tjwjoe"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"tjwjoe"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"tjwjoe"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"tjwjoe"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"tjwjoe"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"tjwjoe"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"tjwjoe"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":17,"author":{"gitId":"tjwjoe"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"tjwjoe"},"content":" * An example of a custom control using FXML."},{"lineNumber":19,"author":{"gitId":"tjwjoe"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":20,"author":{"gitId":"tjwjoe"},"content":" * containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"tjwjoe"},"content":" */"},{"lineNumber":22,"author":{"gitId":"tjwjoe"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"tjwjoe"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"tjwjoe"},"content":"    private Label dialog;"},{"lineNumber":25,"author":{"gitId":"tjwjoe"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"tjwjoe"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":28,"author":{"gitId":"tjwjoe"},"content":"    DialogBox(String text, Image img) {"},{"lineNumber":29,"author":{"gitId":"tjwjoe"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"tjwjoe"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":31,"author":{"gitId":"tjwjoe"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":32,"author":{"gitId":"tjwjoe"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":33,"author":{"gitId":"tjwjoe"},"content":"            fxmlLoader.load();"},{"lineNumber":34,"author":{"gitId":"tjwjoe"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"tjwjoe"},"content":"            e.printStackTrace();"},{"lineNumber":36,"author":{"gitId":"tjwjoe"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":38,"author":{"gitId":"tjwjoe"},"content":"        dialog.setText(text);"},{"lineNumber":39,"author":{"gitId":"tjwjoe"},"content":"        displayPicture.setImage(img);"},{"lineNumber":40,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":42,"author":{"gitId":"tjwjoe"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"tjwjoe"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":44,"author":{"gitId":"tjwjoe"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"tjwjoe"},"content":"    private void flip() {"},{"lineNumber":46,"author":{"gitId":"tjwjoe"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":47,"author":{"gitId":"tjwjoe"},"content":"        Collections.reverse(tmp);"},{"lineNumber":48,"author":{"gitId":"tjwjoe"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":49,"author":{"gitId":"tjwjoe"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":50,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":52,"author":{"gitId":"tjwjoe"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":53,"author":{"gitId":"tjwjoe"},"content":"        return new DialogBox(text, img);"},{"lineNumber":54,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":56,"author":{"gitId":"tjwjoe"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":57,"author":{"gitId":"tjwjoe"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":58,"author":{"gitId":"tjwjoe"},"content":"        db.flip();"},{"lineNumber":59,"author":{"gitId":"tjwjoe"},"content":"        return db;"},{"lineNumber":60,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"tjwjoe"},"content":"}"}],"authorContributionMap":{"tjwjoe":61}},{"path":"src/main/java/gui/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjwjoe"},"content":"package gui;"},{"lineNumber":2,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":3,"author":{"gitId":"tjwjoe"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":5,"author":{"gitId":"tjwjoe"},"content":"public class Launcher {"},{"lineNumber":6,"author":{"gitId":"tjwjoe"},"content":"    public static void main(String[] args) {"},{"lineNumber":7,"author":{"gitId":"tjwjoe"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":8,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":9,"author":{"gitId":"tjwjoe"},"content":"}"}],"authorContributionMap":{"tjwjoe":9}},{"path":"src/main/java/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjwjoe"},"content":"package gui;"},{"lineNumber":2,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":3,"author":{"gitId":"tjwjoe"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":5,"author":{"gitId":"tjwjoe"},"content":"import duke.Duke;"},{"lineNumber":6,"author":{"gitId":"tjwjoe"},"content":"import javafx.application.Application;"},{"lineNumber":7,"author":{"gitId":"tjwjoe"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"tjwjoe"},"content":"import javafx.scene.Scene;"},{"lineNumber":9,"author":{"gitId":"tjwjoe"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"tjwjoe"},"content":"import javafx.stage.Stage;"},{"lineNumber":11,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":12,"author":{"gitId":"tjwjoe"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"tjwjoe"},"content":" * A GUI for Duke using FXML."},{"lineNumber":14,"author":{"gitId":"tjwjoe"},"content":" */"},{"lineNumber":15,"author":{"gitId":"tjwjoe"},"content":"public class Main extends Application {"},{"lineNumber":16,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":17,"author":{"gitId":"tjwjoe"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":18,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":19,"author":{"gitId":"tjwjoe"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"tjwjoe"},"content":"    public void start(Stage stage) {"},{"lineNumber":21,"author":{"gitId":"tjwjoe"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"tjwjoe"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":23,"author":{"gitId":"tjwjoe"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":24,"author":{"gitId":"tjwjoe"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":25,"author":{"gitId":"tjwjoe"},"content":"            stage.setScene(scene);"},{"lineNumber":26,"author":{"gitId":"tjwjoe"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":27,"author":{"gitId":"tjwjoe"},"content":"            stage.show();"},{"lineNumber":28,"author":{"gitId":"tjwjoe"},"content":"        } catch (IOException e) {"},{"lineNumber":29,"author":{"gitId":"tjwjoe"},"content":"            e.printStackTrace();"},{"lineNumber":30,"author":{"gitId":"tjwjoe"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":33,"author":{"gitId":"tjwjoe"},"content":"}"}],"authorContributionMap":{"tjwjoe":33}},{"path":"src/main/java/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjwjoe"},"content":"package gui;"},{"lineNumber":2,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":3,"author":{"gitId":"tjwjoe"},"content":"import commands.Command;"},{"lineNumber":4,"author":{"gitId":"tjwjoe"},"content":"import duke.Duke;"},{"lineNumber":5,"author":{"gitId":"tjwjoe"},"content":"import duke.Ui;"},{"lineNumber":6,"author":{"gitId":"tjwjoe"},"content":"import exceptions.DukeException;"},{"lineNumber":7,"author":{"gitId":"tjwjoe"},"content":"import javafx.fxml.FXML;"},{"lineNumber":8,"author":{"gitId":"tjwjoe"},"content":"import javafx.scene.control.Button;"},{"lineNumber":9,"author":{"gitId":"tjwjoe"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":10,"author":{"gitId":"tjwjoe"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":11,"author":{"gitId":"tjwjoe"},"content":"import javafx.scene.image.Image;"},{"lineNumber":12,"author":{"gitId":"tjwjoe"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":13,"author":{"gitId":"tjwjoe"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":14,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":15,"author":{"gitId":"tjwjoe"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"tjwjoe"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":17,"author":{"gitId":"tjwjoe"},"content":" */"},{"lineNumber":18,"author":{"gitId":"tjwjoe"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":19,"author":{"gitId":"tjwjoe"},"content":"    private static final String USER_IMAGE_PATH \u003d \"/images/angry.png\";"},{"lineNumber":20,"author":{"gitId":"tjwjoe"},"content":"    private static final String DUKE_IMAGE_PATH \u003d \"/images/happy.png\";"},{"lineNumber":21,"author":{"gitId":"tjwjoe"},"content":"    @FXML"},{"lineNumber":22,"author":{"gitId":"tjwjoe"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":23,"author":{"gitId":"tjwjoe"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"tjwjoe"},"content":"    private VBox dialogContainer;"},{"lineNumber":25,"author":{"gitId":"tjwjoe"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"tjwjoe"},"content":"    private TextField userInput;"},{"lineNumber":27,"author":{"gitId":"tjwjoe"},"content":"    @FXML"},{"lineNumber":28,"author":{"gitId":"tjwjoe"},"content":"    private Button sendButton;"},{"lineNumber":29,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":30,"author":{"gitId":"tjwjoe"},"content":"    private Duke duke;"},{"lineNumber":31,"author":{"gitId":"tjwjoe"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(USER_IMAGE_PATH));"},{"lineNumber":32,"author":{"gitId":"tjwjoe"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(DUKE_IMAGE_PATH));"},{"lineNumber":33,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":34,"author":{"gitId":"tjwjoe"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"tjwjoe"},"content":"     * Initialise the MainWindow."},{"lineNumber":36,"author":{"gitId":"tjwjoe"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"tjwjoe"},"content":"    @FXML"},{"lineNumber":38,"author":{"gitId":"tjwjoe"},"content":"    public void initialize() {"},{"lineNumber":39,"author":{"gitId":"tjwjoe"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":40,"author":{"gitId":"tjwjoe"},"content":"        printIntro();"},{"lineNumber":41,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":43,"author":{"gitId":"tjwjoe"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":44,"author":{"gitId":"tjwjoe"},"content":"        duke \u003d d;"},{"lineNumber":45,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":47,"author":{"gitId":"tjwjoe"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"tjwjoe"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":49,"author":{"gitId":"tjwjoe"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":50,"author":{"gitId":"tjwjoe"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"tjwjoe"},"content":"    @FXML"},{"lineNumber":52,"author":{"gitId":"tjwjoe"},"content":"    private void handleUserInput() {"},{"lineNumber":53,"author":{"gitId":"tjwjoe"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":54,"author":{"gitId":"tjwjoe"},"content":"        try {"},{"lineNumber":55,"author":{"gitId":"tjwjoe"},"content":"            Command command \u003d duke.getParser().parse(input);"},{"lineNumber":56,"author":{"gitId":"tjwjoe"},"content":"            command.exec(duke.getTaskList(), duke.getUi(), duke.getStorage());"},{"lineNumber":57,"author":{"gitId":"tjwjoe"},"content":"        } catch (DukeException e) {"},{"lineNumber":58,"author":{"gitId":"tjwjoe"},"content":"            duke.getUi().setMessageException(e);"},{"lineNumber":59,"author":{"gitId":"tjwjoe"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"tjwjoe"},"content":"        String response \u003d duke.getResponse();"},{"lineNumber":61,"author":{"gitId":"tjwjoe"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":62,"author":{"gitId":"tjwjoe"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":63,"author":{"gitId":"tjwjoe"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":64,"author":{"gitId":"tjwjoe"},"content":"        );"},{"lineNumber":65,"author":{"gitId":"tjwjoe"},"content":"        userInput.clear();"},{"lineNumber":66,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":68,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":69,"author":{"gitId":"tjwjoe"},"content":"    private void printIntro() {"},{"lineNumber":70,"author":{"gitId":"tjwjoe"},"content":"        DialogBox intro \u003d DialogBox.getDukeDialog(Ui.getIntro(),"},{"lineNumber":71,"author":{"gitId":"tjwjoe"},"content":"                new Image(this.getClass().getResourceAsStream(DUKE_IMAGE_PATH)));"},{"lineNumber":72,"author":{"gitId":"tjwjoe"},"content":"        dialogContainer.getChildren().addAll(intro);"},{"lineNumber":73,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"tjwjoe"},"content":"}"}],"authorContributionMap":{"tjwjoe":74}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjwjoe"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":3,"author":{"gitId":"tjwjoe"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":5,"author":{"gitId":"tjwjoe"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"tjwjoe"},"content":" * Represents a Deadline task with a name and a LocalDateTime object."},{"lineNumber":7,"author":{"gitId":"tjwjoe"},"content":" */"},{"lineNumber":8,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":9,"author":{"gitId":"tjwjoe"},"content":"public class Deadline extends TimedTask {"},{"lineNumber":10,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":11,"author":{"gitId":"tjwjoe"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"tjwjoe"},"content":"     * Creates a new Deadline task."},{"lineNumber":13,"author":{"gitId":"tjwjoe"},"content":"     * @param name Name of the task."},{"lineNumber":14,"author":{"gitId":"tjwjoe"},"content":"     * @param datetime Date and time of occurrence of the task."},{"lineNumber":15,"author":{"gitId":"tjwjoe"},"content":"     * @param done Whether the task is done or not."},{"lineNumber":16,"author":{"gitId":"tjwjoe"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"tjwjoe"},"content":"    public Deadline(String name, LocalDateTime datetime, boolean done) {"},{"lineNumber":18,"author":{"gitId":"tjwjoe"},"content":"        super(name, done, datetime);"},{"lineNumber":19,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":21,"author":{"gitId":"tjwjoe"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"tjwjoe"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"tjwjoe"},"content":"        return \"[D]\" + super.toString();"},{"lineNumber":24,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":26,"author":{"gitId":"tjwjoe"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"tjwjoe"},"content":"    public String writeString() {"},{"lineNumber":28,"author":{"gitId":"tjwjoe"},"content":"        return \"D # \" + super.writeString();"},{"lineNumber":29,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"tjwjoe"},"content":"}"}],"authorContributionMap":{"tjwjoe":30}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjwjoe"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":3,"author":{"gitId":"tjwjoe"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":5,"author":{"gitId":"tjwjoe"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"tjwjoe"},"content":" * Represents an Event task with a name and a LocalDateTime object."},{"lineNumber":7,"author":{"gitId":"tjwjoe"},"content":" */"},{"lineNumber":8,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":9,"author":{"gitId":"tjwjoe"},"content":"public class Event extends TimedTask {"},{"lineNumber":10,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":11,"author":{"gitId":"tjwjoe"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"tjwjoe"},"content":"     * Creates a new Event task."},{"lineNumber":13,"author":{"gitId":"tjwjoe"},"content":"     * @param name Name of the task."},{"lineNumber":14,"author":{"gitId":"tjwjoe"},"content":"     * @param datetime Date and time of occurrence of the task."},{"lineNumber":15,"author":{"gitId":"tjwjoe"},"content":"     * @param done Whether the task is done or not."},{"lineNumber":16,"author":{"gitId":"tjwjoe"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"tjwjoe"},"content":"    public Event(String name, LocalDateTime datetime, boolean done) {"},{"lineNumber":18,"author":{"gitId":"tjwjoe"},"content":"        super(name, done, datetime);"},{"lineNumber":19,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":21,"author":{"gitId":"tjwjoe"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"tjwjoe"},"content":"    public String toString() {"},{"lineNumber":23,"author":{"gitId":"tjwjoe"},"content":"        return \"[E]\" + super.toString();"},{"lineNumber":24,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":26,"author":{"gitId":"tjwjoe"},"content":"    @Override"},{"lineNumber":27,"author":{"gitId":"tjwjoe"},"content":"    public String writeString() {"},{"lineNumber":28,"author":{"gitId":"tjwjoe"},"content":"        return \"E # \" + super.writeString();"},{"lineNumber":29,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"tjwjoe"},"content":"}"}],"authorContributionMap":{"tjwjoe":30}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjwjoe"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":3,"author":{"gitId":"tjwjoe"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tjwjoe"},"content":" * Represents a general Task object with a name."},{"lineNumber":5,"author":{"gitId":"tjwjoe"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":7,"author":{"gitId":"tjwjoe"},"content":"public abstract class Task {"},{"lineNumber":8,"author":{"gitId":"tjwjoe"},"content":"    private String name;"},{"lineNumber":9,"author":{"gitId":"tjwjoe"},"content":"    private boolean isDone;"},{"lineNumber":10,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":11,"author":{"gitId":"tjwjoe"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"tjwjoe"},"content":"     * Creates a new Task object."},{"lineNumber":13,"author":{"gitId":"tjwjoe"},"content":"     * @param name Name of the task."},{"lineNumber":14,"author":{"gitId":"tjwjoe"},"content":"     * @param isDone Whether the task is done or not."},{"lineNumber":15,"author":{"gitId":"tjwjoe"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"tjwjoe"},"content":"    public Task(String name, boolean isDone) {"},{"lineNumber":17,"author":{"gitId":"tjwjoe"},"content":"        this.name \u003d name;"},{"lineNumber":18,"author":{"gitId":"tjwjoe"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":19,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":21,"author":{"gitId":"tjwjoe"},"content":"    public void setDone(boolean isDone) {"},{"lineNumber":22,"author":{"gitId":"tjwjoe"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":23,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":25,"author":{"gitId":"tjwjoe"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"tjwjoe"},"content":"     * Prints a tick or X symbol."},{"lineNumber":27,"author":{"gitId":"tjwjoe"},"content":"     * @return a tick or X symbol."},{"lineNumber":28,"author":{"gitId":"tjwjoe"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"tjwjoe"},"content":"    public String getStatusIcon() {"},{"lineNumber":30,"author":{"gitId":"tjwjoe"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\");"},{"lineNumber":31,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":33,"author":{"gitId":"tjwjoe"},"content":"    public String getName() {"},{"lineNumber":34,"author":{"gitId":"tjwjoe"},"content":"        return this.name;"},{"lineNumber":35,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":37,"author":{"gitId":"tjwjoe"},"content":"    public String toString() {"},{"lineNumber":38,"author":{"gitId":"tjwjoe"},"content":"        return \"[\" + getStatusIcon() + \"] \" + name;"},{"lineNumber":39,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":41,"author":{"gitId":"tjwjoe"},"content":"    public String writeString() {"},{"lineNumber":42,"author":{"gitId":"tjwjoe"},"content":"        return (isDone ? \"1\" : \"0\") + \" # \" + name;"},{"lineNumber":43,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"tjwjoe"},"content":"}"}],"authorContributionMap":{"tjwjoe":44}},{"path":"src/main/java/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjwjoe"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":3,"author":{"gitId":"tjwjoe"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":5,"author":{"gitId":"tjwjoe"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"tjwjoe"},"content":" * Represents a data structure to contain an ArrayList of Task objects."},{"lineNumber":7,"author":{"gitId":"tjwjoe"},"content":" */"},{"lineNumber":8,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":9,"author":{"gitId":"tjwjoe"},"content":"public class TaskList {"},{"lineNumber":10,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":11,"author":{"gitId":"tjwjoe"},"content":"    private ArrayList\u003cTask\u003e list;"},{"lineNumber":12,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":13,"author":{"gitId":"tjwjoe"},"content":"    public TaskList() {"},{"lineNumber":14,"author":{"gitId":"tjwjoe"},"content":"        list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":15,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":17,"author":{"gitId":"tjwjoe"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"tjwjoe"},"content":"     * Adds a task to the ArrayList of tasks."},{"lineNumber":19,"author":{"gitId":"tjwjoe"},"content":"     * @param item The task to be added."},{"lineNumber":20,"author":{"gitId":"tjwjoe"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"tjwjoe"},"content":"    public void addItem(Task item) {"},{"lineNumber":22,"author":{"gitId":"tjwjoe"},"content":"        list.add(item);"},{"lineNumber":23,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":25,"author":{"gitId":"tjwjoe"},"content":"    public int size() {"},{"lineNumber":26,"author":{"gitId":"tjwjoe"},"content":"        return list.size();"},{"lineNumber":27,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":29,"author":{"gitId":"tjwjoe"},"content":"    public ArrayList\u003cTask\u003e getTasks() {"},{"lineNumber":30,"author":{"gitId":"tjwjoe"},"content":"        return list;"},{"lineNumber":31,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":33,"author":{"gitId":"tjwjoe"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"tjwjoe"},"content":"     * Enables the TaskList object to be printed in a easily readable format for the user."},{"lineNumber":35,"author":{"gitId":"tjwjoe"},"content":"     * @return A representation of the TaskList in a form easily readable by a user."},{"lineNumber":36,"author":{"gitId":"tjwjoe"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"tjwjoe"},"content":"    public String toString() {"},{"lineNumber":38,"author":{"gitId":"tjwjoe"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":39,"author":{"gitId":"tjwjoe"},"content":"        int counter \u003d 1;"},{"lineNumber":40,"author":{"gitId":"tjwjoe"},"content":"        for (Task task : list) {"},{"lineNumber":41,"author":{"gitId":"tjwjoe"},"content":"            sb.append(counter \u003d\u003d 1 ? \"\" : \"\\n\").append(counter).append(\".\").append(task);"},{"lineNumber":42,"author":{"gitId":"tjwjoe"},"content":"            counter++;"},{"lineNumber":43,"author":{"gitId":"tjwjoe"},"content":"        }"},{"lineNumber":44,"author":{"gitId":"tjwjoe"},"content":"        return sb.toString();"},{"lineNumber":45,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":47,"author":{"gitId":"tjwjoe"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"tjwjoe"},"content":"     * Writes the TaskList object in a format easily readable by a Storage object."},{"lineNumber":49,"author":{"gitId":"tjwjoe"},"content":"     * @return A representation of the TaskList in a form easily readable by a Storage object."},{"lineNumber":50,"author":{"gitId":"tjwjoe"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"tjwjoe"},"content":"    public String writeString() {"},{"lineNumber":52,"author":{"gitId":"tjwjoe"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":53,"author":{"gitId":"tjwjoe"},"content":"        int counter \u003d 1;"},{"lineNumber":54,"author":{"gitId":"tjwjoe"},"content":"        for (Task task : list) {"},{"lineNumber":55,"author":{"gitId":"tjwjoe"},"content":"            sb.append(task.writeString()).append(counter !\u003d list.size() ? \"\\n\" : \"\");"},{"lineNumber":56,"author":{"gitId":"tjwjoe"},"content":"            counter++;"},{"lineNumber":57,"author":{"gitId":"tjwjoe"},"content":"        }"},{"lineNumber":58,"author":{"gitId":"tjwjoe"},"content":"        return sb.toString();"},{"lineNumber":59,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"tjwjoe"},"content":"}"}],"authorContributionMap":{"tjwjoe":60}},{"path":"src/main/java/tasks/TimedTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjwjoe"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":3,"author":{"gitId":"tjwjoe"},"content":"import java.time.LocalDateTime;"},{"lineNumber":4,"author":{"gitId":"tjwjoe"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":6,"author":{"gitId":"tjwjoe"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"tjwjoe"},"content":" * Represents a Task with a date and time attached to it."},{"lineNumber":8,"author":{"gitId":"tjwjoe"},"content":" */"},{"lineNumber":9,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":10,"author":{"gitId":"tjwjoe"},"content":"public abstract class TimedTask extends Task {"},{"lineNumber":11,"author":{"gitId":"tjwjoe"},"content":"    private LocalDateTime datetime;"},{"lineNumber":12,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":13,"author":{"gitId":"tjwjoe"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"tjwjoe"},"content":"     * Creates a new TimedTask object."},{"lineNumber":15,"author":{"gitId":"tjwjoe"},"content":"     * @param name Name of the TimedTask."},{"lineNumber":16,"author":{"gitId":"tjwjoe"},"content":"     * @param isDone Whether the task is done or not."},{"lineNumber":17,"author":{"gitId":"tjwjoe"},"content":"     * @param datetime The date and time of occurrence the task."},{"lineNumber":18,"author":{"gitId":"tjwjoe"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"tjwjoe"},"content":"    public TimedTask(String name, boolean isDone, LocalDateTime datetime) {"},{"lineNumber":20,"author":{"gitId":"tjwjoe"},"content":"        super(name, isDone);"},{"lineNumber":21,"author":{"gitId":"tjwjoe"},"content":"        this.datetime \u003d datetime;"},{"lineNumber":22,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"tjwjoe"},"content":"    public LocalDateTime getDateTime() {"},{"lineNumber":24,"author":{"gitId":"tjwjoe"},"content":"        return datetime;"},{"lineNumber":25,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":27,"author":{"gitId":"tjwjoe"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"tjwjoe"},"content":"    public String toString() {"},{"lineNumber":29,"author":{"gitId":"tjwjoe"},"content":"        return super.toString() + \" (by: \""},{"lineNumber":30,"author":{"gitId":"tjwjoe"},"content":"                + getDateTime().format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\";"},{"lineNumber":31,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"tjwjoe"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"tjwjoe"},"content":"    public String writeString() {"},{"lineNumber":34,"author":{"gitId":"tjwjoe"},"content":"        return super.writeString() + \" # \""},{"lineNumber":35,"author":{"gitId":"tjwjoe"},"content":"                + getDateTime().format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"));"},{"lineNumber":36,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"tjwjoe"},"content":"}"}],"authorContributionMap":{"tjwjoe":37}},{"path":"src/main/java/tasks/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjwjoe"},"content":"package tasks;"},{"lineNumber":2,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":3,"author":{"gitId":"tjwjoe"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"tjwjoe"},"content":" * Represents a Todo task with a name."},{"lineNumber":5,"author":{"gitId":"tjwjoe"},"content":" */"},{"lineNumber":6,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":7,"author":{"gitId":"tjwjoe"},"content":"public class Todo extends Task {"},{"lineNumber":8,"author":{"gitId":"tjwjoe"},"content":"    public Todo(String name, boolean isDone) {"},{"lineNumber":9,"author":{"gitId":"tjwjoe"},"content":"        super(name, isDone);"},{"lineNumber":10,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":12,"author":{"gitId":"tjwjoe"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"tjwjoe"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"tjwjoe"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":15,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":17,"author":{"gitId":"tjwjoe"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"tjwjoe"},"content":"    public String writeString() {"},{"lineNumber":19,"author":{"gitId":"tjwjoe"},"content":"        return \"T # \" + super.writeString();"},{"lineNumber":20,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"tjwjoe"},"content":"}"}],"authorContributionMap":{"tjwjoe":21}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tjwjoe"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":3,"author":{"gitId":"tjwjoe"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"tjwjoe"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"tjwjoe"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"tjwjoe"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":8,"author":{"gitId":"tjwjoe"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"tjwjoe"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"tjwjoe"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" maxHeight \u003d \"Infinity\" /\u003e"},{"lineNumber":11,"author":{"gitId":"tjwjoe"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e"},{"lineNumber":12,"author":{"gitId":"tjwjoe"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"tjwjoe"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"tjwjoe"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"tjwjoe"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"tjwjoe"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"tjwjoe":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"tjwjoe"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":3,"author":{"gitId":"tjwjoe"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"tjwjoe"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"tjwjoe"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"tjwjoe"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"tjwjoe"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":9,"author":{"gitId":"tjwjoe"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e"},{"lineNumber":10,"author":{"gitId":"tjwjoe"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e"},{"lineNumber":11,"author":{"gitId":"tjwjoe"},"content":"\u003c?import javafx.scene.layout.RowConstraints?\u003e"},{"lineNumber":12,"author":{"gitId":"tjwjoe"},"content":"\u003cAnchorPane maxHeight\u003d\"Infinity\" maxWidth\u003d\"Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"gui.MainWindow\"\u003e"},{"lineNumber":13,"author":{"gitId":"tjwjoe"},"content":"    \u003cchildren\u003e"},{"lineNumber":14,"author":{"gitId":"tjwjoe"},"content":"        \u003cGridPane AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"},{"lineNumber":15,"author":{"gitId":"tjwjoe"},"content":"            \u003ccolumnConstraints\u003e"},{"lineNumber":16,"author":{"gitId":"tjwjoe"},"content":"                \u003cColumnConstraints hgrow\u003d\"SOMETIMES\"/\u003e"},{"lineNumber":17,"author":{"gitId":"tjwjoe"},"content":"            \u003c/columnConstraints\u003e"},{"lineNumber":18,"author":{"gitId":"tjwjoe"},"content":"            \u003crowConstraints\u003e"},{"lineNumber":19,"author":{"gitId":"tjwjoe"},"content":"                \u003cRowConstraints vgrow\u003d\"SOMETIMES\"/\u003e"},{"lineNumber":20,"author":{"gitId":"tjwjoe"},"content":"            \u003c/rowConstraints\u003e"},{"lineNumber":21,"author":{"gitId":"tjwjoe"},"content":"            \u003cchildren\u003e"},{"lineNumber":22,"author":{"gitId":"tjwjoe"},"content":"                \u003cTextField fx:id\u003d\"userInput\" onAction\u003d\"#handleUserInput\" minHeight\u003d\"41.0\" minWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" GridPane.columnIndex\u003d\"0\" GridPane.rowIndex\u003d\"3\"  GridPane.valignment\u003d\"CENTER\"/\u003e"},{"lineNumber":23,"author":{"gitId":"tjwjoe"},"content":"                \u003cButton fx:id\u003d\"sendButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" minHeight\u003d\"41.0\" minWidth\u003d\"76.0\" text\u003d\"Send\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"3\" GridPane.valignment\u003d\"CENTER\"/\u003e"},{"lineNumber":24,"author":{"gitId":"tjwjoe"},"content":"                \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" fitToWidth\u003d\"true\" vvalue\u003d\"1.0\" maxHeight\u003d\"Infinity\" GridPane.columnIndex\u003d\"0\" GridPane.rowIndex\u003d\"0\" GridPane.columnSpan\u003d\"2\"\u003e"},{"lineNumber":25,"author":{"gitId":"tjwjoe"},"content":"                    \u003ccontent\u003e"},{"lineNumber":26,"author":{"gitId":"tjwjoe"},"content":"                        \u003cVBox fx:id\u003d\"dialogContainer\" maxHeight\u003d\"Infinity\"/\u003e"},{"lineNumber":27,"author":{"gitId":"tjwjoe"},"content":"                    \u003c/content\u003e"},{"lineNumber":28,"author":{"gitId":"tjwjoe"},"content":"                \u003c/ScrollPane\u003e"},{"lineNumber":29,"author":{"gitId":"tjwjoe"},"content":"            \u003c/children\u003e"},{"lineNumber":30,"author":{"gitId":"tjwjoe"},"content":"        \u003c/GridPane\u003e"},{"lineNumber":31,"author":{"gitId":"tjwjoe"},"content":"    \u003c/children\u003e"},{"lineNumber":32,"author":{"gitId":"tjwjoe"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"tjwjoe":32}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"tjwjoe"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":3,"author":{"gitId":"tjwjoe"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":5,"author":{"gitId":"tjwjoe"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":7,"author":{"gitId":"tjwjoe"},"content":"import commands.AddCommand;"},{"lineNumber":8,"author":{"gitId":"tjwjoe"},"content":"import commands.DeleteCommand;"},{"lineNumber":9,"author":{"gitId":"tjwjoe"},"content":"import commands.DoneCommand;"},{"lineNumber":10,"author":{"gitId":"tjwjoe"},"content":"import commands.ExitCommand;"},{"lineNumber":11,"author":{"gitId":"tjwjoe"},"content":"import commands.FindCommand;"},{"lineNumber":12,"author":{"gitId":"tjwjoe"},"content":"import commands.HelpCommand;"},{"lineNumber":13,"author":{"gitId":"tjwjoe"},"content":"import commands.ListCommand;"},{"lineNumber":14,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":15,"author":{"gitId":"tjwjoe"},"content":"public class ParserTest {"},{"lineNumber":16,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":17,"author":{"gitId":"tjwjoe"},"content":"    @Test"},{"lineNumber":18,"author":{"gitId":"tjwjoe"},"content":"    public void parse_exitString_exits() {"},{"lineNumber":19,"author":{"gitId":"tjwjoe"},"content":"        assertEquals(new Parser().parse(\"exit\").getClass(), ExitCommand.class);"},{"lineNumber":20,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"tjwjoe"},"content":"    @Test"},{"lineNumber":22,"author":{"gitId":"tjwjoe"},"content":"    public void parse_listString_prints() {"},{"lineNumber":23,"author":{"gitId":"tjwjoe"},"content":"        assertEquals(new Parser().parse(\"list\").getClass(), ListCommand.class);"},{"lineNumber":24,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"tjwjoe"},"content":"    @Test"},{"lineNumber":26,"author":{"gitId":"tjwjoe"},"content":"    public void parse_helpString_prints() {"},{"lineNumber":27,"author":{"gitId":"tjwjoe"},"content":"        assertEquals(new Parser().parse(\"help\").getClass(), HelpCommand.class);"},{"lineNumber":28,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"tjwjoe"},"content":"    @Test"},{"lineNumber":30,"author":{"gitId":"tjwjoe"},"content":"    public void parse_doneString_prints() {"},{"lineNumber":31,"author":{"gitId":"tjwjoe"},"content":"        assertEquals(new Parser().parse(\"done 2\").getClass(), DoneCommand.class);"},{"lineNumber":32,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"tjwjoe"},"content":"    @Test"},{"lineNumber":34,"author":{"gitId":"tjwjoe"},"content":"    public void parse_deleteString_prints() {"},{"lineNumber":35,"author":{"gitId":"tjwjoe"},"content":"        assertEquals(new Parser().parse(\"delete 2\").getClass(), DeleteCommand.class);"},{"lineNumber":36,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":38,"author":{"gitId":"tjwjoe"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"tjwjoe"},"content":"     * Tests for each type of AddCommand that can be entered."},{"lineNumber":40,"author":{"gitId":"tjwjoe"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"tjwjoe"},"content":"    @Test"},{"lineNumber":42,"author":{"gitId":"tjwjoe"},"content":"    public void parse_addString_prints() {"},{"lineNumber":43,"author":{"gitId":"tjwjoe"},"content":"        assertEquals(new Parser().parse(\"todo buy new pants\").getClass(), AddCommand.class);"},{"lineNumber":44,"author":{"gitId":"tjwjoe"},"content":"        assertEquals(new Parser().parse(\"deadline Assignment /by 25/08/2020 09:00\").getClass(), AddCommand.class);"},{"lineNumber":45,"author":{"gitId":"tjwjoe"},"content":"        assertEquals(new Parser().parse(\"event IPPT /at 31/10/2020 10:30\").getClass(), AddCommand.class);"},{"lineNumber":46,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"tjwjoe"},"content":"    @Test"},{"lineNumber":48,"author":{"gitId":"tjwjoe"},"content":"    public void parse_findString_prints() {"},{"lineNumber":49,"author":{"gitId":"tjwjoe"},"content":"        assertEquals(new Parser().parse(\"find book\").getClass(), FindCommand.class);"},{"lineNumber":50,"author":{"gitId":"tjwjoe"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"tjwjoe"},"content":"}"}],"authorContributionMap":{"tjwjoe":51}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"tjwjoe"},"content":"todo Watch webcast"},{"lineNumber":2,"author":{"gitId":"tjwjoe"},"content":"deadline Finish tutorial /by 5pm Monday"},{"lineNumber":3,"author":{"gitId":"tjwjoe"},"content":"event Family dinner /at 6pm Tuesday"},{"lineNumber":4,"author":{"gitId":"tjwjoe"},"content":"todo Buy new clothes"},{"lineNumber":5,"author":{"gitId":"tjwjoe"},"content":"done 2"},{"lineNumber":6,"author":{"gitId":"tjwjoe"},"content":"list"}],"authorContributionMap":{"tjwjoe":6}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"tjwjoe"},"content":"if not exist D:\\CS2103T\\ip\\bin mkdir D:\\CS2103T\\ip\\bin"},{"lineNumber":5,"author":{"gitId":"-"},"content":""},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run"},{"lineNumber":7,"author":{"gitId":"-"},"content":"del ACTUAL.TXT"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder"},{"lineNumber":10,"author":{"gitId":"tjwjoe"},"content":"set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"},{"lineNumber":11,"author":{"gitId":"tjwjoe"},"content":"javac  -cp D:\\CS2103T\\ip\\src\\ -Xlint:none -d D:\\CS2103T\\ip\\bin D:\\CS2103T\\ip\\src\\main\\java\\*.java -target 11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":13,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":15,"author":{"gitId":"-"},"content":")"},{"lineNumber":16,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":19,"author":{"gitId":"tjwjoe"},"content":"java -classpath D:\\CS2103T\\ip\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":20,"author":{"gitId":"-"},"content":""},{"lineNumber":21,"author":{"gitId":"-"},"content":"REM compare the output to the expected output"},{"lineNumber":22,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"},{"lineNumber":23,"author":{"gitId":"tjwjoe"},"content":""},{"lineNumber":24,"author":{"gitId":"tjwjoe"},"content":"pause"}],"authorContributionMap":{"tjwjoe":6,"-":18}}]
