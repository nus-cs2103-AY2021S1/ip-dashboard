[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter-api:5.6.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 33,
      "TCQian": 3
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": "D | 0 | return book | June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": "E | 0 | project meeting | Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": "T | 1 | join sports club"
      }
    ],
    "authorContributionMap": {
      "TCQian": 4
    }
  },
  {
    "path": "src/main/java/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * A subclass of Command class."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * Handle \"bye\" command."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public static final String TAB \u003d \"  \";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private static final String END \u003d TAB + \" Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param tasks an object includes a list of tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param ui ui."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param storage the storage that working on data file."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        System.out.println(END);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Returns isExit to show stop reading user input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return true to indicate an end."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 28
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * Abstract class for handling different commands."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            throws DoneException, DeleteException, DeadlineException, EventException, TodoException, FindException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 8
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * A subclass of Task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * Contains a task description and a time."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Constructor of Deadline object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param description description of the task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param by the deadline of the task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Overloaded constructor of Deadline object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param description description of the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param isDone the status of the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param by the deadline of the task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public Deadline(String description, boolean isDone, String by) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Marks the deadline task as done."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return new Deadline object with true for isDone."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public Deadline markAsDone() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return new Deadline(this.description, true, this.by);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Turns task object into a string to be saved in data file."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return string in the format of data in data file."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public String stringify() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        String number \u003d isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return \"D | \" + number + \" | \" + super.description + \" | \" + this.by;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Prints object."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return string of object."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return \"[D]\" + \"[\" + super.getStatusIcon() + \"] \" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 55
    }
  },
  {
    "path": "src/main/java/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * A subclass of Command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * Handles \"deadline\" command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private static final String TAB \u003d \"  \";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private static final String ADD_TASK_TITLE \u003d TAB + \" Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private String[] input;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param input user input."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public DeadlineCommand(String[] input) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param tasks a list of tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param ui ui."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param storage the storage working on data file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @throws DeadlineException to show incorrect user input."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DeadlineException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        ArrayList\u003cTask\u003e store \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        for (int i \u003d 1; i \u003c input.length; i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            if (input[i].equals(\"/by\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                index \u003d i;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        if (input.length \u003d\u003d 1 || index \u003d\u003d 1) { //no description"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            throw new DeadlineException(\" ☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        } else if (index \u003d\u003d input.length - 1 || index \u003d\u003d 0) { //no time"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            throw new DeadlineException(\" ☹ OOPS!!! The time of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        String time \u003d \"\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        for (int i \u003d 1; i \u003c index; i++) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            description \u003d description + input[i] + \" \";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        for (int i \u003d index + 1; i \u003c input.length; i++) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            time \u003d time + input[i] + \" \";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        Date date;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/M/yyyy hhmm\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            date \u003d formatter.parse(time.trim());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            throw new DeadlineException(\" ☹ OOPS!!! The time of a deadline must be in the format of dd/M/yyyy hhmm.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        Deadline newTask \u003d new Deadline(description.trim(), new SimpleDateFormat(\"MMM dd yyyy HH:mm\").format(date));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        store.add(newTask);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        storage.save(new TaskList(store));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        System.out.println(ADD_TASK_TITLE);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        System.out.println(TAB + \"   \" + newTask);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        System.out.println(TAB + \" Now you have \" + store.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Returns isDone to stop user from entering command."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return false to continue to accept user input."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 79
    }
  },
  {
    "path": "src/main/java/DeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * A subclass of TaskException."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * Shows error for deadline tasks."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class DeadlineException extends TaskException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public DeadlineException(String msg) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 9
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * A subclass of Command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * Handles \"delete\" command."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private static final String TAB \u003d \"  \";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private static final String DELETE_TITLE \u003d TAB + \" Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private String[] input;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * A subclass of command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param input user input."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public DeleteCommand(String[] input) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Execute the command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param tasks list of existing tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param ui Ui."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param storage storage of data."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @throws DeleteException exception for invalid input."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DeleteException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        ArrayList\u003cTask\u003e store \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        if (this.input.length \u003d\u003d 1) { //incomplete done command"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            throw new DeleteException(\" ☹ OOPS!!! The description of a delete cannot be empty.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        int indexOfMarkingTask \u003d Integer.parseInt(this.input[1]) - 1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        if (indexOfMarkingTask + 1 \u003e store.size() || indexOfMarkingTask + 1 \u003c\u003d 0) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            throw new DeleteException(\" ☹ OOPS!!! There is no such task.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        //complete done command"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        Task deletingTask \u003d store.get(indexOfMarkingTask);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        store.remove(indexOfMarkingTask);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        storage.save(new TaskList(store));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        System.out.println(DELETE_TITLE);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        System.out.println(TAB + \"   \" + deletingTask);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        System.out.println(TAB + \" Now you have \" + store.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Returns isDone to stop user from entering command."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return false to continue to accept user input."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "TCQian": 59
    }
  },
  {
    "path": "src/main/java/DeleteException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * A subclass of Exception."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * Shows error for delete class."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class DeleteException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public DeleteException(String msg) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 9
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * A subclass of Command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * Handles \"done\" command."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private static final String TAB \u003d \"  \";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private static final String DONE_TITLE \u003d TAB + \" Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private String[] input;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * A subclass of command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param input user input."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public DoneCommand(String[] input) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param tasks list of existing tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param ui Ui."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param storage storage of the data."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @throws DoneException exception for invalid input."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DoneException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        ArrayList\u003cTask\u003e store \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        if (input.length \u003d\u003d 1) { //incomplete done command"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            throw new DoneException(\" ☹ OOPS!!! The description of a done cannot be empty.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        int indexOfMarkingTask \u003d Integer.parseInt(input[1]) - 1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        if (indexOfMarkingTask + 1 \u003e store.size() || indexOfMarkingTask + 1 \u003c\u003d 0) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            throw new DoneException(\" ☹ OOPS!!! There is no such task.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        //complete done command"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        Task markingTask \u003d store.get(indexOfMarkingTask);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        Task markedTask \u003d markingTask.markAsDone();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        store.set(indexOfMarkingTask, markedTask);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        storage.save(new TaskList(store));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        System.out.println(DONE_TITLE);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        System.out.println(TAB + \"   \" + markedTask);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Returns isDone to stop user from entering command."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return false to continue to accept user input."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 58
    }
  },
  {
    "path": "src/main/java/DoneException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * A subclass of Exception."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * Shows error for done class."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class DoneException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public DoneException(String msg) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 9
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * Returns typing box to allow user to type command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Instantiates ui, read date from file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param filePath"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Reads the user input, parse it to parser, call correspond command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            } catch (DukeException | DoneException | DeleteException"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                    | TodoException | EventException | DeadlineException | FindException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        new Duke(\"./data/duke.txt\").run();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "TCQian": 46
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * An subclass of TaskException."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * Shows error for invalid input."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public DukeException() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        super(\" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 12
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * A subclass of Task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * Contains a task description and a time."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Constructor of Event object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param description description of the task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param at the time of the event."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Constructor of Event object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param description description of the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param isDone the status of the task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param at the time of the event."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public Event(String description, boolean isDone, String at) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Marks the event task as done."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return new Deadline object with true for isDone."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public Event markAsDone() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return new Event(this.description, true, this.at);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Turns task object into a string to be saved in data file."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return string in the format of data in data file."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public String stringify() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        String number \u003d isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return \"E | \" + number + \" | \" + super.description + \" | \" + this.at;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Prints object."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return string of object."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return \"[E]\" + \"[\" + super.getStatusIcon() + \"] \" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 56
    }
  },
  {
    "path": "src/main/java/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * A subclass of Command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * Handles \"event\" command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private static final String TAB \u003d \"  \";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private static final String ADD_TASK_TITLE \u003d TAB + \" Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private String[] input;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param input user input."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public EventCommand(String[] input) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param tasks a list of tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param ui ui."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param storage the storage working on data file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @throws EventException to show incorrect user input."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws EventException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        ArrayList\u003cTask\u003e store \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        for (int i \u003d 1; i \u003c input.length; i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            if (input[i].equals(\"/at\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                index \u003d i;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        if (input.length \u003d\u003d 1 || index \u003d\u003d 1) { // no description"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            throw new EventException(\" ☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        } else if (index \u003d\u003d input.length - 1 || index \u003d\u003d 0) { //no time"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            throw new EventException(\" ☹ OOPS!!! The time of a event cannot be empty.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        String time \u003d \"\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        for (int i \u003d 1; i \u003c index; i++) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            description \u003d description + input[i] + \" \";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        for (int i \u003d index + 1; i \u003c input.length; i++) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            time \u003d time + input[i] + \" \";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        Date date;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd/M/yyyy hhmm\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            date \u003d formatter.parse(time.trim());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            throw new EventException(\" ☹ OOPS!!! The time of a deadline must be in the format of dd/M/yyyy hhmm.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        Event newTask \u003d new Event(description.trim(), new SimpleDateFormat(\"MMM dd yyyy HH:mm\").format(date));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        store.add(newTask);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        storage.save(new TaskList(store));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        System.out.println(ADD_TASK_TITLE);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        System.out.println(TAB + \"   \" + newTask);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        System.out.println(TAB + \" Now you have \" + store.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Returns isDone to stop user from entering command."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return false to continue to accept user input."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 80
    }
  },
  {
    "path": "src/main/java/EventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * An subclass of TaskException."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * Shows error for event tasks."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class EventException extends TaskException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public EventException(String msg) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 9
    }
  },
  {
    "path": "src/main/java/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": " *  A subclass of Command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": " *  Handles \"find\" command."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private static final String TAB \u003d \"  \";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private static final String FIND_TITLE \u003d TAB + \" Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private String[] input;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param input user input."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public FindCommand(String[] input) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param tasks a list of tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param ui ui."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param storage the storage working on data file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @throws FindException to show incorrect user input."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws FindException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        ArrayList\u003cTask\u003e store \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        ArrayList\u003cTask\u003e filteredList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        if (input.length \u003d\u003d 1) { //incomplete done command"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            throw new FindException(\" ☹ OOPS!!! The description of a find cannot be empty.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        String keyword \u003d input[1];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        for (Task task : store) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            String[] description \u003d task.getDescription().split(\"\\\\s\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            boolean isFound \u003d false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            for (String word : description) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                if (word.equals(keyword)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                    isFound \u003d true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            if (isFound) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                filteredList.add(task);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        if (filteredList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            throw new FindException(\" ☹ OOPS!!! There is no task with this keyword.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        System.out.println(FIND_TITLE);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        for (Task task : filteredList) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            System.out.println(TAB + \" \" + i++ + \".\" + task);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Returns isDone to stop user from entering command."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return false to continue to accept user input."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 68
    }
  },
  {
    "path": "src/main/java/FindException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * A subclass of Exception."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * Show error for find command."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class FindException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public FindException(String msg) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 9
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * A subclass of Command."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * Handles \"list\" command."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private static final String TAB \u003d \"  \";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private static final String LIST_TITLE \u003d TAB + \" Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param tasks a list of tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param ui ui."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param storage a storage working on data file."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        System.out.println(LIST_TITLE);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        for (Task task : tasks.getTaskList()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            System.out.println(TAB + \" \" + i++ + \".\" + task);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Returns isDone to stop user from entering command."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return false to continue to accept user input."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 32
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * Parser handles the user input and parse them to corresponding command class."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Parses user input to corresponding command class."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param input user input."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return the object of command class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @throws DukeException exception for invalid user input."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        String[] words \u003d input.split(\"\\\\s\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        String firstWord \u003d words[0];"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        if (input.equals(\"bye\")) { //bye command"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        } else if (input.equals(\"list\")) { //list command"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        } else if (firstWord.equals(\"find\")) { //find command"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            return new FindCommand(words);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        } else if (firstWord.equals(\"done\")) { //done command"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            return new DoneCommand(words);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        } else if (firstWord.equals(\"delete\")) { //done command"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            return new DeleteCommand(words);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        } else if (firstWord.equals(\"todo\")) { //todo command"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            return new TodoCommand(words);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        } else if (firstWord.equals(\"deadline\")) { //complete deadline command"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            return new DeadlineCommand(words);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        } else if (firstWord.equals(\"event\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            return new EventCommand(words);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        } else { //exception handler"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 34
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * A class to get data from and send data to the data file."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param filePath the path of data file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Reads data from data file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return a list of tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @throws DukeException to show error in reading the data file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            Scanner sc \u003d new Scanner(new File(filePath));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            ArrayList\u003cTask\u003e store \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                String[] str \u003d sc.nextLine().split(\"\\\\|\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                String title \u003d str[0].trim();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                boolean isDone \u003d str[1].trim().equals(1 + \"\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                if (title.equals(\"T\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                    store.add(new Todo(str[2].trim(), isDone));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                } else if (title.equals(\"D\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                    store.add(new Deadline(str[2].trim(), isDone, str[3].trim()));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                    store.add(new Event(str[2].trim(), isDone, str[3].trim()));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            return store;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            throw new DukeException(\"File not found\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Wrties data to the data file."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param tasks an updated list of tasks."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public void save(TaskList tasks) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            FileWriter fw \u003d new FileWriter(\"./data/duke.txt\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            for (Task task : tasks.getTaskList()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TCQian"
        },
        "content": "                fw.write(task.stringify() + \"\\n\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 64
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * A class of task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * Contains a description of task and a boolean to indicate the status of task."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param description a description of a task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Overloading constructor."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param description a description of a task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param isDone a boolean show the status of task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Returns the description of the task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return description of task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**\\"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Returns the icon for corresponding status of task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return sign of tick or cross."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Returns immutable task with done status."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return new task with done status."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public Task markAsDone() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return new Task(this.description, true);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Returns a string of task in format of task in data file."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return string of a task."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public String stringify() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return this.toString();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Returns task in string."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return task in string."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 68
    }
  },
  {
    "path": "src/main/java/TaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * An subclass of Exception."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * Shows error for tasks."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class TaskException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public TaskException(String msg) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 9
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * A class to handle the list of existing tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Overloaded constructor."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param tasks list of existing tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Returns the list of existing tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return the list of existing tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 31
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * A subclass of Task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * Contains a task description and a time."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Constructor of Todo object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param description description of the task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Overloaded constructor of Todo object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param description description of the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param isDone the status of the task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Marks the Todo task as done."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return new Todo object with true for isDone."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public Todo markAsDone() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return new Todo(this.description, true);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Turns task object into a string to be saved in data file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return string in the format of data in data file."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public String stringify() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        String number \u003d isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return \"T | \" + number + \" | \" + super.description;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Prints object."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return string of object."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return \"[T]\" + \"[\" + super.getStatusIcon() + \"] \" + super.toString();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 51
    }
  },
  {
    "path": "src/main/java/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * A subclass of Command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * Handles \"todo\" command."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private static final String TAB \u003d \"  \";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private static final String ADD_TASK_TITLE \u003d TAB + \" Got it. I\u0027ve added this task:\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private String[] input;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param input user input."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public TodoCommand(String[] input) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param tasks a list of tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param ui ui."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param storage the storage working on data file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @throws TodoException to show incorrect user input."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws TodoException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        ArrayList\u003cTask\u003e store \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        if (input.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            throw new TodoException(\" ☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        String description \u003d \"\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        for (int i \u003d 1; i \u003c input.length; i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            description \u003d description + input[i] + \" \";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        Todo newTask \u003d new Todo(description.trim());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        store.add(newTask);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        storage.save(new TaskList(store));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        System.out.println(ADD_TASK_TITLE);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        System.out.println(TAB + \"   \" + newTask);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        System.out.println(TAB + \" Now you have \" + store.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Returns isDone to stop user from entering command."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return false to continue to accept user input."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 55
    }
  },
  {
    "path": "src/main/java/TodoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * An subclass of TaskException."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * Shows error for todo tasks."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class TodoException extends TaskException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public TodoException(String msg) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 9
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": " * A class of User Interface."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private static final String TAB \u003d \"  \";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private static final String LINE_BREAKER \u003d TAB"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "            + \"_________________________________________________________________\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    private static final String GREET \u003d TAB + \" Hello! I\u0027m Duke\" + \"\\n\" + TAB + \" What can I do for you?\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    protected final Scanner sc;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Instantiate a scanner to read the user input."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Returns the opening greeting."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        System.out.println(LINE_BREAKER);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        System.out.println(GREET);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        System.out.println(LINE_BREAKER);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Returns the divider."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        System.out.println(LINE_BREAKER);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Returns the error message of the loading issue."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        System.out.println(TAB + \"Loading fails\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Returns the error message."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @param msg error message from the exception."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public void showError(String msg) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        System.out.println(TAB + msg);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * Reads the user input."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     * @return the user input."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TCQian"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 60
    }
  },
  {
    "path": "src/test/java/ByeCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "class ByeCommandTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    void isExitTest() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        assertEquals(new ByeCommand().isExit(), true);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 12
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 10
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    void toStringTest() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        Event e1 \u003d new Event(\"party\", \"12-2-2020 2000\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        String expected \u003d \"[E]\" + \"[\" + \"\\u2718\" + \"] \" + \"party\" + \" (at: 12-2-2020 2000)\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        assertEquals(e1.toString(), expected);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 12
    }
  },
  {
    "path": "src/test/java/TodoCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "class TodoCommandTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    void isExitTest() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        String[] input \u003d \"test case\".split(\"\\\\s\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": "        assertEquals(new TodoCommand(input).isExit(), false);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TCQian"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TCQian": 13
    }
  },
  {
    "path": "text-ui-test/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": "D | 0 | return book | June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": "E | 0 | project meeting | Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": "T | 1 | join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "TCQian": 5
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TCQian"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "TCQian": 13
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TCQian"
        },
        "content": "if"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TCQian"
        },
        "content": "  ! ("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003esources.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TCQian"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TCQian"
        },
        "content": "  )"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "TCQian": 5
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/TaskList.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/EventCommand.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/EventException.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/ByeCommand.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/Storage.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/DeleteCommand.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/ListCommand.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/Parser.java"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/Command.java"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/TodoCommand.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/DeadlineException.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/Ui.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/TaskException.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/DeleteException.java"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/Event.java"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/DoneException.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/FindException.java"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/DeadlineCommand.java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/TodoException.java"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/Task.java"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/FindCommand.java"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/Duke.java"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/Deadline.java"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/DoneCommand.java"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/Todo.java"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TCQian"
        },
        "content": "../src/main/java/DukeException.java"
      }
    ],
    "authorContributionMap": {
      "TCQian": 26
    }
  }
]
