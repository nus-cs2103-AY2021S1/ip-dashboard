[
  {
    "path": "src/main/java/ChatbotApplication.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": " * Front End Facing Script for the UI."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "public class ChatbotApplication {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     * Execution Class to contain main loop"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        System.out.println(lineWrapper(\"Hello! I\u0027m Duke\\n\\tWhat can I do for you\\n\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        String in \u003d \"\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        Duke d \u003d new Duke(\"##\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        while (d.running()){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "            in \u003d sc.nextLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "            d.takeInput(in);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        System.out.println(lineWrapper(\"Bye. Hope to see you again soon!\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     * Takes text input from Duke and Wraps it in a Line Seperator"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     * @param text"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     * @return String Wrapped by line breaker"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    private static String lineWrapper(String text){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        //placeholder until lines can be added"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        String newLine \u003d \"\\t\"+\"_________________________________________________\"+System.getProperty(\"line.separator\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        return newLine+\"\\n\\t\"+text+\"\\n\"+newLine;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blackonyyx": 41
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "import Exceptions.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "import Tasks.Command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "import Tasks.TaskManager;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": " * Backend Object Class for the Duke Chatbot Interface"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    private final TaskManager list;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    private boolean running;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    private final String linebreaker;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    public Duke(String linebreaker){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        this.list \u003d new TaskManager(linebreaker);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        this.running \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        this.linebreaker \u003d linebreaker.repeat(50)+\"\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     * Manages all internal dataflow from Main or textual interaction"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     * with the chatbot, by cleaning it"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    public void takeInput(String input) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        //To prevent an Security Concern or Code Injection Cleaning of text is first performed and authenticated"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        // by adding an ending token"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        //TODO eventually to convert the input -\u003e Command with getter for task, deadline(if applicable)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        String cleaned \u003d cleanInput(input);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        // There is minimally a sep"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        String[] words \u003d cleaned.split(\" \"); "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        cleaned \u003d cleaned.replace(\" [sep]\", \"\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        // Take out command from the words"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        String text_input \u003d cleaned.replaceFirst(words[0],\"\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        //Sep token is added to prevent index errors"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        Command c \u003d parseCommand(words[0]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "            switch (c) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                case bye:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                    this.running \u003d false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                case help:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                    print(this.help());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                case done:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                    print(list.doTask(words[1]));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                case delete:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                    print(list.deleteTask(words[1]));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                case list:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                    print(list.parseoutput());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                case todo:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                    print(this.list.addToDo(text_input));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                case deadline:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                    print(this.list.addDeadline(text_input));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                case event:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                    print(this.list.addEvent(text_input));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                case blank:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                    throw new DukeBlankCommandException(\"\u0027\u0027\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                case error:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                    throw new DukeCommandException(words[0]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                    throw new DukeUnknownException(text_input);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        }catch (DukeUnknownException e){"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "            print(e.toString());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "            //Shut down the application as this error appears to be program breaking"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "            this.running \u003d false;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        } catch (DukeException e){"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "            //an Expected exception that does not change the loop"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "            print(e.toString());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        } "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     * Parse Command into the "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     * @param cmd"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    public Command parseCommand(String cmd){"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        String cleaned \u003d cmd.toLowerCase();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        Command given \u003d null;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        Command[] commandlst \u003d Command.values();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        for (Command c : Command.values()){"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "            if (c.getCode().equals(cleaned)) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                given \u003d c;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                // if there is a match, there is no other command that would match"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        given \u003d given\u003d\u003dnull ? Command.error:given;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        return given;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     * inputs string, processes and cleans the text for the chatbot"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     * via adding a ending token seperator"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     * @param s"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    private String cleanInput(String s){"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        return s+\" [sep]\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    public String help(){"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        StringBuilder b \u003d new StringBuilder();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        b.append(\"\\t Need some help huh?\\n\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        b.append(\"\\t Heres a list of my commands!\\n\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        b.append(\"\\t- \u0027bye\u0027 to close the application\\n\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        b.append(\"\\t- \u0027list\u0027 to list the current list of tasks and their statuses\\n\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        b.append(\"\\t- \u0027done\u0027 to set a task as done\\n\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        b.append(\"\\t- \u0027todo\u0027 to list a untimed task\\n\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        b.append(\"\\t- \u0027deadline\u0027 to list a timed deadline task, please structure with [deadline \u003ctask name\u003e /by \u003ctime\u003e]\\n\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        b.append(\"\\t- \u0027event\u0027 to list a timed event task, please structure with [event \u003ctask name\u003e /at \u003ctime\u003e\\n\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        b.append(\"\\t- \u0027help\u0027 to list these commands again\\n\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        //eventually to add command help \u003ccommand\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        return b.toString();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     * Running state of the Duke Application"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     * @return State of Duke running"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    public boolean running() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        return this.running;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    "
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     * Wraps all text output and prints to the console"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     * @param s"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    public void print(String s){"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        System.out.println(String.format(\"%s%s%s\",linebreaker,s,linebreaker));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blackonyyx": 144,
      "-": 2
    }
  },
  {
    "path": "src/main/java/Exceptions/DukeBlankCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "public class DukeBlankCommandException extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    public DukeBlankCommandException(String s){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        super(s,4);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blackonyyx": 7
    }
  },
  {
    "path": "src/main/java/Exceptions/DukeCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "public class DukeCommandException extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    public DukeCommandException(String bad_cmd){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        super(bad_cmd, 1);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blackonyyx": 8
    }
  },
  {
    "path": "src/main/java/Exceptions/DukeDateTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "public class DukeDateTimeException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    public DukeDateTimeException(String cmd){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        super(cmd,3);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     * Takes in the given bad input and the code"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    public String message(String s) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        StringBuilder b \u003d new StringBuilder(\"\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        b.append(\"\\t Oops you did not mark your datetime! Not sure what you mean by:\\n\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        b.append(\"\\t \").append(bad_cmd).append(\"\\n\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        b.append(\"\\t \").append(s);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        b.append(\": \").append(code.toString()).append(\"\\n\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        b.append(\"\\t Heres a tip, use the \u0027help\u0027 command to learn about my commands!\\n\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        return b.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blackonyyx": 20
    }
  },
  {
    "path": "src/main/java/Exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": " * Exceptions.DukeException is a classification of errors that pertain to any running problems within Duke Class applications"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": " * Some errors that may occur in the hierarchy of data flow: "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": " * 1. FileRead Error (WIP): For handling stored memory and I/O errors"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": " * 2. Bad Command Given: When a Command that is unknown is given"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": " * 3. No Input given: When in the flow for a given command, no description is detected"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": " * 4. Bad Date Given: (WIP): For handling date parsing errors"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "public abstract class DukeException extends Exception{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    String bad_cmd;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    ErrorEncode code;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    public DukeException(String bad_cmd, int code){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        this.bad_cmd \u003d bad_cmd;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        this.code \u003d ErrorEncode.parseCode(code);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     * Takes in the given bad input and the code"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    public String message(String s) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        StringBuilder b \u003d new StringBuilder(\"\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        b.append(\"\\t Oops you used a invalid command! Not sure what you mean by:\\n\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        b.append(\"\\t \").append(bad_cmd).append(\"\\n\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        b.append(\"\\t \").append(s);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        b.append(\": \").append(code.toString()).append(\"\\n\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        b.append(\"\\t Heres a tip, use the \u0027help\u0027 command to learn about my commands!\\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        return b.toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        return message(super.toString());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blackonyyx": 38
    }
  },
  {
    "path": "src/main/java/Exceptions/DukeIOException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "public class DukeIOException extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    DukeIOException(String bad_cmd){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        super(bad_cmd, 0);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blackonyyx": 7
    }
  },
  {
    "path": "src/main/java/Exceptions/DukeIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "public class DukeIndexException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    int size;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    public DukeIndexException(String cmd, int size){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        super(cmd,5);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        this.size \u003d size;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     * Takes in the given bad input and the code"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    public String message(String s) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        StringBuilder b \u003d new StringBuilder(\"\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        b.append(\"\\t Oops you requested for a index ourside the list range:\\n\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        b.append(\"\\t \").append(bad_cmd).append(\"\\n\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        b.append(\"\\t \").append(s);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        b.append(\": \").append(code.toString()).append(\" out of \").append(size).append(\"\\n\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        b.append(\"\\t Heres a tip, use the \u0027list\u0027 command to see the current tasks!\\n\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        return b.toString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blackonyyx": 22
    }
  },
  {
    "path": "src/main/java/Exceptions/DukeNoInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "public class DukeNoInputException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    public DukeNoInputException(String bad_cmd){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        super(bad_cmd,2);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blackonyyx": 7
    }
  },
  {
    "path": "src/main/java/Exceptions/DukeUnknownException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": " * Exception Class to encapsulate any exceptional error that does not fit any of the previous criterion"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "public class DukeUnknownException extends DukeException{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    public DukeUnknownException(String m){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        super(m,99);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blackonyyx": 10
    }
  },
  {
    "path": "src/main/java/Exceptions/ErrorEncode.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "package Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "public enum ErrorEncode {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    FileRead(0, \"A I/O and Filereading Error has occured.\"),"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    BadCommandGiven(1, \"I cannot understand what that command means.\"),"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    NoInputGiven(2, \"There was no Input given for the task.\"),"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    BadDateGiven(3 , \"You did not give a valid date!\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    BlankCommand(4,\"No input command was given\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    IndexError(5, \"The index of the task is out of bounds\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    UnknownError(99, \"Something Exceptionally unexpected has happened! We will shut the application down\")"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    ;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    private final int code;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    private ErrorEncode(int code, String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        this.code \u003d code;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    public int getCode() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        return code;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     * Parse an error code into the Enum List for the given error message"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     * @param code"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    public static ErrorEncode parseCode(int code){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        ErrorEncode e \u003d UnknownError;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        for (ErrorEncode i : ErrorEncode.values()){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "            if (i.getCode() \u003d\u003d code){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                e \u003d i;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        return e;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blackonyyx": 48
    }
  },
  {
    "path": "src/main/java/Tasks/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "public enum Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    error(\"asjdbaksjfbanfjknjkdfnskasd\"),//random string as this is the default enum"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    bye(\"bye\"),"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    help(\"help\"),"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    list(\"list\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    done(\"done\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    delete(\"delete\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    todo(\"todo\"),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    deadline(\"deadline\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    event(\"event\"),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    blank(\"\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    private final String code;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    private Command(String code){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        this.code \u003d code;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    public String  getCode() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        return code;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        return code;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blackonyyx": 25
    }
  },
  {
    "path": "src/main/java/Tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "import Tasks.TimedTask;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "class Deadline extends TimedTask {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    Deadline(String desc,String date){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        super(desc, date);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        return \"[D]\" + super.toString()+\" (by: \"+getDateby()+\")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blackonyyx": 13
    }
  },
  {
    "path": "src/main/java/Tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "import Tasks.TimedTask;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "class Event extends TimedTask {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    Event(String desc,String date){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        super(desc, date);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        return \"[E]\" + super.toString()+\" (at: \"+getDateby()+\")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blackonyyx": 13
    }
  },
  {
    "path": "src/main/java/Tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    protected boolean done;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    protected Task(String description, boolean done) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        this.done \u003d done;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     * Returns the check for if the task is already done."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    public boolean done(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        return this.done;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     * Mark Tasks.Task object as done"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    public void doTask(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     * Get the description of the task"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     * @return description of task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     * Checklist icon"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "      * @return either done or not done"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    public String statusIcon(){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        return this.done ? \"[\\u2713] \" : \"[\\u2718] \";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        return this.statusIcon()+this.getDescription();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blackonyyx": 49
    }
  },
  {
    "path": "src/main/java/Tasks/TaskManager.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "import Exceptions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "import Tasks.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "import Tasks.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "import Tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "import Tasks.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "public class TaskManager {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    private final List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    public TaskManager(String lb){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     * Parses the current list and prints the output"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    public String parseoutput() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        if (this.list.size()\u003e0) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "            sb.append(\"\\tHere are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "            for (int i \u003d 0; i \u003c this.list.size(); i++) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                sb.append(\"\\t\").append(i + 1)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                        .append(\". \")"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                        .append(this.list.get(i).toString())"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                        .append(\"\\n\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "            sb.append(\"\\tThere are no tasks in your list!\\n\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    public String doTask(String index) throws DukeCommandException, DukeIndexException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "            int i \u003d Integer.parseInt(index)-1;//0 indexing"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "            this.get(i).doTask();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "            return \"\\tNice! I\u0027ve marked this task as done: \\n\\t\"+this.get(i)+\"\\n\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        } catch (IllegalArgumentException e){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "            throw new DukeCommandException(index);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        } catch (IndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "            throw new DukeIndexException(index, list.size());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "       "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    public String deleteTask(String index) throws DukeCommandException, DukeIndexException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "            int i \u003d Integer.parseInt(index)-1;//0 indexing"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "            Task t \u003d this.get(i);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "            this.list.remove(i);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "            return new StringBuilder().append(\"\\tNoted! I\u0027ve removed this task from your list: \\n\\t\")"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                    .append(t)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                    .append(\"\\n\\tNow you have \")"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                    .append(this.list.size())"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                    .append(\" tasks in the list.\\n\").toString();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        } catch (IllegalArgumentException e){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "            throw new DukeCommandException(index);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        } catch (IndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "            throw new DukeIndexException(index, list.size());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     * Get task from the internal list"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     * @param i"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    public Task get(int i) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        return this.list.get(i);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     * generic polymorphic data flow for adding a task to the runtime database"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     * @param t"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     * @return String to be wrapped and printed"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    private String add(Task t){"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        this.list.add(t);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        return this.echo(t);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     * Returns string builder of the task"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     * @param t"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    private String echo(Task t) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        return new StringBuilder().append(\"\\tGot it. I\u0027ve added this task:\\n\\t  \")"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                .append(t).append(\"\\n\\tNow you have \")"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                .append(this.list.size())"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                .append(\" tasks in the list.\\n\")"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "                .toString();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    public String addToDo(String cmd) throws DukeNoInputException {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        if (cmd.isBlank()){"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "            throw new DukeNoInputException(cmd);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        ToDo task \u003d new ToDo(cmd);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        //TODO add a static factory method for making a Tasks.ToDo task"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        return this.add(task);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    public String addDeadline(String cmd) throws DukeDateTimeException, DukeNoInputException {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        if (cmd.isBlank()){"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "            throw new DukeNoInputException(cmd);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        String[] timeSEP \u003d extractTime(cmd);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        Deadline d \u003d new Deadline(timeSEP[0], timeSEP[1]);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        return add(d);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    public String addEvent(String cmd) throws DukeDateTimeException, DukeNoInputException {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        if (cmd.isBlank()){"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "            throw new DukeNoInputException(cmd);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        String[] timeSEP \u003d extractTime(cmd);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        Event e \u003d new Event(timeSEP[0], timeSEP[1]);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        return add(e);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    private String[] extractTime(String cmd) throws DukeDateTimeException {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        int i;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        if (cmd.contains(\"/at\")){"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "            i \u003d cmd.lastIndexOf(\"/at\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        }else if (cmd.contains(\"/by\")){"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "            i \u003d cmd.lastIndexOf(\"/by\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        }else {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "            //else throw an error here"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "            throw new DukeDateTimeException(cmd);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        String[] c \u003d new String[2];"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        c[0] \u003d cmd.substring(0,i);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        c[1] \u003d cmd.substring(i+3);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        return c;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blackonyyx": 140
    }
  },
  {
    "path": "src/main/java/Tasks/TimedTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "import Tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "abstract class TimedTask extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    protected final String dateby;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    protected TimedTask(String desc, String date) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        super(desc, false);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        this.dateby \u003d date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     * Get the dateby for the set task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     * @return dateby for the registered task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    public String getDateby(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        return dateby;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blackonyyx": 19
    }
  },
  {
    "path": "src/main/java/Tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "import Tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "class ToDo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    ToDo(String desc){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        super(desc,false);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "        return \"[T]\"+super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "blackonyyx": 13
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "todo taskAbc 1231"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "deadline Say Hi \\by tofu"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "deadline Say Hi /by tofu"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "abc 123"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "event hello friends /by /by TIME"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "blackonyyx": 12
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "blackonyyx"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ../bin Main \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "blackonyyx": 2,
      "-": 36
    }
  }
]
