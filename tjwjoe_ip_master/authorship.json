[
  {
    "path": "data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "T # 0 # go out"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "D # 1 # IPPT # 31/10/1998 23:59"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "E # 0 # Friend Dinner # 25/08/2021 11:53"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "D # 0 # IPPT next year # 31/10/1999 23:59"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "D # 0 # ippt # 31/10/1997 23:59"
      }
    ],
    "authorContributionMap": {
      "tjwjoe": 5
    }
  },
  {
    "path": "src/main/java/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import exceptions.InvalidTaskException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import exceptions.UnknownCmdException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import exceptions.InvalidTimeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import exceptions.InvalidFileException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import exceptions.BadDtFormatException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import tasks.Todo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": " * Represents an instruction from a user to add a new task to the list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    String text;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public AddCommand(String text) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        this.text \u003d text;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * Executes the command to add the task to the list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @param tasks The current TaskList"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @param ui The Ui object in use"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @param storage The Storage object in use"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @throws InvalidTaskException If the task name is empty"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @throws UnknownCmdException If an unknown command is entered"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @throws InvalidTimeException If the time for the task is invalid"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @throws BadDtFormatException If the format of the date and time entered does not match"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public void exec(TaskList tasks, Ui ui, Storage storage) throws InvalidTaskException, UnknownCmdException,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            InvalidTimeException, BadDtFormatException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        String[] info \u003d extractInfo(text);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        if (info[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            tasks.addItem(new Todo(info[1], false));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            ui.printAddTask(info[1]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            ui.printListSize(tasks.size());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        } else if (info[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            tasks.addItem(new Deadline(info[1], stringToTime(info[2]), false));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            ui.printAddTask(info[1]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            ui.printListSize(tasks.size());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            tasks.addItem(new Event(info[1], stringToTime(info[2]), false));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            ui.printAddTask(info[1]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            ui.printListSize(tasks.size());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * Breaks down and stores user input in a string array for easy access"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @param str String to be broken down"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @return A string array split according to the information categories"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @throws InvalidTaskException If task description is empty"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @throws UnknownCmdException If an unknown command is entered"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @throws InvalidTimeException If an invalid time is entered for a Deadline or Event task"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public String[] extractInfo(String str) throws InvalidTaskException, UnknownCmdException,InvalidTimeException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        String[] store \u003d new String[3];"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        // Handling the classification of event type"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        if (str.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            if (str.equals(\"todo\") || str.strip().equals(\"todo\"))  {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "                throw new InvalidTaskException(\"Your task cannot be empty!\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            } else if (!str.startsWith(\"todo \")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "                throw new UnknownCmdException(\"Unknown command entered!\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "                store[0] \u003d \"todo\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        } else if (str.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            if (str.equals(\"deadline\") || str.strip().equals(\"deadline\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "                throw new InvalidTaskException(\"Your task cannot be empty!\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            } else if (!str.startsWith(\"deadline \")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "                throw new UnknownCmdException(\"Unknown command entered!\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "                store[0] \u003d \"deadline\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        } else if (str.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            if (str.equals(\"event\") || str.strip().equals(\"event\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "                throw new InvalidTaskException(\"Your task cannot be empty!\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            } else if (!str.startsWith(\"event \")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "                throw new UnknownCmdException(\"Unknown command entered!\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "                store[0] \u003d \"event\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            throw new UnknownCmdException(\"Unknown command entered!\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        // handling the content of the event"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        int splitPrefix \u003d str.indexOf(\" \");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        String content \u003d str.substring(splitPrefix).strip();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        if (content.length() \u003c\u003d 0) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            throw new InvalidTaskException(\"Your task cannot be empty!\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        if (store[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            store[1] \u003d content;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            store[2] \u003d \"\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            int splitTime \u003d store[0].equals(\"deadline\") ? content.indexOf(\"/by\") : content.indexOf(\"/at\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            if (splitTime \u003c 0) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "                throw new InvalidTimeException(\"Please use /by (deadlines) or /at (events)! to \" +"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "                        \"indicate the date or time!\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            String name \u003d content.substring(0, splitTime).strip();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            String time \u003d content.substring(splitTime + 3).strip();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            if (name.length() \u003c\u003d 0) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "                throw new InvalidTaskException(\"Your task cannot be empty!\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            if (time.length() \u003c\u003d 0) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "                throw new InvalidTimeException(\"Please specify a date or time for this task!\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            store[1] \u003d name;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            store[2] \u003d time;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        return store;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * Converts a string into a LocalDateTime"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @param time The string to be parsed"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @return A LocalDateTime object"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @throws BadDtFormatException If an invalid string format is entered"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public LocalDateTime stringToTime(String time) throws BadDtFormatException {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            return LocalDateTime.parse(time, DateTimeFormatter.ofPattern(\"dd/MM/yyyy H:m\"));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            throw new BadDtFormatException(\"Please enter the date and time in the following format: dd/mm/yyyy hh:mm \""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "                    + \"(24 hour clock)\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tjwjoe": 140
    }
  },
  {
    "path": "src/main/java/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": " * Represents a generic command entered by the user"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * Placeholder command to be overridden by subclasses"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @param tasks The current TaskList"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @param ui The Ui object in use"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @param storage The Storage object in use"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @throws DukeException If erroneous inputs are detected"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public void exec(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tjwjoe": 23
    }
  },
  {
    "path": "src/main/java/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import exceptions.InvalidFileException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import exceptions.InvalidTaskNumberException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import exceptions.TaskNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": " * Represents an instruction from the user to delete a task from the list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    int index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * Executes the command to delete the task from the TaskList"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @param tasks The current TaskList"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @param ui The Ui object in use"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @param storage The Storage object in use"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @throws TaskNotFoundException If input task number is not found in the list"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @throws InvalidTaskNumberException If the user enters a non-integer argument"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public void exec(TaskList tasks, Ui ui, Storage storage) throws TaskNotFoundException,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            InvalidTaskNumberException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        ui.printDelTask(tasks, index);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        deleteTask(index, tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * Deletes an input task from the list"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @param idx Index of the task indicated to be deleted"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @throws TaskNotFoundException If input task number is not found in the list"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @throws InvalidTaskNumberException If user enters a non-integer argument"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public void deleteTask(int idx, TaskList tasks) throws TaskNotFoundException, InvalidTaskNumberException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            tasks.getTasks().remove(idx - 1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            throw new TaskNotFoundException(\"Sorry, I couldn\u0027t find that task.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            throw new InvalidTaskNumberException(\"Please enter a valid number!\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tjwjoe": 51
    }
  },
  {
    "path": "src/main/java/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import exceptions.InvalidFileException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import exceptions.InvalidTaskNumberException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import exceptions.TaskNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": " * Represents an instruction from the user to mark a task as done"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    int index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * Executes the command to mark the task as done"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @param tasks The current TaskList"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @param ui The Ui object in use"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @param storage The Storage object in use"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @throws TaskNotFoundException If input task number is not found in the list"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @throws InvalidTaskNumberException If the user enters a non-integer argument"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public void exec(TaskList tasks, Ui ui, Storage storage) throws TaskNotFoundException,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            InvalidTaskNumberException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        ui.printDoneTask();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        doneTask(index, tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * Marks an input task as done"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @param idx Index of the task which the user wishes to mark as done"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @throws TaskNotFoundException If input task number is not found in the list"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @throws InvalidTaskNumberException If user enters a non-integer input"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public void doneTask(int idx, TaskList tasks) throws TaskNotFoundException, InvalidTaskNumberException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            tasks.getTasks().get(idx - 1).setDone(true);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            throw new TaskNotFoundException(\"Sorry, I couldn\u0027t find that task.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            throw new InvalidTaskNumberException(\"Please enter a valid number!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tjwjoe": 52
    }
  },
  {
    "path": "src/main/java/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import exceptions.InvalidFileException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": " * Represents an instruction from the user to quit the bot"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * Prints the exit message and writes the current TaskList to the hard drive"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @param tasks The current TaskList"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @param ui The Ui object in use"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @param storage The Storage object in use"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @throws InvalidFileException If file to be written to cannot be found"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public void exec(TaskList tasks, Ui ui, Storage storage) throws InvalidFileException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        ui.printExitMessage();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        storage.writeToFile(\"data.txt\", tasks.writeString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tjwjoe": 25
    }
  },
  {
    "path": "src/main/java/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    String text;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public FindCommand(String text) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        this.text \u003d text;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public void exec(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        for (Task task : tasks.getTasks()) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            String name \u003d task.getName();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            if (name.contains(text)) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "                output.append(counter \u003d\u003d 1 ? \"\" : \"\\n\").append(counter).append(\".\").append(task);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        ui.printFindTask(output.toString(), counter - 1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tjwjoe": 28
    }
  },
  {
    "path": "src/main/java/commands/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": " * Represents an instruction from the user to display the help message."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * Executes the command to print the help message."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @param tasks The current TaskList"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @param ui The Ui object in use"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @param storage The Storage object in use"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public void exec(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        System.out.println(\"Welcome to Duke! Here is a list of commands you can use: \\n\" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "                \"exit - shuts down the bot\\n\" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "                \"todo \u003cname\u003e - adds a Todo task to your list\\n\" +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "                \"deadline \u003cname\u003e \u003ctime\u003e - adds a Deadline task to your list\\n\" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "                \"event \u003cname\u003e \u003ctime\u003e - adds an Event task to your list\\n\" +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "                \"done \u003cnumber\u003e - marks a task as done\\n\" +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "                \"delete \u003cnumber\u003e - deletes a task from your list\\n\" +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "                \"list - displays the current list of your tasks\\n\" +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "                \"help - displays this helpful message\\n\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tjwjoe": 30
    }
  },
  {
    "path": "src/main/java/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": " * Represents a command from the user to print the current TaskList"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * Executes the command to print the TaskList"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @param tasks The current TaskList"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @param ui The Ui object in use"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @param storage The Storage object in use"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public void exec(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        ui.printList(tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tjwjoe": 22
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": " * Over-arching class containing the main information of the Duke bot."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    private boolean quit;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * Attempts to read an existing stored data.txt file, and creates a new data.txt file if one is not found"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    private Duke() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        this.tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        this.quit \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        this.parser \u003d new Parser();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            this.storage \u003d new Storage(Paths.get(\"data.txt\").toFile(), tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            storage.readData();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        } catch (FileNotFoundException e){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            System.out.println(\"No data found, creating new .txt file\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            this.storage \u003d new Storage();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * Allows the system to begin taking in user input and edits the stored data accordingly. Runs until an \"exit\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * command is received."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        while (!quit) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            String input \u003d ui.takeInput();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "                Command command \u003d parser.parse(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "                command.exec(tasks, ui, storage);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "                ui.printException(e);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            quit \u003d parser.isQuit();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tjwjoe": 60
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import commands.ExitCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import commands.ListCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import commands.HelpCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import commands.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import commands.DeleteCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import commands.AddCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import commands.FindCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": " * Handles parsing of inputs from the user and generates Command objects accordingly"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    private boolean quit \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public boolean isQuit() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        return quit;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * Parses and makes sense of the user input"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @param input The user\u0027s input string"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @return A Command object corresponding to what the user has input"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public Command parse(String input) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        if (input.equals(\"exit\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            quit \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        } else if (input.equals(\"help\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        } else if (input.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            return new DoneCommand(Integer.parseInt(input.substring(input.length() - 1)));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        } else if (input.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            return new DeleteCommand(Integer.parseInt(input.substring(input.length() - 1)));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        } else if (input.startsWith(\"find \")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            return new FindCommand(input.substring(5));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            return new AddCommand(input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tjwjoe": 46
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import exceptions.InvalidFileException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import tasks.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": " * Handles the reading and writing of the data.txt file on the user\u0027s hard-disk"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    TaskList tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    File file;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public Storage(File file, TaskList tasks) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        this.file \u003d file;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * Used if the file cannot be found in the working directory"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        this.file \u003d new File(\"data.txt\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * Reads data from a pre-existing .txt file"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @throws FileNotFoundException If required file is not found"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public void readData() throws FileNotFoundException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        Scanner reader \u003d new Scanner(file);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        while (reader.hasNextLine()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            String[] line \u003d reader.nextLine().split(\" # \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            String type \u003d line[0];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            boolean done \u003d line[1].equals(\"1\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            String name \u003d line[2];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            if (type.equals(\"T\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "                tasks.addItem(new Todo(name, done));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "                String time \u003d line[3];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "                LocalDateTime ldt \u003d LocalDateTime.parse(time, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "                if (type.equals(\"D\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "                    tasks.addItem(new Deadline(name, ldt, done));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "                    tasks.addItem(new Event(name, ldt, done));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * Writes data into a .txt file"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @param path Path to the file"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @param text Text to be written into the file"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @throws InvalidFileException File was not found at the end of the input path"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public void writeToFile(String path, String text) throws InvalidFileException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            FileWriter fw \u003d new FileWriter(path);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            fw.write(text);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            throw new InvalidFileException(\"File was not found\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tjwjoe": 75
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": " * Handles interactions with users, namely accepting inputs and printing of info"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    private final String ln \u003d \"----------------------------------------------------------------\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * Reads an input from a user"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @return The user\u0027s input"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public String takeInput() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public void printException(DukeException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public void printListSize(int size) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        System.out.println(\"You now have \" + size + (size \u003d\u003d 1"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "                ? \" task in your list.\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "                : \" tasks in your list.\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public void printList(TaskList tasks) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        System.out.println(\"Here are your tasks:\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        System.out.println(ln);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        System.out.println(tasks);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        System.out.println(ln);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public void printExitMessage() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        System.out.println(\"Goodbye!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public void printAddTask(String task) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        System.out.println(\"Added new task: \" + task);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public void printDoneTask() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        System.out.println(\"Congrats, I\u0027ve marked this task as finished!\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public void printDelTask(TaskList tasks, int idx) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        System.out.println(\"The task \" + tasks.getTasks().get(idx - 1) + \" has been removed.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public void printFindTask(String str, int num) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        if (num \u003d\u003d 0) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            System.out.println(\"I couldn\u0027t find any tasks matching your keyword.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            System.out.println(\"I found \" + num + (num \u003e 1 ? \" tasks \" : \" task \") + \"matching your keyword.\\n\" + str);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tjwjoe": 67
    }
  },
  {
    "path": "src/main/java/exceptions/BadDtFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": " * Thrown if a user enters an invalid date-time format when adding a task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "public class BadDtFormatException extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public BadDtFormatException(String message) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tjwjoe": 11
    }
  },
  {
    "path": "src/main/java/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": " * Over-arching Exception from which all other Duke-specific exceptions extend from"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tjwjoe": 10
    }
  },
  {
    "path": "src/main/java/exceptions/InvalidFileException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": " * Thrown if the data.txt file cannot be found when required"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "public class InvalidFileException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public InvalidFileException(String msg) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tjwjoe": 10
    }
  },
  {
    "path": "src/main/java/exceptions/InvalidTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": " * Thrown if description is empty when attempting to add a task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "public class InvalidTaskException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public InvalidTaskException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tjwjoe": 10
    }
  },
  {
    "path": "src/main/java/exceptions/InvalidTaskNumberException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": " * Thrown if a non-integer argument is entered when attempting to delete or mark a task as done"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "public class InvalidTaskNumberException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public InvalidTaskNumberException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tjwjoe": 10
    }
  },
  {
    "path": "src/main/java/exceptions/InvalidTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": " * Thrown if the date-time field is empty when attempting to add a task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "public class InvalidTimeException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public InvalidTimeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tjwjoe": 10
    }
  },
  {
    "path": "src/main/java/exceptions/TaskNotFoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": " * Thrown if the user enters a number that is out of bounds when trying to delete or mark a task as done"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "public class TaskNotFoundException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public TaskNotFoundException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tjwjoe": 10
    }
  },
  {
    "path": "src/main/java/exceptions/UnknownCmdException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": " * Thrown if the user enters an unknown command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "public class UnknownCmdException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public UnknownCmdException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tjwjoe": 10
    }
  },
  {
    "path": "src/main/java/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": " * Represents a Deadline task with a name and a LocalDateTime object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    protected LocalDateTime datetime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public Deadline(String name, LocalDateTime datetime, boolean done) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        super(name, done);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        this.datetime \u003d datetime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + datetime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public String writeString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        return \"D # \" + super.writeString() + \" # \" + datetime.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tjwjoe": 27
    }
  },
  {
    "path": "src/main/java/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": " * Represents an Event task with a name and a LocalDateTime object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    protected LocalDateTime datetime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public Event(String name, LocalDateTime datetime, boolean done) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        super(name, done);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        this.datetime \u003d datetime;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + datetime.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\")) + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public String writeString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        return \"E # \" + super.writeString() + \" # \" + datetime.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tjwjoe": 27
    }
  },
  {
    "path": "src/main/java/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": " * Represents a general Task object with a name"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    private boolean done;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public Task(String name, boolean done) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        this.done \u003d done;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        this.done \u003d done;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * Prints a tick or X symbol."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @return a tick or X symbol."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        return (done ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + name;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public String writeString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        return (done ? \"1\" : \"0\") + \" # \" + name;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tjwjoe": 40
    }
  },
  {
    "path": "src/main/java/tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": " * Represents a data structure to contain an ArrayList of Task objects."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    private ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * Adds a task to the ArrayList of tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     * @param item The task to be added"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public void addItem(Task item) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        list.add(item);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        StringBuilder ls \u003d new StringBuilder();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        for (Task task : list) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            ls.append(counter \u003d\u003d 1 ? \"\" : \"\\n\").append(counter).append(\".\").append(task);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        return ls.toString();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public String writeString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        StringBuilder ls \u003d new StringBuilder();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        for (Task task : list) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            ls.append(task.writeString()).append(counter !\u003d list.size() ? \"\\n\" : \"\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        return ls.toString();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tjwjoe": 52
    }
  },
  {
    "path": "src/main/java/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": " * Represents a Todo task with a name"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public Todo(String name, boolean done) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        super(name, done);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public String writeString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        return \"T # \" + super.writeString();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tjwjoe": 21
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import commands.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public void parse_exitString_exits() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        assertEquals(new Parser().parse(\"exit\").getClass(), ExitCommand.class);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public void parse_listString_prints() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        assertEquals(new Parser().parse(\"list\").getClass(), ListCommand.class);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public void parse_helpString_prints() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        assertEquals(new Parser().parse(\"help\").getClass(), HelpCommand.class);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public void parse_doneString_prints() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        assertEquals(new Parser().parse(\"done 2\").getClass(), DoneCommand.class);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public void parse_deleteString_prints() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        assertEquals(new Parser().parse(\"delete 2\").getClass(), DeleteCommand.class);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public void parse_addString_prints() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        assertEquals(new Parser().parse(\"todo buy new pants\").getClass(), AddCommand.class);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        assertEquals(new Parser().parse(\"deadline Assignment /by 25/08/2020 09:00\").getClass(), AddCommand.class);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        assertEquals(new Parser().parse(\"event IPPT /at 31/10/2020 10:30\").getClass(), AddCommand.class);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    public void parse_FindString_prints() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "        assertEquals(new Parser().parse(\"find book\").getClass(), FindCommand.class);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tjwjoe": 39
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "todo Watch webcast"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "deadline Finish tutorial /by 5pm Monday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "event Family dinner /at 6pm Tuesday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "todo Buy new clothes"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "tjwjoe": 6
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "if not exist D:\\CS2103T\\ip\\bin mkdir D:\\CS2103T\\ip\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "javac  -cp D:\\CS2103T\\ip\\src\\ -Xlint:none -d D:\\CS2103T\\ip\\bin D:\\CS2103T\\ip\\src\\main\\java\\*.java -target 11"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "java -classpath D:\\CS2103T\\ip\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tjwjoe"
        },
        "content": "pause"
      }
    ],
    "authorContributionMap": {
      "tjwjoe": 6,
      "-": 18
    }
  }
]
