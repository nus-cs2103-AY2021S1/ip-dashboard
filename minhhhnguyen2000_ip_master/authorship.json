[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "//package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": " * Deadline \u003c- Task"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    String deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "     * Init Deadline"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    public Deadline(String description, String deadline) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     * Status in format [D][x] return book (by: 6 June)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "        return \"[D]\" + super.getStatus() + \" (by: \" + deadline + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "     * type of Task -\u003e D for deadline"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "     * description to write to data file"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        return super.getDescription() + \"|\" + this.deadline;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "minhhhnguyen2000": 15,
      "-": 26
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "//package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " * Duke the best chatbot hehe"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     * Init Duke"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        tasks \u003d new TaskList(storage.readData());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "     * Main"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     * Take in command"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        ui.sayHi();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "        Scanner myScanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "        while(true) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "            String cmd \u003d myScanner.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "            if(cmd.equals(\"bye\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                ui.sayBye();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "            else if(cmd.equals(\"list\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                for(int i \u003d 1; i \u003c\u003d tasks.getSize(); ++i) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    System.out.println(i + \".\" + tasks.get(i - 1).getStatus());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "            else if(cmd.length() \u003e\u003d 4 \u0026\u0026 cmd.substring(0, 4).equals(\"done\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                int c \u003d 0;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                for(int i \u003d 5; i \u003c cmd.length(); ++i) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    c \u003d c * 10 + cmd.charAt(i) - \u00270\u0027;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                tasks.get(c - 1).done();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                System.out.println(tasks.get(c - 1).getStatus());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "            else if(cmd.length() \u003e\u003d 4 \u0026\u0026 cmd.substring(0, 4).equals(\"todo\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    checkCmd(cmd, 4, \"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    String getName \u003d cmd.substring(5);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    Todo tmp \u003d new Todo(getName);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    System.out.println(\"  \" + tmp.getStatus());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    tasks.add(tmp);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.out.println(\"Now you have \" + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                catch (DukeException ex) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "            else if(cmd.length() \u003e\u003d 8 \u0026\u0026cmd.substring(0, 8).equals(\"deadline\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    checkCmd(cmd, 8, \"☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                    String getName \u003d parser.getNameBy(cmd);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                    String getDeadline \u003d parser.getDeadlineBy(cmd);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "                    getDeadline \u003d formatDate(getDeadline);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    Deadline tmp \u003d new Deadline(getName, getDeadline);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    System.out.println(\"  \" + tmp.getStatus());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    tasks.add(tmp);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.out.println(\"Now you have \" + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                catch (DukeException ex) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "            else if(cmd.length() \u003e\u003d 5 \u0026\u0026cmd.substring(0, 5).equals(\"event\")) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    checkCmd(cmd, 5, \"☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                    String getName \u003d parser.getNameAt(cmd);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                    String getTime \u003d parser.getDeadlineAt(cmd);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "                    getTime \u003d formatDate(getTime);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    Event tmp \u003d new Event(getName, getTime);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    System.out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    System.out.println(\"  \" + tmp.getStatus());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    tasks.add(tmp);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.out.println(\"Now you have \" + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    //"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                catch (DukeException ex) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "            else if(cmd.length() \u003e\u003d 6 \u0026\u0026 cmd.substring(0, 6).equals(\"delete\")){"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                int c \u003d 0;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                for(int i \u003d 7; i \u003c cmd.length(); ++i) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                    c \u003d c * 10 + cmd.charAt(i) - \u00270\u0027;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                System.out.println(tasks.get(c - 1).getStatus());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "                tasks.remove(c - 1);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.println(\"Now you have \" + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            else if(cmd.length() \u003e\u003d 4 \u0026\u0026 cmd.substring(0, 4).equals(\"find\")) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "                String tmp \u003d cmd.substring(5);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "                for(int i \u003d 1; i \u003c\u003d tasks.getSize(); ++i) if(tasks.get(i - 1).description.contains(tmp)){"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "                    System.out.println(i + \".\" + tasks.get(i - 1).getStatus());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "            else System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "            storage.updateDataFile(tasks.getArrayList());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "     * check if date is yyyy-mm-dd, then format to MMM d yyyy"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "    public static String formatDate(String str) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        LocalDate d;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "            d \u003d LocalDate.parse(str);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "            return str;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        return d.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "     * check if the command is valid"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    public static void checkCmd(String cmd, int len, String Ex) throws DukeException {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "        if(cmd.length() \u003d\u003d len) throw new DukeException(Ex);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "minhhhnguyen2000": 73,
      "-": 79
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "//package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": " * handle error when using duke"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "minhhhnguyen2000": 5,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "//package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": " * Event \u003c- Task"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    String time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "     * Init Event"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    public Event(String description, String time) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "     * Status in format [E][x] return book (at: 6 June)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "        return \"[E]\" + super.getStatus() + \" (at: \" + time + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "     * type of Task -\u003e E for Event"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "     * description to write to data file"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        return super.getDescription() + \"|\" + this.time;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "minhhhnguyen2000": 15,
      "-": 27
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "//package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getType() { return \"\"; }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    public void done() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    //..."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "minhhhnguyen2000": 26,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "//package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "        return \"[T]\" + super.getStatus();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "minhhhnguyen2000": 13,
      "-": 6
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "bye"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "minhhhnguyen2000": 10
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "minhhhnguyen2000"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "minhhhnguyen2000": 1,
      "-": 20
    }
  }
]
