[
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import data.TaskList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import exception.ChatbotException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public class Main {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    private static TaskList taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    private static Storage taskStorage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        boolean exitProgram \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        final Path dataLocation \u003d Path.of(\"chatbot.txt\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        // initialization"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        taskStorage \u003d new Storage(dataLocation);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            taskList \u003d new TaskList(taskStorage.loadTasks());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        } catch (ChatbotException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            ui.showErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        while(!exitProgram) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                Command command \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                command.execute(taskList, ui, taskStorage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                exitProgram \u003d command.isExit();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            } catch (ChatbotException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                ui.showErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 45
    }
  },
  {
    "path": "src/main/java/commands/ActionCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import common.Type;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import data.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import data.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import exception.ChatbotException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": " * Represents a command to either delete or mark task as done given a type."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public class ActionCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    Type type;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    String body;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public ActionCommand(Type type, String body) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        this.body \u003d body;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws ChatbotException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            index \u003d Integer.parseInt(body) - 1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            throw new ChatbotException(\"Please give me a valid number.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            case DELETE:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                Task deletedTask \u003d taskList.removeTask(index);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                ui.deleteSuccess(deletedTask, taskList.count());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            case DONE:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                Task taskDone \u003d taskList.markAsDone(index);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                ui.markDoneSuccess(taskDone);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        storage.saveTasks(taskList.getTasks());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 53
    }
  },
  {
    "path": "src/main/java/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import common.Type;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import data.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import data.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import data.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import data.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import exception.ChatbotException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    Type type;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    String body;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public AddCommand(Type type, String body) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        this.body \u003d body;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws ChatbotException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            Todo task \u003d Todo.newTodo(body);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            if (taskList.addTask(task)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                ui.addSuccess(task, taskList.count());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            Deadline deadline \u003d Deadline.newDeadline(body);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            if (taskList.addTask(deadline)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                ui.addSuccess(deadline, taskList.count());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            Event event \u003d Event.newEvent(body);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            if (taskList.addTask(event)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                ui.addSuccess(event, taskList.count());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        storage.saveTasks(taskList.getTasks());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 52
    }
  },
  {
    "path": "src/main/java/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import exception.ChatbotException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * Returns true if this command instructs the program to exit."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @return if program should exits"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    abstract public boolean isExit();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @param taskList the TaskList object for handling tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @param ui the UI object for text-ui display"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @param storage the Storage object for persistence"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @throws ChatbotException if execution unsuccessful"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    abstract public void execute(TaskList taskList, Ui ui, Storage storage) throws ChatbotException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 23
    }
  },
  {
    "path": "src/main/java/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        ui.showErrorMessage(\"Bye, hope to see you again soon.\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 17
    }
  },
  {
    "path": "src/main/java/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import data.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    String body;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public FindCommand(String body) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        this.body \u003d body;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        ui.list(taskList.find(body));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 22
    }
  },
  {
    "path": "src/main/java/commands/ShowCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import common.Type;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import data.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import data.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public class ShowCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    Type type;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    String body;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public ShowCommand(Type type, String body) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        this.body \u003d body;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            ui.list(taskList.getTasks());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        case DATE:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d taskList.retrieveTasksOnDate("
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                    LocalDate.parse(body));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            ui.list(tasks);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 40
    }
  },
  {
    "path": "src/main/java/common/Message.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "package common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public class Message {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public static final String INVALID_DATE \u003d \"Please enter a valid date or date format (yyyy-mm-dd).\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 5
    }
  },
  {
    "path": "src/main/java/common/Type.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "package common;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public enum Type {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    DATE, LIST, TODO, DEADLINE, EVENT, DELETE, DONE, BYE, FIND"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 5
    }
  },
  {
    "path": "src/main/java/data/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "package data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import common.Message;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import exception.ChatbotException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public Deadline(String description, boolean isDone, LocalDate timestamp) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        super(description, \"D\", isDone, timestamp);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public static Deadline newDeadline(String raw) throws ChatbotException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        if (raw.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            throw new ChatbotException(\"Deadline cannot be empty!!\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        String description \u003d raw.split(\"/by\")[0].trim();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        LocalDate timestamp;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            String dateString \u003d raw.split(\"/by\")[1].trim();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            timestamp \u003d LocalDate.parse(dateString);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            throw new ChatbotException(\"Deadline? By when??!!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            throw new ChatbotException(Message.INVALID_DATE);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return new Deadline(description, false, timestamp);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public Deadline markDone() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return new Deadline(this.description, true, this.timestamp);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        String formattedDate \u003d this.timestamp.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return super.toString() + \" (by: \" + formattedDate + \")\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 46
    }
  },
  {
    "path": "src/main/java/data/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "package data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import common.Message;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import exception.ChatbotException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public Event(String description, boolean isDone, LocalDate timestamp) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        super(description, \"E\", isDone, timestamp);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public static Event newEvent(String raw) throws ChatbotException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        if (raw.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            throw new ChatbotException(\"Event cannot be empty!!\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        String description \u003d raw.split(\"/at\")[0].trim();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        LocalDate timestamp;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            String dateString \u003d raw.split(\"/at\")[1].trim();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            timestamp \u003d LocalDate.parse(dateString);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            throw new ChatbotException(\"Event? At what date??!!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            throw new ChatbotException(Message.INVALID_DATE);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return new Event(description, false, timestamp);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public Event markDone() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return new Event(this.description, true, this.timestamp);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        String formattedDate \u003d this.timestamp.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return super.toString() + \" (at: \" + formattedDate + \")\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 46
    }
  },
  {
    "path": "src/main/java/data/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": " * Represents a task (e.g todo, deadline, event) with a description, type, completion status and date."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "package data;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import common.Type;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    protected final String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    protected final String type;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    protected final boolean isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    protected final LocalDate timestamp;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    protected Task(String description, String type, boolean isDone, LocalDate timestamp) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        this.timestamp \u003d timestamp;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * Returns a description of the task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @return description"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * Returns the status of the task (\"1\" - complete, \"0\" - incomplete)."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @return task status"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * Returns the status of the task as symbol (tick or cross)."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @return task status"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * Returns a date, of the format (yyyy-mm-dd), associated with the task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @return the date of the task"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return this.timestamp;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * Marks the task as done. A new copy of the object is returned."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @return a task object marked as done"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public Task markDone() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return new Task(this.description, this.type, true, this.timestamp);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return \"[\" + this.type + \"]\" + \"[\" + getStatusIcon() + \"]\" +"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                \" \" + this.description;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 73
    }
  },
  {
    "path": "src/main/java/data/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": " * A class containing a list of tasks, with methods for adding new tasks, deleting and returning"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": " * tasks due on a specific date."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "package data;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import exception.ChatbotException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    private final ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * Returns the current list of tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @return list of tasks"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * Returns a task at the specified index."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @param index index to locate task"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @return task at the given index"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return this.tasks.get(index);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * Returns the current total number of tasks."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @return total number of tasks"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public int count() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * Adds a new task to the list of tasks."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @param task new task to be added"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @return true if a non-null task object is given"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public boolean addTask(Task task) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        if (task \u003d\u003d null) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * Deletes the task at a specified index on the list."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @param index index to locate task"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @return task that is removed"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @throws ChatbotException if given index is out-of-bounds"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public Task removeTask(int index) throws ChatbotException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        Task removed;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            removed \u003d this.tasks.remove(index);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            throw new ChatbotException(\"That item does not exist!\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return removed;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * Mark a task on the list as done."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @param index index to locate the task"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @return task to be marked as done"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @throws ChatbotException if given index is out-of-bounds"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public Task markAsDone(int index) throws ChatbotException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        Task taskDone;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            taskDone \u003d getTask(index).markDone();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            this.tasks.set(index, taskDone);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            throw new ChatbotException(\"That item does not exist!\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return taskDone;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * Returns a list of tasks due on a given date."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @param date given date"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @return list of tasks due"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public ArrayList\u003cTask\u003e retrieveTasksOnDate(LocalDate date) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        Iterator\u003cTask\u003e iter \u003d this.tasks.iterator();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        while (iter.hasNext()) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            Task tsk \u003d iter.next();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            LocalDate taskDate \u003d tsk.getDate();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            if (taskDate !\u003d null \u0026\u0026 taskDate.equals(date)) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                tasks.add(tsk);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public ArrayList\u003cTask\u003e find(String searchStr) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        Iterator\u003cTask\u003e iter \u003d this.tasks.iterator();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        while (iter.hasNext()) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            Task tsk \u003d iter.next();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            if (tsk.getDescription().contains(searchStr)) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                tasks.add(tsk);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 131
    }
  },
  {
    "path": "src/main/java/data/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "package data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import exception.ChatbotException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        super(description, \"T\", isDone, null);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public static Todo newTodo(String body) throws ChatbotException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        if (body.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            throw new ChatbotException(\"Ooopsss (\u003e.\u003e) Todo task cannot be empty!!\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return new Todo(body, false);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public Todo markDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return new Todo(this.description, true);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 23
    }
  },
  {
    "path": "src/main/java/exception/ChatbotException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": " * This exception is thrown by the chatbot to indicate that an invalid command is given,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": " * or an invalid action is encountered."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public class ChatbotException extends Exception {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    String message;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public ChatbotException(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 16
    }
  },
  {
    "path": "src/main/java/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": " * A class that parses the command input given by the user."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import commands.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import common.Type;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import exception.ChatbotException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * Parses the user input and returns an executable command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @param fullCmd the user input"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @return command matching the user input"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @throws ChatbotException"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public static Command parse(String fullCmd) throws ChatbotException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        String text \u003d fullCmd.trim();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        String typeStr \u003d text.split(\" \")[0].trim();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        String body \u003d text.substring(typeStr.length()).trim();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        Command command \u003d null;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            Type type \u003d Type.valueOf(typeStr.toUpperCase());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            boolean isShow \u003d type \u003d\u003d Type.LIST || type \u003d\u003d Type.DATE;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            boolean isAdd \u003d type \u003d\u003d Type.TODO || type \u003d\u003d Type.DEADLINE || type \u003d\u003d Type.EVENT;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            boolean isAction \u003d type \u003d\u003d Type.DELETE || type \u003d\u003d Type.DONE;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            boolean isFind \u003d type \u003d\u003d Type.FIND;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            boolean isExit \u003d type \u003d\u003d Type.BYE;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            if (isShow) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                command \u003d new ShowCommand(type, body);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            } else if (isAdd) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                command \u003d new AddCommand(type, body);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            } else if (isAction) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                command \u003d new ActionCommand(type, body);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            } else if (isExit) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                command \u003d new ExitCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            } else if (isFind){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                command \u003d new FindCommand(body);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                parseError();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        } catch (IllegalArgumentException e){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            parseError();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    private static void parseError() throws ChatbotException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        throw new ChatbotException(\"Arghh! I do not know what you mean, are you using the right\\n    \" +"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                \"commands?\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 62
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": " * A storage class that contains methods for loading and saving tasks."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import data.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import data.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import data.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import data.Todo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import exception.ChatbotException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    private final Path location;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public Storage(Path location) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        this.location \u003d location;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * Loads a list of tasks from a file on the disk. If no such file exists, create a new file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @return list of tasks saved to the disk"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @throws ChatbotException if could not load file"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public ArrayList\u003cTask\u003e loadTasks() throws ChatbotException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            // File does not exist"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            if (!Files.exists(location)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                Files.createFile(location);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                return  new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            // File exists, load data"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            Stream\u003cTask\u003e taskStream \u003d Files.lines(location).map(line -\u003e {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                String[] lineData \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                String type \u003d lineData[0].trim();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                boolean isDone \u003d lineData[1].trim().equals(\"1\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                String description \u003d lineData[2].trim();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                String timestamp \u003d lineData[3].trim();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                Task task \u003d null;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                switch (type) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                        task \u003d new Todo(description, isDone);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                        task \u003d new Deadline(description, isDone, LocalDate.parse(timestamp));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                        task \u003d new Event(description, isDone, LocalDate.parse(timestamp));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                return task;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            });"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            taskStream.forEach(taskList::add);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            throw new ChatbotException(\"Ooops, I couldn\u0027t load the tasks.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public void saveTasks(ArrayList\u003cTask\u003e taskList) throws ChatbotException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        Iterator\u003cTask\u003e iter \u003d taskList.iterator();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        String dataStr \u003d \"\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        while (iter.hasNext()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            Task tsk \u003d iter.next();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            String timestamp \u003d tsk.getDate() \u003d\u003d null ? \"-\" : tsk.getDate().toString();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            String entry \u003d tsk.getType() + \" | \" +"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                    tsk.getStatus() + \" | \" +"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                    tsk.getDescription() + \" | \" +"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                    timestamp  +"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                    System.lineSeparator();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            dataStr \u003d dataStr.concat(entry);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            Files.write(location, dataStr.getBytes());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            throw new ChatbotException(\"Oooops, I couldn\u0027t save the tasks.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 103
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": " * A class representing the command line level user interface. Responsible for reading commands"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": " * from the user and displaying data, success/error messages to the user."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import data.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.util.Iterator;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    Scanner sc;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    private void display(String message) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        System.out.println(\"    \" + message);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * Prints out a welcome message."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                \"   ####################################################\\n\" +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                        \"   #                                                  #\\n\" +"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                        \"   #  Hey there, I\u0027m Hanry Kun the impatient ChatBot. #\\n\" +"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                        \"   #  What can I do for you? (-.-)                    #\\n\" +"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                        \"   #                                                  #\\n\" +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                        \"   ####################################################\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        );"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * Reads in the command given by the user."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @return the user command"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * Prints out a success message for adding a task."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @param task task added"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @param count current number of tasks in the task list"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public void addSuccess(Task task, int count) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        display(\"Got it. I\u0027ve added this task:\\n        \" + task +"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                String.format(\"\\n    Now you have %d task(s) in the list.\", count));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * Prints out a success message for deleting a task."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @param task task deleted"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @param count current number of tasks in the task list"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public void deleteSuccess(Task task, int count) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        display(\"Alright. I\u0027ve removed this task:\\n        \" + task +"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                String.format(\"\\n    Now you have %d task(s) in the list.\", count));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * Prints out a success message for marking a task as done."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @param task task marked as done"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public void markDoneSuccess(Task task) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        display(\"Nice! I\u0027ve marked this task as done:\\n    \" +"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "                \"    \" + task);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * Prints out the given error message."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @param message the error message"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public void showErrorMessage(String message) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        display(message);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * List out the given tasks."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     * @param ls list of tasks"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public void list(ArrayList\u003cTask\u003e ls) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        System.out.println(\"    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        System.out.println(\"    ######################## Your Tasks ########################\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        System.out.println(\"    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        if (ls.size() \u003d\u003d 0 ) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            System.out.println(\"    No task here.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        Iterator\u003cTask\u003e iter \u003d ls.iterator();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        while (iter.hasNext()) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            System.out.println(\"    \" + index + \". \" + iter.next());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        System.out.println(\"    - End of list -\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 111
    }
  },
  {
    "path": "src/test/java/data/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "package data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import exception.ChatbotException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public void deadlineBody_datePresent_success() throws ChatbotException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        Deadline dl \u003d Deadline.newDeadline(\"return book /by 2020-08-25\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        assertEquals(dl.getDescription(), \"return book\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        assertEquals(dl.getDate().toString(), \"2020-08-25\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public void deadlineBody_missingDate_exceptionThrown() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            Deadline.newDeadline(\"return book\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        } catch (ChatbotException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            assertEquals(e.getMessage(), \"Deadline? By when??!!\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public void dateFormat_invalidFormat_exceptionThrown() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            Deadline.newDeadline(\"return book /by wed\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        } catch (ChatbotException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            assertEquals(e.getMessage(), \"Please enter a valid date or date format (yyyy-mm-dd).\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 39
    }
  },
  {
    "path": "src/test/java/data/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "package data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import exception.ChatbotException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public void eventBody_datePresent_success() throws ChatbotException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        Event evt \u003d Event.newEvent(\"meeting /at 2020-08-25\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        assertEquals(evt.getDescription(), \"meeting\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        assertEquals(evt.getDate().toString(), \"2020-08-25\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public void eventBody_missingDate_exceptionThrown() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            Event.newEvent(\"meeting\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        } catch (ChatbotException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            assertEquals(e.getMessage(), \"Event? At what date??!!\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public void dateFormat_invalidFormat_exceptionThrown() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            Event.newEvent(\"meeting /at 2020-20-20\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        } catch (ChatbotException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            assertEquals(e.getMessage(), \"Please enter a valid date or date format (yyyy-mm-dd).\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 38
    }
  },
  {
    "path": "src/test/java/data/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "package data;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import exception.ChatbotException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public void todoBody_nonEmptyBody_success() throws ChatbotException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        assertEquals(Todo.newTodo(\"Read book\").getDescription(), \"Read book\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    public void todoBody_emptyBody_exceptionThrown(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            Todo.newTodo(\"\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        } catch (ChatbotException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "            assertEquals(e.getMessage(), \"Ooopsss (\u003e.\u003e) Todo task cannot be empty!!\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 25
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "deadline return book /by 2020-08-20"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "event project meeting /at 2020-08-20"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "todo"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "event"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "blah"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "deadline homework submit"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "deadline homework submit .by"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "deadline homework submit /by invalid-format"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "event run"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "event run /at"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "event run /at invalid-format"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "date invalid-format"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "date 2020-08-20"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "done 1000"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "delete 1000"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 26
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Chatbot.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "java -classpath ..\\bin Chatbot \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jianhandev"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Main.java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jianhandev"
        },
        "content": "java -classpath ../bin Main \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "jianhandev": 4,
      "-": 36
    }
  }
]
