[
  {
    "path": "src/Deadlines.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshruien"
        },
        "content": "public class Deadlines extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    protected String deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public Deadlines(String task, String deadline) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + deadline + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshruien"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshruien": 14
    }
  },
  {
    "path": "src/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public static void greeting() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        String underscore \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        System.out.println(underscore);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        System.out.println(\"    Hello! I\u0027m Duke\" + \"\\n\" + \"    What can I do for you?\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        System.out.println(underscore);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public static void commandTask(String input, TaskList newList) throws NoDescriptionException, InvalidCommandException, InvalidTaskException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        String[] splitString \u003d input.split(\" \",2);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        if (splitString[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            if(splitString.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                throw new NoDescriptionException(\"    ☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                String info \u003d splitString[1];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                Todos newTodo \u003d new Todos(info);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                newList.addTask(newTodo);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        } else if (splitString[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            if(splitString.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                throw new NoDescriptionException(\"    ☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                String info \u003d splitString[1];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                String[] information \u003d info.split(\"/by \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                if (information.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    throw new InvalidTaskException(\"    ☹ OOPS!!! Please specify the deadline time\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    String description \u003d information[0];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    String by \u003d information[1];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    Deadlines newDeadline \u003d new Deadlines(description, by);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    newList.addTask(newDeadline);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        } else if (splitString[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            if(splitString.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                throw new NoDescriptionException(\"    ☹ OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                String info \u003d splitString[1];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                String[] information \u003d info.split(\"/at \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                if (information.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    throw new InvalidTaskException(\"    ☹ OOPS!!! Please state the event time\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    String description \u003d information[0];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    String at \u003d information[1];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    Events newEvent \u003d new Events(description, at);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    newList.addTask(newEvent);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            throw new InvalidCommandException(\"    ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public static void commandHandler(String input, TaskList newList) throws InvalidDoneDeleteException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        String[] splitInput \u003d input.split(\" \");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        if (splitInput[0].equals(\"list\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            newList.listTasks();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        } else if (splitInput[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            if (splitInput.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                throw new InvalidDoneDeleteException(\"    ☹ OOPS!!! Please specify which task is done\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                String taskNumberString \u003d splitInput[1];"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    int taskNumberInt \u003d Integer.parseInt(taskNumberString) - 1;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    if (taskNumberInt + 1 \u003e newList.getLength()) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                        throw new InvalidDoneDeleteException(\"    ☹ OOPS!!! Your task number is out of bounds\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                        newList.get(taskNumberInt).markDone();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    throw new InvalidDoneDeleteException(\"    ☹ OOPS!!! Invalid task number.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        } else if (splitInput[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            if (splitInput.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                throw new InvalidDoneDeleteException(\"    ☹ OOPS!!! Please specify which task you want to delete\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                String taskNumberString \u003d splitInput[1];"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    int taskNumberInt \u003d Integer.parseInt(taskNumberString) - 1;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    if (taskNumberInt + 1 \u003e newList.getLength()) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                        throw new InvalidDoneDeleteException(\"    ☹ OOPS!!! Your task number is out of bounds\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                        newList.removeTask(taskNumberInt);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    throw new InvalidDoneDeleteException(\"    ☹ OOPS!!! Invalid task number.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                commandTask(input,newList);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            } catch (InvalidCommandException e) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            } catch (NoDescriptionException e) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            } catch (InvalidTaskException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        String underscore \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        greeting();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        TaskList newList \u003d new TaskList();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        while(sc.hasNext()) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            System.out.println(underscore);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                String[] splitInput \u003d input.split(\" \");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                if (splitInput[0].equals(\"bye\")) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    System.out.println(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                    commandHandler(input, newList);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            } catch (InvalidDoneDeleteException e) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "joshruien"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            System.out.println(underscore);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "joshruien"
        },
        "content": "}"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "joshruien": 145
    }
  },
  {
    "path": "src/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshruien"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public Events(String task, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshruien"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshruien": 13
    }
  },
  {
    "path": "src/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshruien"
        },
        "content": "public class InvalidCommandException extends Exception {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public InvalidCommandException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshruien"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshruien": 6
    }
  },
  {
    "path": "src/InvalidDoneDeleteException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshruien"
        },
        "content": "public class InvalidDoneDeleteException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public InvalidDoneDeleteException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshruien"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshruien": 7
    }
  },
  {
    "path": "src/InvalidTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshruien"
        },
        "content": "public class InvalidTaskException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public InvalidTaskException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshruien"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshruien": 7
    }
  },
  {
    "path": "src/NoDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshruien"
        },
        "content": "public class NoDescriptionException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public NoDescriptionException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshruien"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshruien": 7
    }
  },
  {
    "path": "src/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshruien"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        return (isDone ? \"[\" + \"\\u2713\" + \"]\" : \"[\" + \"\\u2718\" + \"]\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        if(this.isDone \u003d\u003d false) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            this.isDone \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            System.out.println(\"     Nice! I\u0027ve marked this task as done: \" + \"\\n\" + \"       \" + this.toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            System.out.println(\"    Task is already done.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        return this.getStatusIcon() + \" \" + this.description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshruien"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshruien": 30
    }
  },
  {
    "path": "src/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshruien"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshruien"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    private ArrayList\u003cTask\u003e todoList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        this.todoList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        this.todoList.add(task);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve added this task:\" + \"\\n\" + \"       \" + task.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        System.out.println(\"     Now you have \" + this.todoList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        return this.todoList.get(index);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public int getLength() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        return this.todoList.size();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public void removeTask(int index) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        Task removedTask \u003d this.todoList.get(index);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        this.todoList.remove(index);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        System.out.println(\"     Noted. I\u0027ve removed this task:\" + \"\\n\" + \"      \" + removedTask.toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        System.out.println(\"     Now you have \" + this.todoList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public void listTasks() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        for (int i \u003d 0; i \u003c this.todoList.size(); i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            int listNumber \u003d i + 1;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            Task currentTask \u003d todoList.get(i);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            String taskStatus \u003d currentTask.getStatusIcon();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshruien"
        },
        "content": "            System.out.println(\"     \" + listNumber + \".\" + currentTask.toString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshruien"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshruien": 43
    }
  },
  {
    "path": "src/Todos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshruien"
        },
        "content": "public class Todos extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public Todos(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshruien"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshruien"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshruien"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshruien"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshruien": 13
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshruien"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshruien"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshruien"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshruien"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "joshruien": 4
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshruien"
        },
        "content": "if ! javac -cp /Users/joshua/Desktop/ip/src -Xlint:none -d /Users/joshua/Desktop/ip/bin /Users/joshua/Desktop/ip/src/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshruien"
        },
        "content": "java -classpath /Users/joshua/Desktop/ip/bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshruien"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 35,
      "joshruien": 3
    }
  }
]
