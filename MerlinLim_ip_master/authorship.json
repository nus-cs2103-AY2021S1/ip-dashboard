[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "# duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/Main.java` file, right-click it, and choose `Run Main.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "-": 24,
      "MerlinLim": 2
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "compileJava.options.encoding \u003d \u0027UTF-8\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "tasks.withType(JavaCompile) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    options.encoding \u003d \u0027UTF-8\u0027"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    systemProperty \"file.encoding\", \"utf-8\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    mainClassName \u003d \"Main\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    archiveBaseName \u003d \"Duke\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    toolVersion \u003d \u00278.36\u0027"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    enableAssertions \u003d true;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    systemProperty \"file.encoding\", \"utf-8\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 43,
      "MerlinLim": 27
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import application.Launcher;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "public class Main {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        Launcher.main(args);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MerlinLim": 8
    }
  },
  {
    "path": "src/main/java/application/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "package application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": " * Dialog Box encapsulates the label and image to preview."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * Create DialogBox when user makes an input to be previewed."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @param l  Label to display."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @param iv Image to attach to display."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * Creates Dialog Box for user such that ImageView is on the right."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @param l  Label to display."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @param iv Image to view."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @return Dialog Box containing user input and image."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * Creates Dialog Box for Duke Bot such that ImageView is on the left."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @param l  Label to display."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @param iv Image to view"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @return Dialog Box containing Duke bot input."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MerlinLim": 70
    }
  },
  {
    "path": "src/main/java/application/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "package application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        Application.launch(MainWindow.class, args);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MerlinLim": 9
    }
  },
  {
    "path": "src/main/java/application/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "package application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import magic.MyString;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "public class MainWindow extends Application {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    private Image steve \u003d new Image(this.getClass().getResourceAsStream(\"/images/Steve.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    private Image alex \u003d new Image(this.getClass().getResourceAsStream(\"/images/Alex.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    private Duke duke \u003d new Duke(\"data\", \"duke.txt\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        sendButton \u003d new Button(MyString.SEND_BUTTON);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        //Show welcome message"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        Label welcomeLabel \u003d getDialogLabel(Ui.showWelcome());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        DialogBox welcomeDialogBox \u003d DialogBox.getDukeDialog(welcomeLabel, new ImageView(alex));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        dialogContainer.getChildren().add(welcomeDialogBox);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        //Resize"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        adjustSize(mainLayout, stage);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        //Add user input feature"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        addUserInput();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    private void adjustSize(AnchorPane mainLayout, Stage stage) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        //RESIZE"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        stage.setTitle(MyString.WINDOWS_TITLE);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    private void addUserInput() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        });"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        });"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        });"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        });"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        Label dukeText \u003d new Label(duke.getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                DialogBox.getUserDialog(userText, new ImageView(steve)),"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                DialogBox.getDukeDialog(dukeText, new ImageView(alex))"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        );"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        if (duke.isExit()) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            System.exit(0);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MerlinLim": 149
    }
  },
  {
    "path": "src/main/java/command/CommandHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import converter.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "public class CommandHandler {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * Give instructions to Bot based on the command given and return UI response. Contains the logic of the bot."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @param input Raw user input in string."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @param duke  Duke object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @return UI response as a string based on the command given."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static String execute(String input, Duke duke) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        TaskList taskList \u003d duke.getTaskList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        Storage storage \u003d duke.getStorage();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            Mode mode \u003d Parser.mode(input);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            if (mode \u003d\u003d Mode.TODO || mode \u003d\u003d Mode.DEADLINE"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                    || mode \u003d\u003d Mode.EVENT) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                // Create and add task to task list"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                Task task \u003d Parser.task(input);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                taskList.add(task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                // Write data"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                storage.addData(task);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                // System output"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                output.append(Ui.showAddTask(task, taskList.getSize()));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            } else if (mode \u003d\u003d Mode.DONE) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                // Mark Task as Done"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                int order \u003d Parser.order(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                Task task \u003d taskList.markDone(order);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                storage.markDoneData(order);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                output.append(Ui.showDoneTask(task));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            } else if (mode \u003d\u003d Mode.DELETE) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                // Delete Task"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                int order \u003d Parser.order(input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                Task task \u003d taskList.remove(order);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                storage.deleteData(order);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                output.append(Ui.showRemovedTask(task, taskList.getSize()));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            } else if (mode \u003d\u003d Mode.LIST) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                // List all tasks"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                output.append(Ui.showListTask(taskList));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            } else if (mode \u003d\u003d Mode.BYE) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                // Exit now"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                duke.setExit(true);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                output.append(Ui.goodbye());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            } else if (mode \u003d\u003d Mode.FIND) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                // Find tasks"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                String subName \u003d Parser.findName(input);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                TaskList result \u003d taskList.find(subName);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                output.append(Ui.showFindTask(result));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            } else if (mode \u003d\u003d Mode.TAG) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                //Tag task"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                int order \u003d Parser.order(input);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                String tagName \u003d Parser.getTag(input);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                Task task \u003d taskList.setTag(order, tagName);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                storage.setTag(order, tagName);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                output.append(Ui.showTaggedTask(task));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            output.append(Ui.showError(e));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MerlinLim": 82
    }
  },
  {
    "path": "src/main/java/command/Mode.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "public enum Mode {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    LIST, BYE, DONE, DELETE, TODO, DEADLINE, EVENT, FIND, TAG;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MerlinLim": 6
    }
  },
  {
    "path": "src/main/java/converter/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "package converter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import command.Mode;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import magic.MyString;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import task.ToDo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    private static final String SEP \u003d MyString.CMD_DELIMITER;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * Based on the input, return the correct command mode."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @param input String input to interpret"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @return Command Mode corresponding to input."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @throws DukeException thrown when no mode can be found for the input"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static Mode mode(String input) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        String command \u003d input.split(Parser.SEP)[0].toUpperCase();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            return Mode.valueOf(command);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            throw new DukeException(MyString.ERROR_INPUT_ERROR);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * Return the task corresponding to the input given"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @param input input to interpret"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @return A type of task will be returned."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @throws DukeException thrown when no task can be returned for the corresponding task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static Task task(String input) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        assert input.split(Parser.SEP).length \u003e\u003d 2 : MyString.ERROR_INVALID_ARGUMENT;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        String command \u003d input.split(Parser.SEP)[0];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        case MyString.CMD_TODO:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            return parseToDo(input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        case MyString.CMD_DEADLINE:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            return parseDeadline(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        case MyString.CMD_EVENT:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            return parseEvent(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            throw new AssertionError(MyString.ERROR_INVALID_TASK);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    private static ToDo parseToDo(String input) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        String name \u003d input.split(MyString.CMD_TODO)[1].trim();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        assert name.length() \u003e 0 : MyString.EMPTY_DESC;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return new ToDo(name);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    private static Deadline parseDeadline(String input) throws DukeException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        String name \u003d input.split(MyString.CMD_DEADLINE_BY)[0].split(MyString.CMD_DEADLINE)[1].trim();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        String by \u003d input.split(MyString.CMD_DEADLINE_BY)[1].trim();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        assert by.length() \u003e 0 : MyString.EMPTY_DESC;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        assert name.length() \u003e 0 : MyString.EMPTY_DESC;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return new Deadline(name, by);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    private static Event parseEvent(String input) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        String name \u003d input.split(MyString.CMD_EVENT_AT)[0].split(MyString.CMD_EVENT)[1].trim();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        String at \u003d input.split(MyString.CMD_EVENT_AT)[1].trim();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        assert at.length() \u003e 0 : MyString.EMPTY_DESC;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        assert name.length() \u003e 0 : MyString.EMPTY_DESC;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return new Event(name, at);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * Return specified order as an integer."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @param input Raw command input as String."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @return Order number as Integer."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @throws DukeException when Raw command input given does not contain an integer."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static int order(String input) throws DukeException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            return Integer.parseInt(input.split(Parser.SEP)[1]);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            throw new DukeException(MyString.ERROR_INTEGER);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * Returns the sub name to search for."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @param input Raw command input as String."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @return Sub name to search for."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @throws DukeException when input has too few arguments"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static String findName(String input) throws DukeException{"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        if (input.split(Parser.SEP).length\u003c2) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            throw new DukeException (MyString.ERROR_INVALID_DESC);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return input.split(Parser.SEP, 2)[1].trim();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * Return name of tag as String"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @param input Raw command input as String"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @return Name of tag"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @throws DukeException when input has too few arguments"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static String getTag(String input) throws DukeException{"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        if (input.split(Parser.SEP).length\u003c3) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            throw new DukeException (MyString.ERROR_INVALID_DESC);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return input.split(Parser.SEP, 3)[2].trim();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MerlinLim": 121
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import command.CommandHandler;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    private boolean isExit \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * Instantiates Duke bot by loading Storage Data files into Tasklist. If data files or folders do not"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * exist based on the destination and filename given, Duke bot creates path and file specified."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @param dest"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @param fileName"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public Duke(String dest, String fileName) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            storage \u003d new Storage(dest, fileName);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            taskList \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            System.out.println(Ui.showError(e));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return CommandHandler.execute(input, this);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return this.isExit;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public TaskList getTaskList() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public Storage getStorage() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return this.storage;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public void setExit(boolean isExit) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        this.isExit \u003d isExit;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MerlinLim": 58
    }
  },
  {
    "path": "src/main/java/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * Creates DukeException with the specified exception message."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @param message Exception message to display."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MerlinLim": 12
    }
  },
  {
    "path": "src/main/java/magic/Format.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "package magic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "public class Format {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    //Storage format"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static final String DATA \u003d \"%s\\n\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    //Task format"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static final String LOCAL_DATE \u003d \"LLL dd uuuu\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static final String DISPLAY_DEADLINE \u003d \"[%s]%s (by: %s) %s\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static final String DISPLAY_EVENT \u003d \"[%s]%s (at: %s) %s\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static final String DISPLAY_TASK \u003d \"[%c] %s\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static final String DISPLAY_TODO \u003d \"[%s]%s %s\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static final String DISPLAY_TASK_AS_LIST \u003d \"%d. %s\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    //UI headers format"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static final String ADD_TASK_HEADER \u003d"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            \"Go it. I\u0027ve added this task:\\n%s\\n%s\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static final String DONE_TASK_HEADER \u003d"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            \"Nice! I\u0027ve marked this task as done:\\n%s\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static final String REMOVE_TASK_HEADER \u003d"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            \"Noted. I\u0027ve removed this task:\\n%s\\n%s\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static final String TOTAL_TASK_HEADER_EMPTY \u003d"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            \"TaskList is empty! Please add a task first.\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static final String TOTAL_TASK_HEADER \u003d"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            \"Now you have %d %s in the list.\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static final String FIND_TASK_HEADER \u003d"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            \"Here are the matching tasks in your list:\\n%s\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static final String FIND_TASK_HEADER_EMPTY \u003d"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            \"No matching tasks found\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static final String TAGGED_TASK_HEADER \u003d"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            \"Noted. The following task has been tagged!\\n%s\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static final String LIST_TASK_HEADER_EMPTY \u003d"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            \"List is empty!\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static final String LIST_TASK_HEADER \u003d"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            \"Here are the tasks in your list:\\n%s\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MerlinLim": 38
    }
  },
  {
    "path": "src/main/java/magic/MyString.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "package magic;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "public class MyString {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    //Application names"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static final String SEND_BUTTON \u003d"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            \"Send\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static final String WINDOWS_TITLE \u003d"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            \"duke\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    //Error Messages"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static final String ERROR_INVALID_TASK \u003d"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            \"Invalid Task\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static final String ERROR_INVALID_NAME \u003d"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            \"Invalid Name\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static final String ERROR_INVALID_ARGUMENT \u003d"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            \"Must be at least 2 inputs\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static final String EMPTY_DESC \u003d"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            \"Empty Desc\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static final String ERROR_INTEGER \u003d"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            \"\\u2639 OOPS!!! Please enter an integer!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static final String ERROR_INPUT_ERROR \u003d"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            \"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static final String ERROR_DIRECTORY \u003d"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            \"Cannot create directory\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static final String ERROR_DATA_FILE \u003d"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            \"Cannot create data text file\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static final String ERROR_INVALID_DATE \u003d"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            \"Invalid date Format.\\nPlease input in the following format:\\nYYYY-mm-dd\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static final String ERROR_INVALID_INDEX \u003d"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            \"\\u2639 OOPS!!! Looks like we can\u0027t find the task.\\nPlease enter a valid index\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static final String ERROR_INVALID_DESC \u003d"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            \"Invalid desc\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static final String ERROR_INVALID_SIZE \u003d"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            \"Invalid Size\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    //DATA SYMBOLS"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static final String DATA_TODO_SYMBOL \u003d \"T\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static final String DATA_DEADLINE_SYMBOL \u003d \"D\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static final String DATA_EVENT_SYMBOL \u003d \"E\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static final String DATA_TASK_SEP \u003d \"/\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    //Input String Delimiters"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static final String CMD_DEADLINE_BY \u003d \"/by\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static final String CMD_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static final String CMD_EVENT_AT \u003d \"/at\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static final String CMD_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static final String CMD_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static final String CMD_DELIMITER \u003d \" \";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    //Task Symbols"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static final char TICK \u003d \u0027\\u2713\u0027;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static final char CROSS \u003d \u0027\\u2718\u0027;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static final String TAG_ICON \u003d \" #\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    //UI Responses"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static final String WELCOME \u003d"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            \"Hello! I\u0027m Duke\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static final String GOODBYE \u003d"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MerlinLim": 62
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import magic.Format;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import magic.MyString;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import task.ToDo;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    // Read file"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    private final File f;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    private final String dir;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    private final String fileName;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * Constructor creates the data folder and txt if not yet created."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @param dest     the destination folder for the data file"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @param filename the name of the file"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @throws IOException   thrown when there\u0027s an error creating the data file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @throws DukeException thrown when error in creating folder and data file."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public Storage(String dest, String filename) throws IOException, DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        this.dir \u003d dest;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        this.fileName \u003d filename;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        File dir \u003d new File(dest);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        this.f \u003d new File(this.dir, filename);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        if (!dir.exists()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            if (!dir.mkdir()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                throw new DukeException(MyString.ERROR_DIRECTORY);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        if (!f.exists()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            if (!this.f.createNewFile()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                throw new DukeException(MyString.ERROR_DATA_FILE);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * Load reads the data file and returns a list of tasks stored inside."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @return list of tasks stored in the data file as an ArrayList"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @throws IOException thrown when scanner is unable to read the file"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws IOException, DukeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        ArrayList\u003cTask\u003e dukeList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            String[] inputSplit \u003d input.split(MyString.DATA_TASK_SEP);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            //Assert length is at least 2"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            assert inputSplit.length \u003e\u003d 2;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            Task task;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            switch (inputSplit[0]) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            case MyString.DATA_TODO_SYMBOL:"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                // two inputs"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                task \u003d new ToDo(inputSplit[3]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            case MyString.DATA_DEADLINE_SYMBOL:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                //three inputs"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                task \u003d new Deadline(inputSplit[3], inputSplit[4]);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            case MyString.DATA_EVENT_SYMBOL:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                //three inputs"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                task \u003d new Event(inputSplit[3], inputSplit[4]);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            if (Boolean.parseBoolean(inputSplit[1])) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                task.setDone();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            String tagName \u003d inputSplit[2];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            if (!tagName.isEmpty()) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                task.setTag(tagName);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            dukeList.add(task);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return dukeList;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * Adds the new task into the data file."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @param task New task to be written into the data file."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @throws IOException thrown when unable to find data file."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public void addData(Task task) throws IOException {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        writeData(task.getParsedData() + \"\\n\", true);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * Marks task as done in the data file"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @param order which order task to overwrite as done."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @throws IOException thrown when file cannot be found."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public void markDoneData(int order) throws IOException {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        String data \u003d String.valueOf(true);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        editData(order, data, 1);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * Adds the new task into the data file."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @param order which order task to be deleted from the data file."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @throws IOException thrown when unable to find data file."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public void deleteData(int order) throws IOException {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        //New text"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        Scanner reader \u003d new Scanner(f);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        StringBuilder newData \u003d new StringBuilder();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        for (int i \u003d 0; reader.hasNextLine(); i++) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            if (i !\u003d order - 1) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                String dataLine \u003d String.format(Format.DATA, reader.nextLine());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                newData.append(dataLine);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                reader.nextLine();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        writeData(newData.toString(), false);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * Writes the data as string into the data file."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @param text     String to write or overwrite."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @param isAppend true to append text, false to overwrite entire file."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @throws IOException thrown when file cannot be found."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    private void writeData(String text, Boolean isAppend) throws IOException {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        BufferedWriter bw \u003d new BufferedWriter(new FileWriter(this.dir + \"/\" + this.fileName, isAppend));"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        bw.write(text);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        bw.close();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * Sets Tagname of Task."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @param order   which order task to setTag."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @param tagName name of tag."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @throws IOException thrown when file cannot be found."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public void setTag(int order, String tagName) throws IOException {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        editData(order, tagName, 2);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * editData of Task."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @param order which order task to setTag."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @throws IOException thrown when file cannot be found."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public void editData(int order, String data, int type) throws IOException {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        StringBuilder newData \u003d new StringBuilder();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        Scanner reader \u003d new Scanner(f);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        for (int i \u003d 0; reader.hasNextLine(); i++) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            String dataLine;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            if (i \u003d\u003d order - 1) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                String[] oldData \u003d reader.nextLine().split(MyString.DATA_TASK_SEP);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                oldData[type] \u003d data;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                String parsedData \u003d String.join(MyString.DATA_TASK_SEP, oldData);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                dataLine \u003d String.format(Format.DATA, parsedData);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                String line \u003d reader.nextLine();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                dataLine \u003d String.format(Format.DATA, line);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            newData.append(dataLine);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        writeData(newData.toString(), false);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MerlinLim": 195
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import magic.Format;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import magic.MyString;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    private static final DateTimeFormatter MY_DATE_FORMATTER \u003d"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            DateTimeFormatter.ofPattern(Format.LOCAL_DATE);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    private final String by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    private final String byFormat;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    private final LocalDate date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * Create Deadline task based on the name and due date."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @param name Name of Deadline Task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @param by   Date of deadline in the format \"LLL dd uuuu\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @throws DukeException when error in creating a date."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public Deadline(String name, String by) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            this.date \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            this.byFormat \u003d this.date.format(MY_DATE_FORMATTER);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            throw new DukeException(MyString.ERROR_INVALID_DATE);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public String getParsedData() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        String[] args \u003d new String[]{MyString.DATA_DEADLINE_SYMBOL, String.valueOf(super.isDone),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            super.tag, super.name, this.by};"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return String.join(MyString.DATA_TASK_SEP, args);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        String tag \u003d \"\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        if (!super.tag.isEmpty()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            tag \u003d Task.TAG_ICON + super.tag;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return String.format(Format.DISPLAY_DEADLINE, MyString.DATA_DEADLINE_SYMBOL,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                super.toString(), this.byFormat, tag);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MerlinLim": 55
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import magic.Format;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import magic.MyString;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    private final String at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * Create Deadline task based on the name and range."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @param name Name of event."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @param at Time of event as a string."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public Event(String name, String at) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public String getParsedData() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        String[] args \u003d new String[]{MyString.DATA_EVENT_SYMBOL,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                String.valueOf(super.isDone), super.tag, super.name, this.at};"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return String.join(MyString.DATA_TASK_SEP, args);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        String tag \u003d \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        if (!super.tag.isEmpty()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            tag \u003d Task.TAG_ICON + super.tag;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return String.format(Format.DISPLAY_EVENT,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                MyString.DATA_EVENT_SYMBOL, super.toString(), this.at, tag);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MerlinLim": 35
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import magic.Format;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import magic.MyString;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": " * Super class for all types of tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static final String TAG_ICON \u003d MyString.TAG_ICON;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    protected final String name;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    protected String tag;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * Constructor creates a task and initialises done to false."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @param name name of Task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        assert name.length() \u003e 0 : MyString.ERROR_INVALID_NAME;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        this.tag \u003d \"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public boolean getDone() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * Formats task into the data format."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @return Task as Parsed Format."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public String getParsedData() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        String[] output \u003d new String[]{String.valueOf(this.isDone), this.name};"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return String.join(MyString.DATA_TASK_SEP, output);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public void setTag(String tagName) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        this.tag \u003d tagName;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        char symbol \u003d isDone ? MyString.TICK : MyString.CROSS;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return String.format(Format.DISPLAY_TASK, symbol, name);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "MerlinLim": 60
    }
  },
  {
    "path": "src/main/java/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import magic.Format;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import magic.MyString;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    private final ArrayList\u003cTask\u003e dukeList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * Constructor initialises TaskList with a list of tasks from the memory."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @param list list of tasks to load into the Task List."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        this.dukeList.addAll(list);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * Method to add a task to Task List"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @param task Task to add to the list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        // Add to List"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        dukeList.add(task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * Removes a task from the Task List"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @param order the order to remove from the tasklist"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @return the task that was removed."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public Task remove(int order) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            return dukeList.remove(order - 1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            throw new DukeException(MyString.ERROR_INVALID_INDEX);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * Marks a task as done in the Task List."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @param order the order to mark as done."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @return the task that was marked done."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public Task markDone(int order) throws DukeException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            Task task \u003d dukeList.get(order - 1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            task.setDone();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            throw new DukeException(MyString.ERROR_INVALID_INDEX);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * Creates a string of the list of tasks."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @return the string of each task."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public String listToString() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        for (int i \u003d 0; i \u003c dukeList.size(); i++) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            int order \u003d i + 1;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            String taskString \u003d dukeList.get(i).toString();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            String line \u003d String.format(Format.DISPLAY_TASK_AS_LIST,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                    order, taskString);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            output.append(line);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * returns the number of tasks in the Task List."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @return number of tasks in the Task List."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return dukeList.size();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * Return subList of tasks matching with subName"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @param subName Name to compare."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @return TaskList of tasks whose names match subName"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public TaskList find(String subName) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        TaskList subList \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        for (Task task : dukeList) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            String name \u003d task.getName();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            String s1 \u003d name.toLowerCase();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            String s2 \u003d subName.toLowerCase();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            if (s1.contains(s2)) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                subList.add(task);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return subList;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public Task setTag(int order, String tagName) throws DukeException {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        assert !tagName.isEmpty() : MyString.ERROR_INVALID_DESC;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            Task task \u003d dukeList.get(order - 1);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            task.setTag(tagName);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            throw new DukeException(MyString.ERROR_INVALID_INDEX);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MerlinLim": 119
    }
  },
  {
    "path": "src/main/java/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import magic.Format;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import magic.MyString;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public ToDo(String name) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public String getParsedData() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        String[] args \u003d new String[]{MyString.DATA_TODO_SYMBOL, String.valueOf(super.isDone), super.tag, super.name};"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return String.join(MyString.DATA_TASK_SEP, args);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        String tag \u003d \"\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        if (!super.tag.isEmpty()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            tag \u003d Task.TAG_ICON + super.tag;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return String.format(Format.DISPLAY_TODO, MyString.DATA_TODO_SYMBOL, super.toString(), tag);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MerlinLim": 28
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import magic.Format;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import magic.MyString;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * Prints welcome message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static String showWelcome() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return MyString.WELCOME;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * Prints goodbye message"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static String goodbye() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return MyString.GOODBYE;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * Prints header and task added."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @param task Task to print"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static String showAddTask(Task task, int size) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        String totalTasksString \u003d showTotalTask(size);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return String.format(Format.ADD_TASK_HEADER,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                task.toString(), totalTasksString);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * Prints header and task done."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @param task Task to print"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static String showDoneTask(Task task) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return String.format(Format.DONE_TASK_HEADER, task);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * Prints header and task removed."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @param task Task to print"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static String showRemovedTask(Task task, int size) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        String totalTasksString \u003d showTotalTask(size);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return String.format(Format.REMOVE_TASK_HEADER,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                task.toString(), totalTasksString);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * Prints header and number of tasks in list."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @param size number of tasks in the list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static String showTotalTask(int size) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        assert size \u003e\u003d 0 : MyString.ERROR_INVALID_SIZE;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        if (size \u003d\u003d 0) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            return Format.TOTAL_TASK_HEADER_EMPTY;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            String plural \u003d size !\u003d 1 ? \"tasks\" : \"task\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            return String.format(Format.TOTAL_TASK_HEADER, size, plural);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * Format result of Find task."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @param result String of find task."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @return Formatted string result."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static String showFindTask(TaskList result) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        String list \u003d result.listToString();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        if (list.isEmpty()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            return Format.FIND_TASK_HEADER_EMPTY;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return String.format(Format.FIND_TASK_HEADER,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                result.listToString());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * Prints error message."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @param e Exception to print."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static String showError(Exception e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return e.getMessage();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * Prints Header and task Tagged."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @param task Task that has been tagged."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @return Formatted String result."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static String showTaggedTask(Task task) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return String.format(Format.TAGGED_TASK_HEADER,"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                task.toString());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * Prints Header and list of tasks in Task List."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @param taskList Task List to print"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     * @return  Formatted String result."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public static String showListTask(TaskList taskList) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        String list \u003d taskList.listToString();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        if (list.isEmpty()) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            return Format.LIST_TASK_HEADER_EMPTY;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        return String.format(Format.LIST_TASK_HEADER,"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                taskList.listToString());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MerlinLim": 118
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import converter.Parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import org.junit.jupiter.api.AfterEach;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import task.ToDo;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    private final PrintStream originalOut \u003d System.out;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    private final static String sysLineSep \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public void setUpStreams(){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    @AfterEach"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public void restoreStream() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        System.setOut(originalOut);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            FileWriter fw \u003d new FileWriter(\"data/duke.txt\", false);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            fw.write(\"\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        }catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            System.out.println(\"file not loaded\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public void testTaskList1(){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        // Loading tasks"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        ArrayList\u003cTask\u003e testList \u003d new ArrayList\u003c\u003e(Arrays.asList("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                new ToDo(\"Punch\"),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                new Deadline(\"Fight\", \"2019-03-04\"),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                new Event(\"Join Fight Club\", \"Saturday\")"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        ));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        TaskList taskList \u003d new TaskList(testList);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        System.out.print(taskList.listToString());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        String expectedList \u003d \"1. [T][✘] Punch\\n\" +"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                \"2. [D][✘] Fight (by: Mar 04 2019)\\n\" +"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                \"3. [E][✘] Join Fight Club (at: Saturday)\\n\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        assertEquals(expectedList,outContent.toString());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public void testTaskList2(){"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        //Adding and removing tasks"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        ToDo a \u003d new ToDo(\"Punch\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        Deadline b \u003d new Deadline(\"Fight\", \"2019-03-04\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        Event c \u003d new Event(\"Join Fight Club\", \"Saturday\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        // Check Add"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        taskList.add(a);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        assertEquals(taskList.listToString(), \"1. [T][✘] Punch\\n\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        // Check add + Remove"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        taskList.add(b);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        taskList.remove(1);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        assertEquals(taskList.listToString(), \"1. [D][✘] Fight (by: Mar 04 2019)\\n\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        // Check markingDone"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        taskList.add(c);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        taskList.markDone(1);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        taskList.markDone(2);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        assertEquals(taskList.listToString(),"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                \"1. [D][✓] Fight (by: Mar 04 2019)\\n\" +"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                        \"2. [E][✓] Join Fight Club (at: Saturday)\\n\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    public void parserTestCase(){"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        String input1 \u003d \"deadline go home /by 2019-05-06\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        String input2 \u003d \"event orbital /at tomorrow and later\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        String input3 \u003d \"todo nothing\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        Deadline d \u003d new Deadline(\"go home\", \"2019-05-06\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        Event e \u003d new Event(\"orbital\", \"tomorrow and later\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        ToDo t \u003d new ToDo(\"nothing\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        Parser p \u003d new Parser();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            assertEquals(d.toString(), p.task(input1).toString());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            assertEquals(e.toString(), p.task(input2).toString());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            assertEquals(t.toString(), p.task(input3).toString());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        }catch (DukeException ex){"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "            System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MerlinLim": 111
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import org.junit.jupiter.api.AfterEach;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import task.ToDo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    TaskList taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    final private ToDo a \u003d new ToDo(\"Punch\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    final private Deadline b \u003d new Deadline(\"Fight\", \"2019-03-04\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    final private Event c \u003d new Event(\"Join Fight Club\", \"Saturday\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    final private ToDo book1 \u003d new ToDo(\"Book\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    final private ToDo book2 \u003d new ToDo(\"Book book\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    final private ToDo book3 \u003d new ToDo(\"Book Book Book\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    void setUp() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        taskList \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    @AfterEach"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    void tearDown() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    void testAdd() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        taskList.add(a);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        Assertions.assertEquals(\"1. [T][✘] Punch\\n\", taskList.listToString());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    void testRemove() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        // Check add + Remove"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        taskList.add(a);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        taskList.add(b);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        taskList.remove(1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        Assertions.assertEquals(\"1. [D][✘] Fight (by: Mar 04 2019)\\n\", taskList.listToString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    void testMarkDone() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        taskList.add(b);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        taskList.add(c);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        taskList.markDone(1);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        taskList.markDone(2);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        Assertions.assertEquals(\"1. [D][✓] Fight (by: Mar 04 2019)\\n\" +"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                        \"2. [E][✓] Join Fight Club (at: Saturday)\\n\","
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                taskList.listToString());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    void getSize() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        taskList.add(a);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        taskList.add(b);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        taskList.add(c);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        taskList.remove(2);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        Assertions.assertEquals(2, taskList.getSize());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    void testFind() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        taskList.add(book1);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        taskList.add(book2);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        taskList.add(book3);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        String actual \u003d \"1. [T][✘] Book\\n\" +"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                \"2. [T][✘] Book book\\n\" +"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "                \"3. [T][✘] Book Book Book\\n\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "        Assertions.assertEquals(taskList.listToString(), actual);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "MerlinLim": 85
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "todo return book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "deadline go home /by monday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "event go to school /at monday to friday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "MerlinLim"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "MerlinLim": 4
    }
  }
]
