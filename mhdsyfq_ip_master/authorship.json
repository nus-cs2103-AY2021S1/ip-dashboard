[
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "D | true | ass | 2020-09-01"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "T | false | homework"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "D | false | hello | 2020-08-02"
      }
    ],
    "authorContributionMap": {
      "mhdsyfq": 3
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        System.out.println(\"Loading previous tasks....\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            ui.showError(e);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                ui.showError(e);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhdsyfq": 42
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhdsyfq": 7
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import duke.task.Deadlines;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import duke.task.Events;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import duke.task.ToDos;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        String[] splitCommands \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        splitCommands[0] \u003d splitCommands[0].strip().toUpperCase();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            switch (splitCommands[0]) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                case \"TODO\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                    ToDos todo \u003d new ToDos(splitCommands[1]);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                    return new AddCommand(todo);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                case \"DEADLINE\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                    String[] splitDeadline \u003d splitCommands[1].split(\"/by\", 2);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                    Deadlines deadline \u003d new Deadlines(splitDeadline[0].strip(), LocalDate.parse(splitDeadline[1].strip()));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                    return new AddCommand(deadline);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                case \"EVENT\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                    String[] splitEvent \u003d splitCommands[1].split(\"/at\", 2);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                    Events event \u003d new Events(splitEvent[0].strip(), LocalDate.parse(splitEvent[1].strip()));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                    return new AddCommand(event);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                case \"DELETE\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                    return new DeleteCommand(Integer.parseInt(splitCommands[1].strip()));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                case \"LIST\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                    return new ListCommand();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                case \"DONE\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                    return new DoneCommand(Integer.parseInt(splitCommands[1].strip()));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                case \"BYE\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                    return new ExitCommand();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                    throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            throw new DukeException(\"Uh-oh! Looks like you have entered an invalid task number.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            throw new DukeException(\"Uh-oh! I have no idea what that means.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            throw new DukeException(\"Uh-oh! Looks like you have got the format for the date wrong.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            switch (splitCommands[0]) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                case \"DELETE\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                    throw new DukeException(\"Uh-oh! You did not enter the number of the task you wish to delete.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                case \"DONE\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                    throw new DukeException(\"Uh-oh! You did not enter the number of the task you wish to complete.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                    throw new DukeException(\"Uh-oh! The description of your task cannot be empty.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhdsyfq": 63
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import duke.task.Deadlines;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import duke.task.Events;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import duke.task.ToDos;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    private final File file;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        this.file \u003d new File(filePath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        file.getParentFile().mkdir();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public List\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                String taskDetails \u003d sc.nextLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                if (taskDetails.startsWith(\"T\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                    task \u003d ToDos.load(taskDetails);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                } else if (taskDetails.startsWith(\"D\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                    task \u003d Deadlines.load(taskDetails);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                } else if (taskDetails.startsWith(\"E\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                    task \u003d Events.load(taskDetails);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                    throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            throw new DukeException(\"Uh-oh! The file could not be found!\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public void save(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            FileWriter fw \u003d new FileWriter(\"./data/tasks.txt\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            for (Task t : tasks) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                fw.write(t.saveAs() + \"\\n\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhdsyfq": 66
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    private final List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e(tasks);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public Task deleteTask(int index) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        return tasks.remove(index);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public int getNumOfTasks() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public void markAsDone(int index) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        tasks.get(index).markAsDone();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        StringBuilder allTasks \u003d new StringBuilder();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            int index \u003d i - 1;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            allTasks.append(\"\\n\").append(i).append(\".\").append(tasks.get(index));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        return allTasks.toString();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhdsyfq": 52
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    private final Scanner sc;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        return sc.nextLine().trim();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public void printLines(String output) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        System.out.println(\"______________________________________________________________________\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        System.out.println(output);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        System.out.println(\"______________________________________________________________________\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        printLines(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public void showExit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        printLines(\"Bye. I hope to see you again soon!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public void showList(TaskList tasks) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        if (tasks.getNumOfTasks() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            printLines(\"You currently have no tasks in your list.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            printLines(\"Here are the tasks in your list:\\n\" + tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public void showAdded(Task task, TaskList tasks) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        printLines(\"Task added successfully!\\n\\t\" + task + showNumOfTasks(tasks));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public void showDone(Task task) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        printLines(\"Task completed successfully!\\n\\t\" + task);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public void showDeleted(Task task, TaskList tasks) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        printLines(\"Task deleted successfully!\\n\\t\" + task + showNumOfTasks(tasks));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public String showNumOfTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        return String.format(\"\\nNow you have %d task(s) in the list.\", tasks.getNumOfTasks());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public void showError(Exception e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        printLines(e.getMessage());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhdsyfq": 58
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    private final Task task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        ui.showAdded(task, tasks);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        storage.save(tasks.getTasks());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhdsyfq": 26
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhdsyfq": 11
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public DeleteCommand(int taskNum) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        index \u003d taskNum - 1;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            Task task \u003d tasks.deleteTask(index);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            ui.showDeleted(task, tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            storage.save(tasks.getTasks());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            throw new DukeException(\"Uh-oh! Looks like you have entered an invalid task number.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhdsyfq": 31
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public DoneCommand(int taskNum) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        index \u003d taskNum - 1;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            tasks.markAsDone(index);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            ui.showDone(tasks.getTask(index));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            storage.save(tasks.getTasks());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            throw new DukeException(\"Uh-oh! Looks like you have entered an invalid task number.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhdsyfq": 30
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        storage.save(tasks.getTasks());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        ui.showExit();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhdsyfq": 19
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        ui.showList(tasks);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhdsyfq": 18
    }
  },
  {
    "path": "src/main/java/duke/task/Deadlines.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "public class Deadlines extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public Deadlines(String description, LocalDate by) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public static Deadlines load(String taskDetails) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        String[] splitTaskDetails \u003d taskDetails.split(\"\\\\|\",4);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        for (int i \u003d 0; i \u003c splitTaskDetails.length; i++) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            splitTaskDetails[i] \u003d splitTaskDetails[i].strip();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        Deadlines deadline \u003d new Deadlines(splitTaskDetails[2],"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                LocalDate.parse(splitTaskDetails[3]));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        if (splitTaskDetails[1].equals(\"true\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            deadline.markAsDone();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        return deadline;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public String saveAs() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        return \"D | \" + super.saveAs() + \" | \" + by;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by.format("
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                DateTimeFormatter.ofPattern(\"d MMM yyyy\")) + \")\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhdsyfq": 37
    }
  },
  {
    "path": "src/main/java/duke/task/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public Events(String description, LocalDate at) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public static Events load(String taskDetails) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        String[] splitTaskDetails \u003d taskDetails.split(\"\\\\|\",4);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        for (int i \u003d 0; i \u003c splitTaskDetails.length; i++) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            splitTaskDetails[i] \u003d splitTaskDetails[i].strip();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        Events event \u003d new Events(splitTaskDetails[2],"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "                LocalDate.parse(splitTaskDetails[3]));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        if (splitTaskDetails[1].equals(\"true\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            event.markAsDone();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        return event;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public String saveAs() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        return \"E | \" + super.saveAs() + \" | \" + at;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at.format(DateTimeFormatter.ofPattern(\"d MMM uuuu\")) + \")\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhdsyfq": 36
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        this.description \u003d description.trim();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        return (isDone ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public String saveAs() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        return isDone + \" | \" + description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhdsyfq": 28
    }
  },
  {
    "path": "src/main/java/duke/task/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "public class ToDos extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public ToDos(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public static ToDos load(String taskDetails) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        String[] splitTaskDetails \u003d taskDetails.split(\"\\\\|\",3);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        for (int i \u003d 0; i \u003c splitTaskDetails.length; i++) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            splitTaskDetails[i] \u003d splitTaskDetails[i].strip();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        ToDos todo \u003d new ToDos(splitTaskDetails[2].strip());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        if (splitTaskDetails[1].equals(\"true\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "            todo.markAsDone();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        return todo;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public String saveAs() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        return \"T | \" + super.saveAs();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mhdsyfq": 32
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mhdsyfq"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "mhdsyfq": 2,
      "-": 32
    }
  }
]
