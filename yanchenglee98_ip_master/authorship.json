[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    implementation \u0027org.junit.jupiter:junit-jupiter:5.4.2\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    implementation \u0027junit:junit:4.12\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanchenglee98": 18,
      "-": 45
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "T | 1 | join sports club"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "E | 1 | meeting | 2020-08-22 14:00-16:00"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "D | 0 | return book | 2020-08-22"
      }
    ],
    "authorContributionMap": {
      "yanchenglee98": 3
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Deadline class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Represents a deadline task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Extends from Task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Contains deadline name and date."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * @author YanCheng"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Constructor for Deadline"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param taskName Name of Deadline"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param date Date of Deadline in format of \"YYYY-MM-DD\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @throws DukeException If date is not in the specified format"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public Deadline(String taskName, String date) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        // date format must be in YYYY-MM-DD e.g. 2020-08-22"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        super(taskName.stripTrailing());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            this.date \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            throw new DukeException(\"Date is in the wrong format\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Returns deadline information to be stored locally."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @return deadline information"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public String getInfo() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        return String.format(\"D | %d | %s | %s\\n\", isDone ? 1 : 0, taskName, date.toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        return \"[D]\" + super.toString()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                + \" (by: \""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanchenglee98": 50
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Class to represent Text Box in the Anchor pane GUI"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        displayPicture.setFitWidth(75.0);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        displayPicture.setFitHeight(75.0);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        this.setSpacing(10.0); // add padding between profile pic and text"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Returns a user Dialog Box"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param l Input from the user"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param iv Picture of the user"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @return Dialog box of user\u0027s input"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        db.setBackground(new Background(new BackgroundFill(Color.CYAN,null,null)));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Returns a Duke Dialog Box"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param l Input from Duke"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param iv Picture of Duke"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @return Dialog Box of duke\u0027s response"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        db.setBackground(new Background(new BackgroundFill(Color.DARKORANGE,null,null)));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanchenglee98": 69
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import javafx.scene.control.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import javafx.scene.layout.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Duke class."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Driver class for Duke with GUI."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Contains task list, storage, parser and ui."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * @author YanCheng"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public static TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public static Storage storage \u003d new Storage(taskList);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public static Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public static Ui ui \u003d new Ui(taskList, storage, parser);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    private Stage window;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    // output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    private TextArea outputTextArea \u003d new TextArea(\"Hello! I\u0027m Duke. \\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Starts Duke GUI"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param stage Window that is to be launched"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @throws Exception If any exception occurs during the process"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public void start(Stage stage) throws Exception {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        // stage is window"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        window \u003d stage;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        window.setTitle(\"Duke Chat-Bot\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        // read duke.txt file and initialise taskList"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            storage.init();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            outputTextArea.setText(e.getMessage());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        dialogContainer \u003d new VBox(20.0); // add padding of 20 pixels between dialog box"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        // main layout"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        // create new scene"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        });"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        });"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        // Start up message"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog("
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                new Label(\"Hello! I\u0027m Duke. \\nWhat can I do for you?\\n\" +"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                        \"Enter \u0027help\u0027 to see the list of commands\"), new ImageView(duke)));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        if (!input.isBlank()) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            Label userText \u003d new Label(input);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            Label dukeText \u003d new Label(getResponse(input));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            );"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Gets response from user"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param input Response from user"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @return Output from chat bot"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    private String getResponse(String input) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        return ui.readCommand(input);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanchenglee98": 160,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Thrown to indicate that an exception with Duke has occurred."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * @author YanCheng"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Constructor for DukeException."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param str Text to be displayed for the error"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public DukeException(String str) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        super(str);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanchenglee98": 17
    }
  },
  {
    "path": "src/main/java/duke/DukeMain.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * DukeMain class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Driver class for Duke but without GUI."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * It is for use with CLI."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Contains task list, storage, parser and UI."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * @author YanCheng"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "public class DukeMain {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public static TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public static Storage storage \u003d new Storage(taskList);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public static Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public static Ui ui \u003d new Ui(taskList, storage, parser);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Main method of Duke."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param args Unused."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        ui.echo();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        ui.exit();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanchenglee98": 33
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Event class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Represents a event task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Extends from Task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Contains event name, date, start time and end time."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * @author YanCheng"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    private LocalTime startTime;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    private LocalTime endTime;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Constructor for Event"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param taskName Name of Event"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param date Date of Event in format of \"YYYY-MM-DD\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @throws DukeException If date is not in the specified format"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public Event(String taskName, String date) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        // date format must be in YYYY-MM-DD e.g. 2020-08-22"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        // time format must by in XX:XX-YY:YY e.g. 14:00-16:00"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        super(taskName.stripTrailing());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        String[] arr \u003d date.split(\" \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        String eventDate \u003d arr[0];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        String[] eventTime \u003d arr[1].split(\"-\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        String eventStartTime \u003d eventTime[0];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        String eventEndTime \u003d eventTime[1];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            this.date \u003d LocalDate.parse(eventDate);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            this.startTime \u003d LocalTime.parse(eventStartTime);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            this.endTime \u003d LocalTime.parse(eventEndTime);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            throw new DukeException(\"Date and time is in the wrong format\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Return deadline information to be stored locally."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @return deadline information"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public String getInfo() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        return String.format(\"E | %d | %s | %s %s-%s\\n\", isDone ? 1 : 0,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                taskName, date.toString(), startTime.toString(), endTime.toString());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        return \"[E]\" + super.toString()"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                + \" (at: \""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                + \" \" + startTime + \" - \" + endTime + \")\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanchenglee98": 64
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Launcher class"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Launches the GUI for the Duke chat-bot"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Main method to launch the GUI"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param args unused"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanchenglee98": 18
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Parser class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Parses commands input by user."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Contains task list and storage."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * @author YanCheng"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Handles an event input."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param input Input from user"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @return Event task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @throws DukeException If description or date is missing"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    // dates must be in this format YYYY-MM-DD"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    // example of event: event meeting /at 2020-08-22 14:00-16:00"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public Event handleEvent(String input) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        // since input is confirmed to have \"event\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        // just need to ensure that stripped input \u003e 5 letters"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        // input needs to be stripped to prevent trailing whitespaces eg. \"deadline    \""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        if (input.strip().length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a Event cannot be empty.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        } else if (!input.contains(\"/\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            throw new DukeException(\"OOPS!!! Event requires a date.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            //String taskType \u003d input.substring(0, input.indexOf(\" \"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            String taskName \u003d input.substring(input.indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            String[] arr \u003d taskName.split(\"/\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            Event task \u003d new Event(arr[0], arr[1].substring(arr[1].indexOf(\" \") + 1));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Handles a deadline input."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param input Input from user"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @return Deadline task"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @throws DukeException If description or date is missing"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    // example of deadline: deadline return book /by 2020-08-22"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public Deadline handleDeadline(String input) throws DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        // since input is confirmed to have \"deadline\","
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        // just need to ensure that stripped input \u003e 8 letters"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        // input needs to be stripped to prevent trailing whitespaces eg. \"deadline    \""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        if (input.strip().length() \u003c\u003d 8) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        } else if (!input.contains(\"/\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            throw new DukeException(\"OOPS!!! Deadline requires a date.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            //String taskType \u003d input.substring(0, input.indexOf(\" \"));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            String taskName \u003d input.substring(input.indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            String[] arr \u003d taskName.split(\"/\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            Deadline task \u003d new Deadline(arr[0], arr[1].substring(arr[1].indexOf(\" \") + 1));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Handles a to do input."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param input Input from user"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @return To Do task"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @throws DukeException If description is missing"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    // example of To do: to do return book"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public ToDo handleToDo(String input) throws DukeException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        // since input is confirmed to have \"to do\","
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        // just need to ensure that stripped input \u003e 4 letters"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        // input needs to be stripped to prevent trailing whitespaces eg. \"deadline    \""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        if (input.strip().length() \u003c\u003d 4) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            //String taskType \u003d input.substring(0, input.indexOf(\" \"));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            String taskName \u003d input.substring(input.indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            ToDo task \u003d new ToDo(taskName);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanchenglee98": 82
    }
  },
  {
    "path": "src/main/java/duke/PopUpBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Pop up box class for use for Duke GUI"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * @author YanCheng"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "public class PopUpBox {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Displays a pop up box with the specified message"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param title Title of the window"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param message Message to be displayed in the window"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public static void display(String title, String message) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        Stage window \u003d new Stage();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        window.setTitle(title);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        Label label \u003d new Label();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        label.setText(message);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        VBox layout \u003d new VBox(10);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        layout.getChildren().add(label);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        layout.setAlignment(Pos.CENTER);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        Scene scene \u003d new Scene(layout, 400, 200);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        window.setScene(scene);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        window.show();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanchenglee98": 37
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Storage class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Reads and write files to the hard drive whenever the task list is edited."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Reads and writes to ./data/duke.txt."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Contains task list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * @author YanCheng"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public static final String FILENAME \u003d \"./data/duke.txt\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public static final String DIRECTORY_NAME \u003d \"./data/\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    private TaskList list;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Constructor for Storage."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param list A TaskList object"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public Storage(TaskList list) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    //    // appends task info to existing duke.txt file"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    //    // only can be used by add method"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    //    public static void save(Task task) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    //        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    //            FileWriter fw \u003d new FileWriter(FILENAME, true);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    //            // true to mark fw to append line to existing file"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    //            fw.write(task.getInfo());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    //            fw.close();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    //        } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    //            System.out.println(\"File is missing\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    //        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    //    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Rewrites duke.txt file to the hard drive."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @throws DukeException If file is missing or cannot be created"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    // rewrites duke.txt file by iterating though task list"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    // can be used by add, delete and done method"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public void save() throws DukeException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            FileWriter fw \u003d new FileWriter(FILENAME);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            if (list.size() \u003e 0) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                fw.write(list.get(0).getInfo());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                for (int i \u003d 1; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    fw.write(list.get(i).getInfo());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            throw new DukeException(\"File is missing\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Initialises the TaskList if there is an existing duke.txt."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @throws DukeException If file is missing"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public void init() throws DukeException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        File directory \u003d new File(DIRECTORY_NAME);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        // checks if directory exists, else directory will be created"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        if (!directory.exists()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            directory.mkdir();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        File f \u003d new File(FILENAME);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        if (f.exists()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                while (sc.hasNext()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    String[] split \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    if (split.length \u003c 3) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                        // if after split, arr contains insufficient info, skip;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    String taskType \u003d split[0];"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    String status \u003d split[1].strip();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    String details \u003d split[2].stripLeading();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    if (taskType.contains(\"T\")) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                        ToDo task \u003d new ToDo(details);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                        if (status.equals(\"1\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                            task.completed();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                        list.initAdd(task);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    } else if (taskType.contains(\"D\")) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                        String date \u003d split[3].stripLeading();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                        Deadline task \u003d new Deadline(details, date);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                        if (status.equals(\"1\")) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                            task.completed();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                        list.initAdd(task);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    } else if (taskType.contains(\"E\")) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                        String date \u003d split[3].stripLeading();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                        Event task \u003d new Event(details, date);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                        if (status.equals(\"1\")) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                            task.completed();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                        list.initAdd(task);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                sc.close();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                throw new DukeException(\"File not found\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                f.createNewFile();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                throw new DukeException(\"File not found\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanchenglee98": 128
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Abstract class to represent a task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Contains task name and completed status."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * @author YanCheng"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    protected String taskName;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Constructor for Task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param taskName Name of task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public Task(String taskName) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Marks the task as completed."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public void completed() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Return information of the task to be stored locally."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @return Task information"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public abstract String getInfo();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        return String.format(\"[%s] %s\", isDone ? \"\\u2713\" : \"\\u2718\", taskName);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanchenglee98": 40
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * TaskList class."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Stores Task objects in an ArrayList."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Contains an array list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * @author YanCheng"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    private ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Constructor for TaskList."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Adds task to the list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Also prints out remaining tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param task Task to be added to task list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @return String that is to be output"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public String add(Task task) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        // output.append(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        output.append(\"Got it. I\u0027ve added this task:\\n\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        output.append(String.format(\"%s\\n\", task));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        output.append(String.format(\"Now you have %d tasks in the list.\\n\", list.size()));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        // output.append(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Add method for use during Storage initialisation."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * No output will be printed out."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param task Task to be added to task list"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    // initAdd method for adding task to list during initialisation"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public void initAdd(Task task) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Lists out all task currently in the list."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @return String that is to be output"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public String listOut() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        // output.append(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        output.append(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            output.append(String.format(\"%d. %s \\n\", i + 1, list.get(i)));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        // output.append(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Deletes the task specified by the number."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param input Number of task"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @return String that is to be output"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @throws DukeException If number is not entered"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public String delete(String input) throws DukeException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        if (!input.contains(\" \")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            throw new DukeException(\"OOPS!!! Please enter delete with a number.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            String[] arr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            int index;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                index \u003d Integer.parseInt(arr[1]);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                throw new DukeException(\"OOPS!!! Invalid number.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            if (index \u003e list.size()) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                throw new DukeException(\"OOPS!!! Invalid number.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            Task task \u003d list.get(index - 1);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            list.remove(index - 1);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            // output.append(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            output.append(\"Noted. I\u0027ve removed this task:\\n\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            output.append(String.format(\"%s\\n\", task));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            output.append(String.format(\"Now you have %d tasks in the list.\\n\", list.size()));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            // output.append(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            return output.toString();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Marks the specified task as completed in the list."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param input Number of task"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @return String that is to be output"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @throws DukeException If number is not entered"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public String done(String input) throws DukeException {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        if (!input.contains(\" \")) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            throw new DukeException(\"OOPS!!! Please enter done with a number.\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            String[] arr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            int index;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                // if string after done cannot be parsed to integer"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                index \u003d Integer.parseInt(arr[1]);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                throw new DukeException(\"OOPS!!! Invalid number.\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            if (index \u003e list.size()) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                throw new DukeException(\"OOPS!!! Invalid number.\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            Task task \u003d list.get(index - 1);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            task.completed();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            // output.append(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            output.append(\"Nice! I\u0027ve marked this task as done:\\n\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            output.append(String.format(\"%s\\n\", task));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            // output.append(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            return output.toString();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Returns task that contains the keyword"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param input Keyword"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @return String to be output"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public String find(String input) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        String[] arr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        String keyWord \u003d arr[1];"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        ArrayList\u003cTask\u003e hits \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        for (Task task: list) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            if (task.getInfo().contains(keyWord)) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                hits.add(task);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        // output.append(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        output.append(\"Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        for (int i \u003d 0; i \u003c hits.size(); i++) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            output.append(String.format(\"%d. %s \\n\", i + 1, hits.get(i)));"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        // output.append(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Returns the current size of the Task List."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @return return size of task list"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Returns the task specified."
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param i The number of task"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @return The task specified"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public Task get(int i) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        return list.get(i);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanchenglee98": 183
    }
  },
  {
    "path": "src/main/java/duke/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * To Do class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Represents a to do task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Extends from Task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Contains to do name."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * @author YanCheng"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Constructor for To Do."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param toDoName name of deadline"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public ToDo(String toDoName) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        super(toDoName);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Returns to do information to be stored locally."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @return to do information"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public String getInfo() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        return String.format(\"T | %d | %s\\n\", isDone ? 1 : 0, taskName);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanchenglee98": 35
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * UI class."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Handles input from user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * Contains task list, storage and parser."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " * @author YanCheng"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    private final String HELP_TEXT \u003d \"Duke Bot Commands:\\n\" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            \"list : list out all current tasks\\n\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            \"find \u003ckeyword\u003e : find all task that corresponds to the keyword\\n\" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            \"done \u003ctask number\u003e : marks the specified task as done\\n\" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            \"delete \u003ctask number\u003e : deletes the specified task\\n\" +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            \"todo \u003ctask name\u003e : adds a ToDo task\\n\" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            \"deadline \u003ctask name\u003e /by YYYY-MM-DD : adds a Deadline task\\n\" +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            \"event \u003ctask name\u003e /at YYYY-MM-DD TT:TT-TT:TT : adds an Event task\\n\" +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            \"Do note that Date and Time must have the specified format\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Constructor for Ui class."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param taskList A TaskList object"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param storage A Storage object"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param parser A Parser object"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public Ui(TaskList taskList, Storage storage, Parser parser) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        this.parser \u003d parser;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Prompts user for input and delegates input to Parser."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * For use with CLI."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public void echo() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        // read duke.txt file and initialise taskList"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            storage.init();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                System.out.println(taskList.listOut());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            } else if (input.contains(\"find\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                System.out.println(taskList.find(input));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            } else if (input.contains(\"done\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    System.out.println(taskList.done(input));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    storage.save();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    System.out.println(\"     \" + e.getMessage());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    System.out.println();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            } else if (input.contains(\"delete\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    System.out.println(taskList.delete(input));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    storage.save();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    System.out.println(\"     \" + e.getMessage());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    System.out.println();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    Task task;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    if (input.contains(\"todo\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                        task \u003d parser.handleToDo(input);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    } else if (input.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                        task \u003d parser.handleDeadline(input);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    } else if (input.contains(\"event\")) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                        task \u003d parser.handleEvent(input);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    System.out.println(taskList.add(task));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    storage.save();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    System.out.println(\"     \" + e.getMessage());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    System.out.println();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Reads input from the user through the GUI and parses the input."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * For use with Duke GUI."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @param input User input"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * @return Output to be displayed to user"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public String readCommand(String input) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            return \"Have a nice day! :-)\";"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            return taskList.listOut();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        } else if (input.equals(\"help\")) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            PopUpBox.display(\"Help menu\", HELP_TEXT);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            return \"Here is the list of commands:\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        } else if (input.contains(\"find\")) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            return taskList.find(input);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        } else if (input.contains(\"done\")) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                String output \u003d taskList.done(input);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                storage.save();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                return output;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                return e.getMessage();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        } else if (input.contains(\"delete\")) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                String output \u003d taskList.delete(input);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                storage.save();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                return output;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                return e.getMessage();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                if (input.contains(\"todo\")) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    task \u003d parser.handleToDo(input);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                } else if (input.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    task \u003d parser.handleDeadline(input);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                } else if (input.contains(\"event\")) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    task \u003d parser.handleEvent(input);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                    throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                String output \u003d taskList.add(task);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                storage.save();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                return output;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "                return e.getMessage();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Greeting used by Duke."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        System.out.println(\"     Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        System.out.println(\"     What can I do for you?\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     * Farewell used by Duke."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        System.out.println(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanchenglee98": 184
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    // to test correctness of task output"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public void TodoTest() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        ToDo todo \u003d new ToDo(\"return book\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        Assertions.assertEquals(todo.toString(), \"[T][\\u2718] return book\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public void deadlineTest() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        Deadline deadline \u003d null;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            deadline \u003d new Deadline(\"return book\", \"2020-08-22\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            Assertions.assertEquals(deadline.toString(), \"[D][\\u2718] return book (by: Aug 22 2020)\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    public void eventTest() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        Event event \u003d null;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            event \u003d new Event(\"return book\", \"2020-08-22 14:00-16:00\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            Assertions.assertEquals(event.toString(), \"[E][\\u2718] return book (at: Aug 22 2020 14:00 - 16:00)\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yanchenglee98": 42
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "yanchenglee98": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "    pause"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "cmd /k"
      }
    ],
    "authorContributionMap": {
      "yanchenglee98": 4,
      "-": 20
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yanchenglee98"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "yanchenglee98": 2,
      "-": 32
    }
  }
]
