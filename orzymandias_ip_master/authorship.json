[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return String.format(\"[D]\" + super.toString() + \" (by: %s)\", by);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    // Collection of user\u0027s tasks"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    static List\u003cTask\u003e taskItems \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Sends a greeting to user and indicates the INTRUBOT is active."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    static void start() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        String logo \u003d"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                \"8888888 888b    888 88888888888 8888888b.  888     888 888888b.    .d88888b. 88888888888 \\n\" +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                        \"  888   8888b   888     888     888   Y88b 888     888 888  \\\"88b  d88P\\\" \\\"Y88b    888     \\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                        \"  888   88888b  888     888     888    888 888     888 888  .88P  888     888    888     \\n\" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                        \"  888   888Y88b 888     888     888   d88P 888     888 8888888K.  888     888    888     \\n\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                        \"  888   888 Y88b888     888     8888888P\\\"  888     888 888  \\\"Y88b 888     888    888     \\n\" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                        \"  888   888  Y88888     888     888 T88b   888     888 888    888 888     888    888     \\n\" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                        \"  888   888   Y8888     888     888  T88b  Y88b. .d88P 888   d88P Y88b. .d88P    888     \\n\" +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                        \"8888888 888    Y888     888     888   T88b  \\\"Y88888P\\\"  8888888P\\\"   \\\"Y88888P\\\"     888\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        printReply(replyFormatter(\"ITS ME: \\n\" + logo + \"\\nI want to know EVERYTHING ABOUT YOU\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    // EventHandlers"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    static void handleDone(String reply) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            int itemNumber \u003d Integer.parseInt(reply.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            Task task \u003d taskItems.get(itemNumber);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            task.markDone();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            printReply(replyFormatter(\"Nice! I\u0027ve marked this task as done:\\n\" + task.toString()));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            throw new DukeException(\"Task number does not exist\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    static void handleDelete(String reply) throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            int itemNumber \u003d Integer.parseInt(reply.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            Task task \u003d taskItems.remove(itemNumber);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            printReply(deleteTaskReplyFormatter(task));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            throw new DukeException(\"Cannot delete task that does not exist\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Parses user input and carry out operations on user\u0027s tasks"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    static void replyHandler(String reply) throws DukeException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            String[] replyArray \u003d reply.split(\" \");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            String command \u003d replyArray[0];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                printReply(replyFormatter(reply));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                System.exit(0);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                printReply(replyFormatter(listFormatter(taskItems)));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    switch (command) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                        case \"done\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                            handleDone(reply);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                        case \"delete\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                            handleDelete(reply);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                        case \"todo\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                            Task newTodo \u003d new ToDo(reply.substring(5));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                            taskItems.add(newTodo);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                            printReply(addTaskReplyFormatter(newTodo));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                        case \"deadline\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                            String[] taskAndTimeByArray \u003d reply.split(\" /by \");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                            String deadlineDescription \u003d taskAndTimeByArray[0].substring(9);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                            String by \u003d taskAndTimeByArray[1];"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                            Task newDeadline \u003d new Deadline(deadlineDescription, by);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                            taskItems.add(newDeadline);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                            printReply(addTaskReplyFormatter(newDeadline));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                        case \"event\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                            String[] taskAndTimeAtArray \u003d reply.split(\" /at \");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                            String eventDescription \u003d taskAndTimeAtArray[0].substring(6);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                            String at \u003d taskAndTimeAtArray[1];"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                            Task newEvent \u003d new Event(eventDescription, at);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                            taskItems.add(newEvent);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                            printReply(addTaskReplyFormatter(newEvent));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                        default:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                            throw new DukeException(\"Invalid Command Exception\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    throw new DukeException(String.format(\"No arguments specified for %s\", command));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    // Formatting and UI"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    static String replyFormatter(String reply) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        String partition \u003d \"__________________________\";"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return String.format(partition + \"\\n%s\\n\" + partition, reply);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    static void errorReply(String reply) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        System.out.println(replyFormatter(String.format(\"Something is amiss `(OCO)/ !!: %s\", reply)));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    static String addTaskReplyFormatter(Task task) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return replyFormatter(String.format(\"Got it. I\u0027ve added this task:\\n    %s\\nNow you have %d tasks in the list\""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                , task.toString(), taskItems.size()));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    static String deleteTaskReplyFormatter(Task task) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return replyFormatter(String.format(\"HAI. I\u0027ve deleted this task:\\n    %s\\nNow you have %d tasks in the list\""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                , task.toString(), taskItems.size()));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    static String listFormatter(List\u003cTask\u003e ls) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        String formattedListString \u003d \"\";"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        for (int i \u003d 0; i \u003c ls.size(); i ++) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            formattedListString+\u003d String.format(\"%d. %s\\n\", i + 1, ls.get(i));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return formattedListString;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    static void printReply(String reply) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        System.out.println(reply);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * main driver function"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        start();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        while(sc.hasNextLine()) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            String reply \u003d sc.nextLine();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                replyHandler(reply);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            } catch (DukeException duked) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                errorReply(duked.getMessage());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 145,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            return String.format(\"[E]\" + super.toString() + \" (at: %s)\", at);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "orzymandias": 23
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 9
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "sayonara"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "event"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 13
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 2,
      "-": 20
    }
  }
]
