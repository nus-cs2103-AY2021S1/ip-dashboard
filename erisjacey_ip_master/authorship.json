[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 45,
      "erisjacey": 1
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " * Represents the chat bot itself. Main class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param filePath A string representing the destination file path."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            ui.printGeneralChatWindow(e.toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Runs the program. Main method."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Starts the chat bot, continuously takes in user input and executes the relevant command."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        // Initial greeting, prompt user for commands"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        ui.printWelcome();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                String input \u003d ui.readInput();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                ui.printBorder(); // Print top border"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                ui.printGeneralChatWindow(e.toString());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                ui.printBorder(); // Print bottom border"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        ui.printLogo();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erisjacey": 57,
      "-": 7
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.command.AddTaskCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.command.ClearCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.command.HelpCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.command.UnknownCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " * Deals with making sense of the user command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Parses the user input and returns a corresponding command to be executed."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param input A string representing the user input."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @return A command to be executed."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public static Command parse(String input) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        // Tag refers to the command to perform"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        String tag \u003d input.split(\" \")[0];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        switch (tag) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        case \"help\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            return new DoneCommand(input);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            return new DeleteCommand(input);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        case \"clear\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            return new ClearCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            return new AddTaskCommand(\"todo\", input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            return new AddTaskCommand(\"event\", input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            return new AddTaskCommand(\"deadline\", input);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            return new FindCommand(input);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            return new UnknownCommand();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erisjacey": 63
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.exception.DukeFileNotFoundException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.exception.DukeLoadingErrorException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.task.TaskType;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " * Deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    private final Path path;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param filePath A string representing the file path."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @throws DukeLoadingErrorException If a loading error occurs."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public Storage(String filePath) throws DukeLoadingErrorException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            String home \u003d System.getProperty(\"user.home\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            path \u003d Paths.get(home, filePath);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            // If path doesn\u0027t exist, create one"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            if (Files.notExists(path)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                File newDir \u003d new File(String.valueOf(path));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                String[] toCreate \u003d filePath.split(\"/\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                // Create folders for each directory specified in the filePath"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                for (int i \u003d 0; i \u003c toCreate.length - 1; i++) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                    String dir \u003d toCreate[i];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                    Path miniPath \u003d Paths.get(home, dir);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                    File miniDir \u003d new File(String.valueOf(miniPath));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                    miniDir.mkdir();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                newDir.createNewFile();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            throw new DukeLoadingErrorException();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Saves the task list in a dedicated destination file."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param tasks The task list to be saved."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @throws DukeLoadingErrorException If a loading error occurs."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public void save(List\u003cTask\u003e tasks) throws DukeLoadingErrorException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            FileWriter fw \u003d new FileWriter(String.valueOf(path));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                String toSave \u003d \"\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                String description \u003d task.getDescription();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                int isDone \u003d task.isDone() ? 1 : 0;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                TaskType type \u003d task.getTaskType();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                switch (type) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                case TODO:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                    toSave +\u003d String.format(\"%s\\t%d\\t%s\","
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                            type, isDone, description);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                case EVENT:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                case DEADLINE:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                    toSave +\u003d String.format(\"%s\\t%d\\t%s\\t%s\","
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                            type, isDone, description, task.getTime());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                fw.write(String.format(\"%s\\n\", toSave));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            throw new DukeLoadingErrorException();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Loads the task list saved in the file."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @return The task list that has been loaded."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @throws DukeFileNotFoundException If the file does not exist."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public List\u003cTask\u003e load() throws DukeFileNotFoundException {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        Scanner sc;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            sc \u003d new Scanner(path.toFile());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            throw new DukeFileNotFoundException();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        Task task \u003d null;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        boolean isDone;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        String time \u003d null;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            String[] parsed \u003d sc.nextLine().split(\"\\t\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            description \u003d parsed[2];"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            isDone \u003d Integer.parseInt(parsed[1]) \u003d\u003d 1;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            if (parsed.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                time \u003d parsed[3];"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            switch (parsed[0]) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                task \u003d new ToDo(description, isDone);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                task \u003d new Event(description, isDone, time);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                task \u003d new Deadline(description, isDone, time);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erisjacey": 150
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.exception.DukeInvalidDeadlineTimeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.exception.DukeInvalidEventTimeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.exception.DukeInvalidKeywordException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.exception.DukeInvalidListNumberInputException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.exception.DukeInvalidTaskDescriptionException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.exception.DukeInvalidTaskTimeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " * Contains the task list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " * Also handles any operation that deals with this list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " * (for example: \u003ccode\u003eaddTask\u003c/code\u003e, \u003ccode\u003edeleteTask\u003c/code\u003e)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    private final List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Class connstructor with a pre-loaded list of tasks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param tasks The task list to be loaded."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Class constructor with an empty starting task list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * A getter method that returns the list of tasks."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @return The list of tasks."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Returns the number of tasks in the task list."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @return The size of the task list."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public int getTasksSize() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Marks a task as complete according to the string input."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param input A string input representing the specific task to complete."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @return The task that has been completed itself."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @throws DukeInvalidListNumberInputException If the task number provided is invalid."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public Task completeTask(String input) throws DukeInvalidListNumberInputException {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        // Obtain index within list of tasks"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        int index \u003d Integer.parseInt(input.substring(5)) - 1;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            Task task \u003d tasks.get(index);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            throw new DukeInvalidListNumberInputException();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Deletes a task according to the string input."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param input A string input representing the specific task to delete."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @return The task that has been deleted itself."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @throws DukeInvalidListNumberInputException If the task number provided is invalid."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public Task deleteTask(String input) throws DukeInvalidListNumberInputException {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        // Obtain index within list of tasks"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        int index \u003d Integer.parseInt(input.substring(7)) - 1;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            Task task \u003d tasks.get(index);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            tasks.remove(index);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            throw new DukeInvalidListNumberInputException();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Clears all tasks in the task list."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public void clearTasks() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        tasks.clear();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Adds a task to the pre-existing list of tasks according to the string input."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param tag   A string with a specific tag. (\u003ccode\u003etodo\u003c/code\u003e,"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *              \u003ccode\u003eevent\u003c/code\u003e and \u003ccode\u003edeadline\u003c/code\u003e)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param input A string input representing the specific task to add."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @return The task that has been added itself."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @throws DukeInvalidTaskDescriptionException If the task description is empty."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @throws DukeInvalidTaskTimeException If the task time details are invalid."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public Task addTask(String tag, String input)"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            throws DukeInvalidTaskDescriptionException, DukeInvalidTaskTimeException {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        Task toAdd \u003d null;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            switch (tag) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                toAdd \u003d addToDo(input);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                toAdd \u003d addEvent(input);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                toAdd \u003d addDeadline(input);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            throw new DukeInvalidTaskDescriptionException();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            throw new DukeInvalidTaskTimeException();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        return toAdd;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Adds a todo to the list of tasks."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param input A string representing the todo to be added."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @return The todo that has been added itself."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    private Task addToDo(String input) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        String toDoText \u003d input.substring(5);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        ToDo toDo \u003d new ToDo(toDoText);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        tasks.add(toDo);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        return toDo;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Finds all the tasks which match the keyword in the user input."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param input A string representing the user input."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @return The list of tasks which match the keyword in the user input."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @throws DukeInvalidKeywordException If the keyword input is invalid or empty."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public List\u003cTask\u003e findTasks(String input) throws DukeInvalidKeywordException {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        String keyword;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            keyword \u003d input.substring(5);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            throw new DukeInvalidKeywordException();"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        List\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            if (task.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                result.add(task);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Adds an event to the list of tasks."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param input A string representing the event to be added."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @return The event that has been added itself."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @throws DukeInvalidEventTimeException If the event time details are invalid."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    private Task addEvent(String input) throws DukeInvalidEventTimeException {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        String[] eventText \u003d input.substring(6).split(\" /at \");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        String eventDescription \u003d eventText[0];"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        if (eventText.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            throw new DukeInvalidEventTimeException();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        String eventAt \u003d eventText[1];"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        Event event \u003d new Event(eventDescription, eventAt);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        tasks.add(event);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        return event;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Adds a deadline to the list of tasks."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param input A string representing the deadline to be added."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @return The deadline that has been added itself."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @throws DukeInvalidDeadlineTimeException If the deadline time details are invalid."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    private Task addDeadline(String input) throws DukeInvalidDeadlineTimeException {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        String[] deadlineText \u003d input.substring(9).split(\" /by \");"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        String deadlineDescription \u003d deadlineText[0];"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        if (deadlineText.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            throw new DukeInvalidDeadlineTimeException();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        String deadlineBy \u003d deadlineText[1];"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        Deadline deadline \u003d new Deadline(deadlineDescription, deadlineBy);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        tasks.add(deadline);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        return deadline;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erisjacey": 225
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " * Deals with interactions with the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " * Also prints the relevant responses and messages."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    private static final String logo \u003d \"     ___   ____    __    ____  _______     _______.\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            + \"  ______   .___  ___.  _______          ______\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            + \"    /   \\\\  \\\\   \\\\  /  \\\\  /   / |   ____| \""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            + \"/       | /  __  \\\\  |   \\\\/   | |   ____|        /  __  \\\\\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            + \"   /  ^  \\\\  \\\\   \\\\/    \\\\/   /  |  |__    \""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            + \"|   (----`|  |  |  | |  \\\\  /  | |  |__    ______|  |  |  |\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            + \"  /  /_\\\\  \\\\  \\\\            /   |   __|    \""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            + \"\\\\   \\\\    |  |  |  | |  |\\\\/|  | |   __|  |______|  |  |  |\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            + \" /  _____  \\\\  \\\\    /\\\\    /    |  |____.--\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            + \"--)   |   |  `--\u0027  | |  |  |  | |  |____        |  `--\u0027  |\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            + \"/__/     \\\\__\\\\  \\\\__/  \\\\__/     |_______|_\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            + \"______/     \\\\______/  |__|  |__| |_______|        \\\\______/\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String indent \u003d \"    \";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final String doubleIndent \u003d indent + indent;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    private static final String border \u003d \"_________________________________________________________\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    private static Scanner scanner;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Prompts the user for commands. Initial greeting."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public void printWelcome() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        printLogo();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        printGeneralChatWindow(\"Greetings! I\u0027m Awesome-O.\", \"What can I do for you?\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        printGeneralChatWindow(\"\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        printGeneralChatWindow(\"...PSST! Type \\\"help\\\" for more information!\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        printBorder();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Reads the user input."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @return A string representing the user input."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public String readInput() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Prints a chat window showing the list of available commands for the user input."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param commands A collection of commands whose description is to be printed."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public void printHelpWindow(String[] commands) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        printGeneralChatWindow(commands);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Prints a chat window showing the list of tasks."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param tasks The list of tasks to be printed."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public void printTasksChatWindow(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        printIndentedMessage(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            printIndentedMessage(\"No tasks currently\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            int index \u003d 0;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                System.out.printf(\"%s%d. %s\\n\", indent, ++index, task);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Prints a chat window that describes the task that is done."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param task The task to be displayed as done."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public void printDoneTaskChatWindow(Task task) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        printIndentedMessage(\"Great! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        printDoubleIndentedMessage(task.toString());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Prints a chat window that describes the task that is deleted."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param task            The task to be displayed as deleted."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param numOfTotalTasks The number of tasks in the list."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public void printDeleteTaskChatWindow(Task task, int numOfTotalTasks) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        printIndentedMessage(\"Okay. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        printDoubleIndentedMessage(task.toString());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        printNumberOfTasks(numOfTotalTasks);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Prints a chat window that informs the user that all tasks have been cleared."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public void printClearTasksWindow() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        printIndentedMessage(\"All tasks have been cleared!\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Prints a chat window with a customised description that the task has been added."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param task            The task to be displayed as added."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param numOfTotalTasks The number of tasks in the list."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public void printAddTaskChatWindow(Task task, int numOfTotalTasks) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        printIndentedMessage(\"Alright. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        printDoubleIndentedMessage(task.toString());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        printNumberOfTasks(numOfTotalTasks);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Prints a chat window with a list of tasks matching the user input\u0027s keyword."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param tasks The list of matching tasks."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public void printFindTaskChatWindow(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        printIndentedMessage(\"Here are the tasks that match the keyword:\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            printIndentedMessage(\"No matching tasks!\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            int index \u003d 0;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                System.out.printf(\"%s%d. %s\\n\", indent, ++index, task);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Prints a goodbye chat window."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public void printGoodbye() {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        printGeneralChatWindow(\"Thank you for talking to Awesome-O.\", \"Have a nice day. Goodbye!\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Prints an indented chat window with a customised message."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param messages A series of strings representing the customised message."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public void printGeneralChatWindow(String... messages) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        for (String message : messages) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            printIndentedMessage(message);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Prints a border for the chat window."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public void printBorder() {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        System.out.printf(\"%s%s\\n\", indent, border);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Prints the Duke logo (\"AWESOME-O\")."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public void printLogo() {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    // Prints an indented generic message"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    private void printIndentedMessage(String s) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        System.out.printf(\"%s%s\\n\", indent, s);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    // Prints a double-indented generic message"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    private void printDoubleIndentedMessage(String s) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        System.out.printf(\"%s%s\\n\", doubleIndent, s);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    // Prints the number of tasks left in the list"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    private void printNumberOfTasks(int n) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        System.out.printf(\"%sNow you have %d tasks in the list.\\n\", indent, n);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erisjacey": 169,
      "-": 23
    }
  },
  {
    "path": "src/main/java/duke/command/AddTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.exception.DukeInvalidTaskDescriptionException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.exception.DukeInvalidTaskTimeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.exception.DukeLoadingErrorException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " * Represents a command to add a task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "public class AddTaskCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param tag   A string representing the tag of the command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param input A string representing the user input."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public AddTaskCommand(String tag, String input) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        super(tag, input);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            throws DukeInvalidTaskTimeException,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            DukeInvalidTaskDescriptionException,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            DukeLoadingErrorException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        Task toAdd \u003d tasks.addTask(tag, input);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        ui.printAddTaskChatWindow(toAdd, tasks.getTasks().size());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        storage.save(tasks.getTasks());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erisjacey": 38
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " * Represents a command to exit the chat bot."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public ByeCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        super(\"bye\", true);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        ui.printGoodbye();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erisjacey": 24
    }
  },
  {
    "path": "src/main/java/duke/command/ClearCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.exception.DukeLoadingErrorException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " * Represents a command to clear the task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "public class ClearCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public ClearCommand() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        super(\"clear\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeLoadingErrorException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        tasks.clearTasks();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        ui.printClearTasksWindow();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        storage.save(tasks.getTasks());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erisjacey": 28
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.exception.DukeInvalidKeywordException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.exception.DukeInvalidListNumberInputException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.exception.DukeInvalidTaskDescriptionException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.exception.DukeInvalidTaskTimeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.exception.DukeLoadingErrorException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.exception.DukeUnknownInputException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " * Represents an action to be taken depending on the \u003ccode\u003etag\u003c/code\u003e and \u003ccode\u003einput\u003c/code\u003e."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    protected String tag;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    protected String input;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Class constructor with no additional inputs necessary."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param tag A string representing the tag of the command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public Command(String tag) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        this.tag \u003d tag;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        this.input \u003d \"\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Class constructor with the additional user input."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param tag   A string representing the tag of the command."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param input A string representing the user input."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public Command(String tag, String input) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        this.tag \u003d tag;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Class constructor for a command to exit the chat bot."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param tag    A string representing the tag of the command."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param isExit \u003ccode\u003etrue\u003c/code\u003e if the command signals exiting the chat bot;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *               \u003ccode\u003efalse\u003c/code\u003e otherwise."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public Command(String tag, boolean isExit) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        this.tag \u003d tag;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        this.input \u003d \"\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        this.isExit \u003d isExit;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Signals whether or not to exit the chat bot."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if the command signals exiting the chat bot;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *         \u003ccode\u003efalse\u003c/code\u003e otherwise."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Performs the appropriate command depending on its type."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param tasks   The list of tasks."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param ui      The platform through which both user and chat bot interact."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param storage The object responsible for saving and loading data."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @throws DukeInvalidListNumberInputException If an invalid list number is given."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @throws DukeInvalidTaskTimeException        If an invalid task time is given."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @throws DukeInvalidTaskDescriptionException If an invalid task description is given."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @throws DukeUnknownInputException           If the user input cannot be understood."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @throws DukeLoadingErrorException           If the file containing the save data cannot be loaded."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @throws DukeInvalidKeywordException         If the user input contains an invalid keyword."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            throws DukeInvalidListNumberInputException, DukeInvalidTaskTimeException,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            DukeInvalidTaskDescriptionException, DukeUnknownInputException,"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            DukeLoadingErrorException, DukeInvalidKeywordException;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erisjacey": 87
    }
  },
  {
    "path": "src/main/java/duke/command/CommandType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " * Represents the different types of commands the user input can have."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "public enum CommandType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Represents a help command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    HELP {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            return \"- Help: Provides a list of possible commands\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                    + \"        \\\"help\\\"\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    },"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Represents a list command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    LIST {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            return \"- List: Shows the list of tasks\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                    + \"        \\\"list\\\"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    },"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Represents a done command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    DONE {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            return \"- Done: Marks a task as complete\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                    + \"        \\\"done \u003ctask number\u003e\\\"\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    },"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Represents a delete command."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    DELETE {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            return \"- Delete: Deletes a task from the list\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                    + \"        \\\"delete \u003ctask number\u003e\\\"\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    },"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Represents a clear command."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    CLEAR {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            return \"- Clear: Deletes ALL tasks from the list\\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                    + \"        \\\"clear\\\"\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    },"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Represents a todo command."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    TODO {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            return \"- Todo: Creates a todo task with specific description\\n\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                    + \"        \\\"todo \u003cdescription\u003e\\\"\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    },"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Represents an event command."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    EVENT {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            return \"- Event: Creates an event task with specific description and date/time\\n\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                    + \"        \\\"event \u003cdescription\u003e /at \u003ctime\u003e\\\"\\n\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                    + \"        Time formatting: dd-MM-yyyy HH:mm\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    },"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Represents a deadline command."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    DEADLINE {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            return \"- Deadline: Creates a deadline task with specific description and date/time\\n\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                    + \"        \\\"deadline \u003cdescription\u003e /by \u003ctime\u003e\\\"\\n\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                    + \"        Time formatting: dd-MM-yyyy HH:mm\";"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    },"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Represents a find command."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    FIND {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            return \"- Find: Searches for task(s) which match the given keyword(s)\\n\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                    + \"        \\\"find \u003ckeyword(s)\u003e\\\"\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    },"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Represents a bye command."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    BYE {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            return \"- Bye: Ends the conversation with Awesome-O\\n\""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                    + \"        \\\"bye\\\"\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erisjacey": 111
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.exception.DukeInvalidListNumberInputException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.exception.DukeLoadingErrorException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " * Represents a command to delete a task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param input A string representing the user input."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public DeleteCommand(String input) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        super(\"delete\", input);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            throws DukeInvalidListNumberInputException, DukeLoadingErrorException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        ui.printDeleteTaskChatWindow(tasks.deleteTask(input), tasks.getTasksSize());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        storage.save(tasks.getTasks());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erisjacey": 31
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.exception.DukeInvalidListNumberInputException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.exception.DukeLoadingErrorException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " * Represents a command to complete a task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param input A string representing the user input."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public DoneCommand(String input) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        super(\"done\", input);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            throws DukeInvalidListNumberInputException, DukeLoadingErrorException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        ui.printDoneTaskChatWindow(tasks.completeTask(input));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        storage.save(tasks.getTasks());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erisjacey": 31
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.exception.DukeInvalidKeywordException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " * Represents a command to find tasks that match a given keyword."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param input A string representing the user input."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public FindCommand(String input) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        super(\"find\", input);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeInvalidKeywordException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        ui.printFindTaskChatWindow(tasks.findTasks(input));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erisjacey": 28
    }
  },
  {
    "path": "src/main/java/duke/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " * Represents a command to print a help window to aid the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public HelpCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        super(\"help\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        ui.printHelpWindow(obtainCommands());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    private String[] obtainCommands() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        String[] result \u003d new String[CommandType.values().length];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        int i \u003d 0;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        for (CommandType command : CommandType.values()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            result[i++] \u003d command.toString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erisjacey": 32
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " * Represents a command to show the task list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        super(\"list\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        ui.printTasksChatWindow(tasks.getTasks());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erisjacey": 24
    }
  },
  {
    "path": "src/main/java/duke/command/UnknownCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.exception.DukeUnknownInputException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " * Represents a command that cannot be understood by the chat bot."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "public class UnknownCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public UnknownCommand() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        super(\"unknown\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeUnknownInputException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        throw new DukeUnknownInputException();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erisjacey": 26
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " * Represents a general exception specific to Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Standard \u003ccode\u003etoString\u003c/code\u003e."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @return A string representing this task object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        return \"ERROR\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erisjacey": 18
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeFileNotFoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " * Represents a Duke exception in which a file cannot be loaded."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "public class DukeFileNotFoundException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        return \"ERROR: File to load cannot be found\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erisjacey": 13
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeInvalidDeadlineTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " * Represents a Duke exception in which the deadline time input is invalid."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "public class DukeInvalidDeadlineTimeException extends DukeInvalidTaskTimeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        return \"ERROR: Usage: \u003cdeadline\u003e \u003cdescription\u003e /by \u003ctime\u003e\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                + \"    Time formatting: dd-MM-yyyy HH:mm\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erisjacey": 14
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeInvalidEventTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " * Represents a Duke exception in which the event time input is invalid."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "public class DukeInvalidEventTimeException extends DukeInvalidTaskTimeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        return \"ERROR: Usage: \u003cevent\u003e \u003cdescription\u003e /at \u003ctime\u003e\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                + \"    Time formatting: dd-MM-yyyy HH:mm\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erisjacey": 14
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeInvalidKeywordException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " * Represents a Duke exception in which the keyword is empty (that is to say: invalid)."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "public class DukeInvalidKeywordException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        return \"ERROR: The keyword cannot be empty!\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erisjacey": 13
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeInvalidListNumberInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " * Represents a Duke exception in which the list number input is invalid."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "public class DukeInvalidListNumberInputException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        return \"ERROR: Invalid list number input!\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erisjacey": 13
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeInvalidTaskDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " * Represents a Duke exception in which the input\u0027s task description is invalid."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "public class DukeInvalidTaskDescriptionException extends DukeTaskException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        return \"ERROR: The description of a task cannot be empty!\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erisjacey": 13
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeInvalidTaskTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " * Represents a Duke exception in which the task time input is invalid."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "public class DukeInvalidTaskTimeException extends DukeTaskException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        return \"ERROR: Please specify a correct date/time for this task!\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                + \"    Time formatting: dd-MM-yyyy HH:mm\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erisjacey": 14
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeLoadingErrorException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " * Represents a Duke exception in which a loading error occurs."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "public class DukeLoadingErrorException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        return \"ERROR: Loading error\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erisjacey": 13
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " * Represents a Duke exception related to the tasks within Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "public class DukeTaskException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        return \"ERROR: Task error\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erisjacey": 13
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeUnknownInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " * Represents a Duke exception in which the user input cannot be recognised by the parser."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "public class DukeUnknownInputException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        return \"ERROR: Unknown input! Try again.\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erisjacey": 13
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " * Represents a task with a set deadline."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param description A string representing the task description."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param by          A string representing the task deadline date/time."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        super(description, TaskType.DEADLINE);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        this.by \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Class constructor specifying whether or not the task has been completed."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param description A string representing the task description."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param isDone      \u003ccode\u003etrue\u003c/code\u003e if the task has been completed;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *                    \u003ccode\u003efalse\u003c/code\u003e otherwise."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param by          A string representing the task deadline date/time."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public Deadline(String description, boolean isDone, String by) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        super(description, isDone, TaskType.DEADLINE);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        this.by \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        return by.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public String printTime() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        return by.format(DateTimeFormatter.ofPattern(\"d MMM yyyy, hh:mm a\"));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        return String.format(\"%s (by: %s)\", super.toString(), printTime());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erisjacey": 43,
      "-": 9
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " * Represents a task with a set time-frame."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param description A string representing the task description."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param at          A string representing the task event date/time."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        super(description, TaskType.EVENT);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        this.at \u003d LocalDateTime.parse(at, DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Class constructor specifying whether or not the task has been completed."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param description A string representing the task description."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param isDone      \u003ccode\u003etrue\u003c/code\u003e if the task has been completed;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *                    \u003ccode\u003efalse\u003c/code\u003e otherwise."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param at          A string representing the task event date/time."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public Event(String description, boolean isDone, String at) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        super(description, isDone, TaskType.EVENT);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        this.at \u003d LocalDateTime.parse(at, DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        return at.format(DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public String printTime() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        return at.format(DateTimeFormatter.ofPattern(\"d MMM yyyy, hh:mm a\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        return String.format(\"%s (at: %s)\", super.toString(), printTime());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erisjacey": 41,
      "-": 9
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " * Represents a task that is to be completed."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    protected TaskType type;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param description A string representing the task description."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param type        The type of this task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public Task(String description, TaskType type) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Class constructor specifying whether or not the task has been completed."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param description A string representing the task description."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param isDone      \u003ccode\u003etrue\u003c/code\u003e if the task has been completed;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *                    \u003ccode\u003efalse\u003c/code\u003e otherwise."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param type        The type of this task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public Task(String description, boolean isDone, TaskType type) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Getter method."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @return A string representing this task\u0027s description."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Getter method."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @return \u003ccode\u003etrue\u003c/code\u003e if the task has been completed;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *         \u003ccode\u003efalse\u003c/code\u003e otherwise."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Gives a tick/cross symbol depending on whether or not this task has been completed."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @return A tick if the task has been completed; a cross otherwise."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        return (isDone ? \"✓\" : \"✘\"); // Return tick or X symbol"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Changes this task\u0027s \u003ccode\u003eisDone\u003c/code\u003e to \u003ccode\u003etrue\u003c/code\u003e."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Getter method."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @return This task\u0027s type."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public TaskType getTaskType() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Formats the time in the following format: \u003ccode\u003edd-MM-yyyy HH:mm\u003c/code\u003e."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @return A string representing the time in the specified format."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public abstract String getTime();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Formats the time in the following format: \u003ccode\u003ed MMM yyyy, hh:mm a\u003c/code\u003e."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @return A string representing the time in the specified format."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public abstract String printTime();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Standard \u003ccode\u003etoString\u003c/code\u003e."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @return A string representing this task object."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        return String.format(\"[%s][%s] %s\", type, getStatusIcon(), description);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erisjacey": 88,
      "-": 18
    }
  },
  {
    "path": "src/main/java/duke/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " * Represents the different types a task can have."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Represents the type of a todo."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    TODO {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            return \"T\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    },"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Represents the type of an event."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    EVENT {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            return \"E\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    },"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Represents the type of a deadline."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    DEADLINE {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            return \"D\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erisjacey": 36
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " * Represents a task with a simple description."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erisjacey"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Class constructor."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param description A string representing the task description."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        super(description, TaskType.TODO);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * Class constructor specifying whether or not the task has been completed."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param description A string representing the task description."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     * @param isDone      \u003ccode\u003etrue\u003c/code\u003e if the task has been completed;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     *                    \u003ccode\u003efalse\u003c/code\u003e otherwise."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        super(description, isDone, TaskType.TODO);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public String getTime() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        throw new IllegalStateException(\"Impossible method call\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public String printTime() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        throw new IllegalStateException(\"Impossible method call\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erisjacey": 34,
      "-": 4
    }
  },
  {
    "path": "src/test/java/duke/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.exception.DukeInvalidKeywordException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.exception.DukeInvalidListNumberInputException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.exception.DukeInvalidTaskDescriptionException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.exception.DukeInvalidTaskTimeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    private TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    private Task toDo \u003d new ToDo(\"test 1\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    private Task event \u003d new Event(\"test 2\", \"23-02-2020 23:00\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    private Task deadline \u003d new Deadline(\"test 3\", \"01-01-2020 00:00\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    private TaskList createTaskList() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        List\u003cTask\u003e sample \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        sample.add(toDo);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        sample.add(event);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        sample.add(deadline);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        return new TaskList(sample);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public void addToDo_validToDo_success()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            throws DukeInvalidTaskTimeException,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            DukeInvalidTaskDescriptionException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        assertEquals(toDo.toString(),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                tasks.addTask(\"todo\", \"todo test 1\").toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public void addToDo_erroneousToDo_exceptionThrown() throws DukeInvalidTaskTimeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            assertEquals(toDo.toString(),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                    tasks.addTask(\"todo\", \"todo\").toString());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        } catch (DukeInvalidTaskDescriptionException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            assertEquals(\"ERROR: The description of a task cannot be empty!\", e.toString());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public void addEvent_validEvent_success()"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            throws DukeInvalidTaskTimeException,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            DukeInvalidTaskDescriptionException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        assertEquals(event.toString(),"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                tasks.addTask(\"event\", \"event test 2 /at 23-02-2020 23:00\").toString());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public void addEvent_erroneousEvent_exceptionThrown() throws DukeInvalidTaskDescriptionException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            assertEquals(event.toString(),"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                    tasks.addTask(\"event\", \"event /at blah\").toString());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        } catch (DukeInvalidTaskTimeException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            assertEquals(\"ERROR: Usage: \u003cevent\u003e \u003cdescription\u003e /at \u003ctime\u003e\\n\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                    + \"    Time formatting: dd-MM-yyyy HH:mm\", e.toString());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public void addDeadline_validDeadline_success()"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            throws DukeInvalidTaskTimeException,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            DukeInvalidTaskDescriptionException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        assertEquals(deadline.toString(),"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                tasks.addTask(\"deadline\", \"deadline test 3 /by 01-01-2020 00:00\").toString());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public void addDeadline_erroneousEvent_exceptionThrown() throws DukeInvalidTaskDescriptionException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            assertEquals(deadline.toString(),"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                    tasks.addTask(\"deadline\", \"deadline /by blah\").toString());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        } catch (DukeInvalidTaskTimeException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            assertEquals(\"ERROR: Usage: \u003cdeadline\u003e \u003cdescription\u003e /by \u003ctime\u003e\\n\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                    + \"    Time formatting: dd-MM-yyyy HH:mm\", e.toString());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public void completeTask_validInput_success() throws DukeInvalidListNumberInputException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        toDo.markAsDone();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        assertEquals(toDo.toString(),"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                createTaskList().completeTask(\"done 1\").toString());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public void completeTask_erroneousInput_exceptionThrown() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            toDo.markAsDone();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            assertEquals(toDo.toString(),"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                    createTaskList().completeTask(\"done 1000\").toString());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        } catch (DukeInvalidListNumberInputException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            assertEquals(\"ERROR: Invalid list number input!\", e.toString());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public void deleteTask_validInput_success() throws DukeInvalidListNumberInputException {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        assertEquals(toDo.toString(),"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                createTaskList().deleteTask(\"delete 1\").toString());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public void deleteTask_erroneousInput_exceptionThrown() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            assertEquals(toDo.toString(),"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                    createTaskList().deleteTask(\"delete 1000\").toString());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        } catch (DukeInvalidListNumberInputException e) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            assertEquals(\"ERROR: Invalid list number input!\", e.toString());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public void findTask_validInput_success() throws DukeInvalidKeywordException {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        assertEquals(event.toString(),"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                createTaskList().findTasks(\"find test\").get(1).toString());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    public void findTask_erroneousInput_exceptionThrown() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            assertEquals(event.toString(),"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "                    createTaskList().findTasks(\"find\").toString());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        } catch (DukeInvalidKeywordException e) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "            assertEquals(\"ERROR: The keyword cannot be empty!\", e.toString());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "erisjacey"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "erisjacey": 142
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "help"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "clear"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "blah"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "todo"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "deadline return book"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "deadline return book /by 23-02-2020 00:00"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "deadline return book /by 123456789"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "event project meeting"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "event project meeting /at 01-01-2020 12:30"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "event project meeting /at hello"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "delete 5"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "find book"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "find blah"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "find"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "erisjacey": 16,
      "-": 4
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "SET MY_PATH\u003d..\\src\\main\\java\\duke"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin %MY_PATH%\\*.java %MY_PATH%\\command\\*.java %MY_PATH%\\exception\\*.java %MY_PATH%\\task\\*.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "erisjacey"
        },
        "content": "java -classpath ..\\bin duke/Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 18,
      "erisjacey": 5
    }
  }
]
