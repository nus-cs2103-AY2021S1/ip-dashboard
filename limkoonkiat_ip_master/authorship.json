[
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": " * Represents a Personal Assistant Chatbot that helps a person to keep track of various tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Creates a new Duke Chatbot that saves and loads tasks from the given filepath."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param filePath The file path to load tasks from and save tasks to."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            ui.showError(e);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Runs the Chatbot until an exit command is issued."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                String fullCommand \u003d ui.readInput();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                ui.showError(e);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Activates the Chatbot to run."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limkoonkiat": 48,
      "-": 4
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": " * Thrown to indicate that the Chatbot has encountered a problem."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limkoonkiat": 10
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.command.CommandInstruction;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.command.ViewCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": " * Deals with making sense of the user command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /** List of all the valid date inputs. */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    private static final List\u003cString\u003e formatStrings \u003d Arrays.asList(\"d/M/y\", \"y-M-d\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Parses the input command from the user into a command that the Chatbot can understand."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param fullCommand The command from the user."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @return The command that can be interpreted from the user."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @throws DukeException If there was some problems with understanding the user\u0027s commands."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            String[] splitCommand \u003d fullCommand.trim().split(\" \", 2);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            CommandInstruction instruction \u003d CommandInstruction.valueOf(splitCommand[0].toUpperCase());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            switch (instruction) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            case LIST:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            case BYE:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            case DONE:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                return new DoneCommand(Integer.parseInt(splitCommand[1]));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            case DELETE:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                return new DeleteCommand(Integer.parseInt(splitCommand[1]));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                Todo todo \u003d new Todo(splitCommand[1]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                return new AddCommand(todo);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                String[] splitDeadline \u003d splitCommand[1].split(\" /by \", 2);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                Deadline deadline \u003d new Deadline(splitDeadline[0], parseDate(splitDeadline[1]));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                return new AddCommand(deadline);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                String[] splitEvent \u003d splitCommand[1].split(\" /at \", 2);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                Event event \u003d new Event(splitEvent[0], parseDate(splitEvent[1]));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                return new AddCommand(event);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            case VIEW:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                return new ViewCommand(splitCommand[1]);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            case FIND:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                return new FindCommand(splitCommand[1]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The task number is not valid.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description or date cannot be empty.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The date is not valid.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Parses input dates in the correct format into the local date format."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param string The date to be parsed."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @return Local date format of the input date."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @throws DateTimeParseException If the input date is not of an acceptable format."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public static LocalDate parseDate(String string) throws DateTimeParseException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        for (int i \u003d 0; i \u003c formatStrings.size(); i++) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            String formatString \u003d formatStrings.get(i);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                return LocalDate.parse(string, DateTimeFormatter.ofPattern(formatString));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                if (i \u003d\u003d formatStrings.size() - 1) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    throw e;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limkoonkiat": 101
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": " * Deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /** The file where tasks are loaded from and saved to. */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Creates a new Storage that loads tasks from and saves tasks to the given file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param filePath The file path of the file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        this.file \u003d new File(filePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        file.getParentFile().mkdir();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Loads the saved tasks from the file."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @return A list of tasks that was saved in the file."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @throws DukeException If there was a problem with loading the saved file."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public List\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                String savedTask \u003d sc.nextLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                String[] splitTask \u003d savedTask.split(\" \\\\| \", 4);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                switch (splitTask[0]) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    Todo todo \u003d new Todo(splitTask[2]);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    if (splitTask[1] \u003d\u003d \"1\") {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                        todo.markAsDone();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    tasks.add(todo);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    Deadline deadline \u003d new Deadline(splitTask[2], Parser.parseDate(splitTask[3]));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    if (splitTask[1] \u003d\u003d \"1\") {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                        deadline.markAsDone();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    tasks.add(deadline);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    Event event \u003d new Event(splitTask[2], Parser.parseDate(splitTask[3]));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    if (splitTask[1] \u003d\u003d \"1\") {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                        event.markAsDone();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    tasks.add(event);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! No saved tasks were found.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        } catch (IllegalArgumentException | ArrayIndexOutOfBoundsException | DateTimeParseException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The previous tasks were not saved correctly.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Saves the tasks into the file."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param tasks The list of tasks to be saved."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @throws DukeException If there was a problem with saving the tasks into the file."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public void save(List\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            FileWriter writer \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                int isDone \u003d task.getIsDone() ? 1 : 0;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                switch (task.getShortForm()) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    writer.write(task.getShortForm() + \" | \" + isDone + \" | \""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                            + task.getDescription() + \"\\n\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    writer.write(task.getShortForm() + \" | \" + isDone + \" | \""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                            + task.getDescription() + \" | \" + ((Deadline) task).getBy() + \"\\n\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    writer.write(task.getShortForm() + \" | \" + isDone + \" | \""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                            + task.getDescription() + \" | \" + ((Event) task).getAt() + \"\\n\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    throw new IllegalArgumentException();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! There were some problems with saving the tasks.\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limkoonkiat": 119
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": " * Represents a list of tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /** The tasks in this task list. */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Creates an empty task list with no tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Creates a task list with the given tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param tasks The tasks to be added."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e(tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Gets the number of tasks in this task list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @return The number of tasks in this task list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public int getNumberOfTasks() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Gets the task at the specified position in this task list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param taskNumber The position of the task in this task list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @return The task at the specified position in this task list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public Task getTask(int taskNumber) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        return this.tasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Gets all the tasks in this task list as a list."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @return The list of all the tasks."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Gets all the tasks in this task list on the specified date as a task list."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param date The date of all the tasks to get."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @return The task list with all the tasks on the specified date."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public TaskList getTaskListOnDate(LocalDate date) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        TaskList result \u003d new TaskList();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            if ((task instanceof Deadline \u0026\u0026 ((Deadline) task).getBy().equals(date))"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                    || task instanceof Event \u0026\u0026 ((Event) task).getAt().equals(date)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                result.addTask(task);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Gets all the tasks in this task list that contains the keyword as a task list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param keyword The string that the tasks you are finding should contain."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @return The task list with all the tasks that contain the keyword."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public TaskList getTasksWithKeyword(String keyword) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        TaskList result \u003d new TaskList();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            if (task.toString().contains(keyword)) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                result.addTask(task);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Adds a task to this task list."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param task The task to be added to this task list."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @return The task that was added."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public Task addTask(Task task) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        return this.tasks.get(tasks.size() - 1);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Deletes a task from this task list."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param taskNumber The position of the task to be deleted."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @return The task that was deleted."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public Task deleteTask(int taskNumber) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        Task removedTask \u003d this.tasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        this.tasks.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        return removedTask;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Marks the task with the specified position in this task list as done."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param taskNumber The position of the task to be marked as done."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public void markTaskAsDone(int taskNumber) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        this.tasks.get(taskNumber - 1).markAsDone();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Returns a string representation of this task list."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @return A string representation of this task list."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        String numberedList \u003d \"\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            numberedList +\u003d \"\\n\\t\" + (i + 1) + \".\" + this.tasks.get(i);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        return numberedList;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limkoonkiat": 132
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": " * Deals with interactions with the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Creates a new Ui."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Reads the input from the user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @return The input from the user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public String readInput() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        return this.sc.nextLine().trim();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Prints a response to the user."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param response The response to be printed."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public void printResponse(String response) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        System.out.println(response);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Greets the user with a welcome message."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        printResponse(\"Hello! I\u0027m Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Prints an exit message to the user."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public void printExit() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        printResponse(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Prints all the tasks in the specified Task list."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param taskList The task list that contains the list of tasks to be printed."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public void printList(TaskList taskList) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        printResponse(\"Here are the tasks in your list:\" + taskList);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Prints a message to the user indicating that the specified task has been added to the"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * specified task list."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param task The task that was added."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param taskList The task list that the task was added to."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public void printAddTask(Task task, TaskList taskList) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        printResponse(\"Got it. I\u0027ve added this task: \\n\\t\" + task + \"\\n\" + getHowManyTasks(taskList));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Prints a message to the user indicating that the specified task has been deleted from the"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * specified task list."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param task The task that was deleted."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param taskList The task list that the task was deleted from."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public void printDeleteTask(Task task, TaskList taskList) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        printResponse(\"Noted. I\u0027ve removed this task: \\n\\t\" + task + \"\\n\" + getHowManyTasks(taskList));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Prints a message to the user indicating that the specified task has been marked done."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param task The task that was marked done."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public void printDoneTask(Task task) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        printResponse(\"Nice! I\u0027ve marked this task as done:\\n\\t\" + task);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Gets the number of tasks in the specified task list."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param taskList The task list to get the number of tasks from."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @return A string indicating the number of tasks in the specified task list."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public String getHowManyTasks(TaskList taskList) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        int numberOfTasks \u003d taskList.getNumberOfTasks();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        if (numberOfTasks \u003d\u003d 1) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            output \u003d String.format(\"Now you have %d task in the list.\", numberOfTasks);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            output \u003d String.format(\"Now you have %d tasks in the list.\", numberOfTasks);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Prints the tasks that occur on the specified date."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param taskList The task list to get the tasks from."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param localDate The date that you want to get the tasks for."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public void printViewTasks(TaskList taskList, LocalDate localDate) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        TaskList taskListOnDate \u003d taskList.getTaskListOnDate(localDate);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        printResponse(\"Here are the tasks on this date:\" + taskListOnDate);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Prints the tasks that contain the specified keyword."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param taskList The task list to find the tasks in."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param keyword The string that the tasks you are finding should contain."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public void printFindTasks(TaskList taskList, String keyword) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        TaskList tasksWithKeyword \u003d taskList.getTasksWithKeyword(keyword);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        printResponse(\"Here are the matching tasks in your list:\" + tasksWithKeyword);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Prints the error message of the exception."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param e The exception to get the message from."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public void showError(Exception e) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        printResponse(e.getMessage());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limkoonkiat": 138
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": " * Represents a command to add a task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /** The task to be added. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Creates a new add command with the specified task to be added."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param task The task to be added."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Adds the task to the specified task list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param tasks The task list the command is executed with."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param ui The ui the command is executed with."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param storage The storage the command is executed with."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @throws DukeException If there was a problem with executing the command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        ui.printAddTask(task, tasks);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        storage.save(tasks.getTasks());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limkoonkiat": 37
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": " * Represents a command from the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Creates a new Command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Executes the given command with the specified tasks, ui and storage."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param tasks The tasks the command is executed with."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param ui The ui the command is executed with."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param storage The storage the command is executed with."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @throws DukeException If there was a problem with executing the command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Indicates if this command is an exit command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @return False by default, unless this is an exit command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limkoonkiat": 35
    }
  },
  {
    "path": "src/main/java/duke/command/CommandInstruction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": " * Commands that can be used."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "public enum CommandInstruction {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    LIST(\"list\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    BYE(\"bye\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    DONE(\"done\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    DELETE(\"delete\"),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    TODO(\"todo\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    DEADLINE(\"deadline\"),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    EVENT(\"event\"),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    VIEW(\"view\"),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    FIND(\"find\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    private final String instruction;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    CommandInstruction(String command) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        this.instruction \u003d command;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limkoonkiat": 22
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": " * Represents a command to delete a task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /** The number of the task to be deleted. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Creates a new delete command with the specified number of the task to be deleted."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param taskNumber The number of the task to be deleted."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public DeleteCommand(int taskNumber) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Deletes the task with the task number from the specified task list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param tasks The task list the command is executed with."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param ui The ui the command is executed with."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param storage The storage the command is executed with."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @throws DukeException If there was a problem with executing the command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            Task removedTask \u003d tasks.deleteTask(taskNumber);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            ui.printDeleteTask(removedTask, tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            storage.save(tasks.getTasks());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The task number is not valid.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limkoonkiat": 41
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": " * Represents a command to mark a task as done."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /** The number of the task to be marked as done. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Creates a new done command with the specified number of the task to mark as done."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param taskNumber The number of the task to be marked as done."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public DoneCommand(int taskNumber) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Marks the task with the task number from the specified task list as done."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param tasks The task list the command is executed with."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param ui The ui the command is executed with."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param storage The storage the command is executed with."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @throws DukeException If there was a problem with executing the command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            tasks.markTaskAsDone(taskNumber);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            ui.printDoneTask(tasks.getTask(taskNumber));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            storage.save(tasks.getTasks());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The task number is not valid.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limkoonkiat": 40
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": " * Represents a command to exit the Chatbot."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Creates a new exit command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Exits the Chatbot."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param tasks The task list the command is executed with."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param ui The ui the command is executed with."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param storage The storage the command is executed with."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @throws DukeException If there was a problem with executing the command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        storage.save(tasks.getTasks());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        ui.printExit();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Indicates that this command is an exit command."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @return False."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limkoonkiat": 40
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": " * Represents a command to find all tasks containing a keyword."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /** The keyword to find tasks with. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Creates a new find command with the specified keyword."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param keyword The keyword to find tasks with."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Finds all the tasks containing the keyword in the specified task list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param tasks The tasks the command is executed with."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param ui The ui the command is executed with."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param storage The storage the command is executed with."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @throws DukeException If there was a problem with executing the command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        ui.printFindTasks(tasks, keyword);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limkoonkiat": 34
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": " * Represents a command to see all the tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Creates a new list command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Lists out all the tasks in the specified task list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param tasks The task list the command is executed with."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param ui The ui the command is executed with."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param storage The storage the command is executed with."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @throws DukeException If there was a problem with executing the command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        ui.printList(tasks);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limkoonkiat": 30
    }
  },
  {
    "path": "src/main/java/duke/command/ViewCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": " * Represents a command to see all the tasks on a certain date."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "public class ViewCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /** The date on which you want to view the tasks for. */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Creates a new view command with the specified date."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param date The date on which you want to view the tasks for."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public ViewCommand(String date) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * View the tasks on the date in the specified task list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param tasks The task list the command is executed with."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param ui The ui the command is executed with."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param storage The storage the command is executed with."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @throws DukeException If there was a problem with executing the command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            ui.printViewTasks(tasks, LocalDate.parse(date));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The date is not valid.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limkoonkiat": 41
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": " * Represents tasks that need to be done before a specific date."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /** The date by which this task must be done. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Creates a new Deadline with the specified description and specified deadline date."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param description The description of the deadline."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param by The date by which the task must be done."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Gets the date by which this task must be done."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @return The date by which this task must be done."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public LocalDate getBy() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Gets the short form of this deadline."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @return The short form of this deadline."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public String getShortForm() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Returns a string representation of this deadline."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @return A string representation of this deadline."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limkoonkiat": 49
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": " * Represents tasks that occur at a specific time."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /** The date at which this task occurs. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Creates a new Event with the specified description and specified event date."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param description The description of the event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param at The date at which the event occurs."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public Event(String description, LocalDate at) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Gets the date at which this task occurs."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @return  The date at which this task occurs."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public LocalDate getAt() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Gets the short form of this event."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @return The short form of this event."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public String getShortForm() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Returns a string representation of this event."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @return A string representation of this event."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limkoonkiat": 49
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": " * Represents a task to be completed."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /** Description of the task. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /** Marks if the task is done or not. */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Creates a new task with the specified description."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param description The description of the task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Gets the status icon."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * \"✓\" indicates this task is completed and \"✘\" indicates this task is not completed."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @return A string of the status icon."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        return (isDone ? \"✓\" : \"✘\"); //return tick or X symbols"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * If this task is done, returns true, otherwise false."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @return True, if this task is done, otherwise false."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Gets the description of this task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @return The description of this task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Gets the short form of this task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @return The short form of this task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public abstract String getShortForm();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Marks this task as done."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Returns a string representation of this task."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @return A string representation of this task."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        return this.getStatusIcon() + \" \" + this.description;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limkoonkiat": 67
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": " * Represents tasks without any date attached to it."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Creates a new Todo with the specified description."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @param description The description of the todo."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Gets the short form of this todo."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @return The short form of this todo."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public String getShortForm() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * Returns a string representation of this todo."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     * @return A string representation of this todo."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limkoonkiat": 33
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public void parse_DeadlineInvalidDate_exceptionThrown() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        Exception exception \u003d assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            Parser.parse(\"deadline project /by 12\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        });"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        String expectedMessage \u003d \"☹ OOPS!!! The date is not valid.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        String actualMessage \u003d exception.getMessage();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        assertEquals(expectedMessage, actualMessage);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public void parse_EventEmptyDate_exceptionThrown() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        Exception exception \u003d assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            Parser.parse(\"event project /at\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        });"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        String expectedMessage \u003d \"☹ OOPS!!! The description or date cannot be empty.\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        String actualMessage \u003d exception.getMessage();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        assertEquals(expectedMessage, actualMessage);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public void parse_emptyCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        Exception exception \u003d assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            Parser.parse(\"\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        });"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        String expectedMessage \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        String actualMessage \u003d exception.getMessage();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        assertEquals(expectedMessage, actualMessage);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public void parse_invalidCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        Exception exception \u003d assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            Parser.parse(\"hi\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        });"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        String expectedMessage \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        String actualMessage \u003d exception.getMessage();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        assertEquals(expectedMessage, actualMessage);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public void parse_invalidDoneCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        Exception exception \u003d assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            Parser.parse(\"done q\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        });"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        String expectedMessage \u003d \"☹ OOPS!!! The task number is not valid.\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        String actualMessage \u003d exception.getMessage();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        assertEquals(expectedMessage, actualMessage);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public void parse_emptyDeleteCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        Exception exception \u003d assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "            Parser.parse(\"delete\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        });"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        String expectedMessage \u003d \"☹ OOPS!!! The description or date cannot be empty.\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        String actualMessage \u003d exception.getMessage();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        assertEquals(expectedMessage, actualMessage);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limkoonkiat": 74
    }
  },
  {
    "path": "src/test/java/duke/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    Todo todo \u003d new Todo(\"Get bread\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    Deadline deadline \u003d new Deadline(\"Finish project\", LocalDate.parse(\"2012-01-23\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    Event event \u003d new Event(\"Birthday\", LocalDate.parse(\"2020-05-30\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public void addTask_addSomeTasks_taskListWithAllTasks() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        taskList.addTask(todo);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        taskList.addTask(deadline);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        taskList.addTask(event);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        assertEquals(\"\\n\\t1.[T]✘ Get bread\\n\" +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                \"\\t2.[D]✘ Finish project (by: Jan 23 2012)\\n\" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                \"\\t3.[E]✘ Birthday (at: May 30 2020)\", taskList.toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public void deleteTask_deleteOneTask_correctTaskDeleted() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        taskList.addTask(todo);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        taskList.addTask(deadline);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        taskList.addTask(event);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        taskList.deleteTask(2);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        assertEquals(\"\\n\\t1.[T]✘ Get bread\\n\" +"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                \"\\t2.[E]✘ Birthday (at: May 30 2020)\", taskList.toString());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public void markAsDone_markDoneOneTask_correctTaskMarkDone() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        taskList.addTask(todo);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        taskList.addTask(deadline);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        taskList.addTask(event);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        taskList.markTaskAsDone(3);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        assertEquals(\"\\n\\t1.[T]✘ Get bread\\n\" +"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                \"\\t2.[D]✘ Finish project (by: Jan 23 2012)\\n\" +"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "                \"\\t3.[E]✓ Birthday (at: May 30 2020)\", taskList.toString());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    public void getTaskListOnDate_oneTaskOnDate_correctTaskListOnDate() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        taskList.addTask(todo);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        taskList.addTask(deadline);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        taskList.addTask(event);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        TaskList newTL \u003d taskList.getTaskListOnDate(LocalDate.parse(\"2012-01-23\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "        assertEquals(\"\\n\\t1.[D]✘ Finish project (by: Jan 23 2012)\", newTL.toString());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "limkoonkiat": 59
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "deadline return book /by 2000-06-06"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "event project meeting /at 2010-08-06"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "deadline return book /by 2020-04-22"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "event project meeting /at 2010-08-06"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "todo"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "event"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "deadline /by "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "deadline test /by"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "event /at "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "event test /at"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "done      "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "done qqqq"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "done 80"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "delete        "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "delete 45"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "limkoonkiat": 25
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "limkoonkiat"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "limkoonkiat": 2
    }
  }
]
