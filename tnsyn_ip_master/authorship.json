[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private String dateAndTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public Deadline(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        super(description.split(\"/by \")[0]);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        this.dateAndTime \u003d description.split(\"/by \")[1];"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public String dateAndTimeBracket() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return String.format(\"(by: %s)\", this.dateAndTime);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return String.format(\"[D][%s] %s %s\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                this.getStatusIcon(), this.description, this.dateAndTimeBracket());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tnsyn": 19
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public static void init() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println(\"\\n Always at your service, \\n\" + logo + \"\\n\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println(\"Your Majesty, I am your loyal Duke.\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println(\"I offer a range of administrative services. Do type \u0027assist\u0027 to see the comprehensive list.\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public static String dashedLineBreak() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        String dashedLine \u003d \"- \";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return dashedLine.repeat(32);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public static void assist() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println(dashedLineBreak());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println(\"Greetings, Your Majesty. \\n\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println(\"Use any of the commands on the left to access my quality services:\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println(\"\\ttodo [TASK]: Adds a todo to your scroll\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println(\"\\tdeadline [TASK] /by [DATE AND/OR TIME]: Adds a deadline to your scroll\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println(\"\\tevent [TASK] /on [DATE AND/OR TIME]: Adds an event to your scroll\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println(\"\\tscroll: Displays your scroll - your list of tasks\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println(\"\\tconquer [NUMBER]: Marks the particular item on your scroll as DONE\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println(\"\\tdelete [NUMBER]: Deletes the particular item from your scroll\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println(\"\\tdismiss: This will be my cue to leave.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println(\"Now, how may I serve you?\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println(dashedLineBreak() + \"\\n\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    // Handles cases where user enters empty input"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public static void validateScannerInput(String input) throws DukeException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        if (input.trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            throw new DukeException(\"Come again, Your Majesty?\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    // Handles cases where user does not enter a valid description for tasks"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public static void validateAdd(String[] task) throws DukeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        if ((task.length \u003d\u003d 1 || task[1].trim().length() \u003d\u003d 0) \u0026\u0026"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                (task[0].equalsIgnoreCase(\"todo\") ||"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                        task[0].equalsIgnoreCase(\"event\") ||"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                        task[0].equalsIgnoreCase(\"deadline\"))"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        ) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            throw new DukeException(\"Do give me more details about this \" + task[0] + \", Your Majesty.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    // Handles cases where user does not enter the correct / commands (i.e. /by for deadlines, /on for events)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public static void validateSlashCommands(String[] task) throws DukeException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        if(task[0].equalsIgnoreCase(\"deadline\") \u0026\u0026 task[1].split(\"/by \", 2).length \u003d\u003d 1){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            throw new DukeException(\"Use /by for deadlines, Your Majesty.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } else if (task[0].equalsIgnoreCase(\"event\") \u0026\u0026  task[1].split(\"/on \", 2).length \u003d\u003d 1){"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            throw new DukeException(\"Use /on for events, Your Majesty.\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    // Handles cases where user enters a number that does not correspond to an existing task"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public static void validateIndex(int taskNumber) throws DukeException{"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        if(taskNumber \u003e tasks.size() || taskNumber \u003c\u003d 0) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            throw new DukeException(\"Your Majesty, there\u0027s no such agenda in my detailed records.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    // Handles cases where user does not input a valid number after conquer/delete commands"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public static void validateConquerDelete(String[] command) throws DukeException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            Integer.parseInt(sanitiseInput(command[1]));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } catch (Exception err) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            throw new DukeException(\"Please enter valid numbers after your command, Your Majesty.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    // Removes leading whitespaces in a String"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public static String sanitiseInput(String input) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return input.stripLeading();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public static void printAllTasks() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            System.out.println(\"Your scroll is currently empty, Your Majesty.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            System.out.println(dashedLineBreak());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            System.out.println(\"Your current scroll, Your Majesty:\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                System.out.printf(\"\\t%s.%s\", tasks.indexOf(task) + 1, task);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                System.out.println();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println(dashedLineBreak());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public static void addTask(String task) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            "
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            validateScannerInput(task);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            "
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            String splitTask[] \u003d task.split(\" \", 2);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            Task newTask;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            validateAdd(splitTask);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            validateSlashCommands(splitTask);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            "
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            switch(splitTask[0].toLowerCase()) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    newTask \u003d new ToDo(splitTask[1]);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    newTask \u003d new Deadline(splitTask[1]);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    newTask \u003d new Event(splitTask[1]);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    throw new DukeException(\"I\u0027m afraid I do not understand that command, Your Majesty.\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            if (newTask !\u003d null) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                tasks.add(newTask);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                System.out.println(dashedLineBreak());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                System.out.println(\"Your Majesty, I\u0027ve added the writing:\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                System.out.println(\"\\t\" + newTask);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                System.out.printf(\"You have %s writing(s) on your scroll as of now. \\n\", tasks.size());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                System.out.println(dashedLineBreak());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                System.out.println();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } catch (DukeException err) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            System.out.println(err.getMessage());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            System.out.println(dashedLineBreak());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public static void conquerTask(String[] command) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            validateConquerDelete(command);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(sanitiseInput(command[1]));"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            validateIndex(taskNumber);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            "
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            tasks.get(taskNumber - 1).markAsDone();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            System.out.println(dashedLineBreak());"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            System.out.println(\"As you wish, Your Majesty. I have marked this as conquered.\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            System.out.println(\"\\t\" + tasks.get(taskNumber - 1));"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            System.out.println(dashedLineBreak());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } catch (DukeException err) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            System.out.println(err.getMessage());"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            System.out.println(dashedLineBreak());"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public static void deleteTask(String[] command) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            validateConquerDelete(command);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(sanitiseInput(command[1]));"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            validateIndex(taskNumber);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            "
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            Task deletedTask \u003d tasks.get(taskNumber - 1);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            tasks.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            System.out.println(dashedLineBreak());"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            System.out.println(\"As you wish, Your Majesty. I have removed this writing.\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            System.out.println(\"\\t\" + deletedTask);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            System.out.printf(\"You have %s writing(s) on your scroll as of now. \\n\", tasks.size());"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            System.out.println(dashedLineBreak());"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        } catch (DukeException err) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            System.out.println(err.getMessage());"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            System.out.println(dashedLineBreak());"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        init();"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        while(sc.hasNextLine()) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            String userInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            String[] splitUserInput \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            "
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            // Handle cases where there are leading whitespaces in user input"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            if (splitUserInput[0].isBlank()) { "
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                userInput \u003d sanitiseInput(userInput);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                splitUserInput \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            switch(splitUserInput[0].toLowerCase()) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                case \"dismiss\":"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    System.out.println(dashedLineBreak());"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    System.out.println(\"Your wish is my command, Your Majesty. Till I see you again. \\n\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    sc.close();"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    System.exit(0);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                case \"scroll\":"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    printAllTasks();"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                case \"conquer\":"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    conquerTask(splitUserInput);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    deleteTask(splitUserInput);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                case \"assist\":"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    assist();"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                    addTask(userInput);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "            }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tnsyn": 212,
      "-": 8
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public DukeException(String err) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        super(err);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tnsyn": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    private String dateAndTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public Event(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        super(description.split(\"/on \")[0]);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        this.dateAndTime \u003d description.split(\"/on \")[1];"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public String dateAndTimeBracket() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return String.format(\"(on: %s)\", this.dateAndTime);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return String.format(\"[E][%s] %s %s\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "                this.getStatusIcon(), this.description, this.dateAndTimeBracket());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tnsyn": 19
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return this.isDone ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tnsyn"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tnsyn": 22
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "        return String.format(\"[T][%s] %s\", this.getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tnsyn": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "assist"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "deadline return book /by Thursday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "scroll"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "scROLL"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "conquer 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "scroll"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "conquer 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "scroll "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "conquer 3"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "event arts experience /at Friday 5-6pm"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "scroll"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "event"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "todo"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "deadline code /for Monday"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "event hackathon /by Tuesday"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "deadline     "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "event    "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "conquer $$$"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "delete fbeg"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "conquer"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "delete"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "conquer "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "delete "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "todo   "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "       "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "conquer 1"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "scroll "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "  todo "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "  todo return book"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "  conquer   2"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "  delete  1"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tnsyn"
        },
        "content": " scroll"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "dismiss"
      }
    ],
    "authorContributionMap": {
      "tnsyn": 37
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tnsyn"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "tnsyn": 1,
      "-": 37
    }
  }
]
