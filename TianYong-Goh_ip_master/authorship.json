[
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "enum Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    BYE,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    DELETE,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    LIST,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    TODO"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 10
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public Deadline(String description, LocalDate by, boolean isDone) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public Deadline markAsDone() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return new Deadline(super.description, this.by, true);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                + \" [\" + by.getDayOfWeek() + \"])\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 30
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private final TaskList tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        Storage storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        this.tasks \u003d new TaskList(storage);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        this.ui.welcome();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "           String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "           System.out.println(this.ui.readCommand(input, this.tasks));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "           if(input.trim().equals(\"bye\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "               break;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "           }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        new Duke(\"mug.txt\").run();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 25,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return \"Wrong command given/lack of information\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 11
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public Event(String description, LocalDate at) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public Event(String description, LocalDate at, boolean isDone) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public Event markAsDone() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return new Event(super.description, this.at, true);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                + \"[\" + at.getDayOfWeek() + \"])\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 30
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    protected static void input(Command command, int splitNum, boolean timeRelated) throws DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        if (splitNum \u003c 2 ) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            if ((timeRelated \u0026\u0026 command \u003d\u003d Command.DEADLINE)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            ) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                throw new DukeException(\"HEY!!! Feed me with {/by [date]}. MUG is hungry T_T\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            } else if (timeRelated"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    \u0026\u0026 command \u003d\u003d Command.EVENT) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                throw new DukeException(\"HEY!!! Feed me with {/at [date]}. MUG is hungry T_T\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                throw new DukeException(\"HEY!!! Don\u0027t be stingy give MUG more information \u003e.\u003c\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    protected static void info(Command command, String info, boolean timeRelated) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        if (info.trim().equals(\"\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            if ((timeRelated \u0026\u0026 command \u003d\u003d Command.DEADLINE)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            ) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                throw new DukeException(\"HEY!!! Feed me with {/by [date]}. MUG is hungry T_T\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            } else if (timeRelated"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    \u0026\u0026 command \u003d\u003d Command.EVENT) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                throw new DukeException(\"HEY!!! Feed me with {/at [date]}. MUG is hungry T_T\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                throw new DukeException(\"HEY!!! Don\u0027t be stingy give MUG more information \u003e.\u003c\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    protected static LocalDate date(String date) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            return LocalDate.parse(date);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            throw new DukeException(\"MUG is picky. Give him the correct date format(YYYY-MM-DD) XD\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    protected static Command command(String command) throws DukeException{"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            return Command.valueOf(command.toUpperCase());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (IllegalArgumentException ex) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            throw new DukeException(\"Hey!!! I\u0027m sorry, but MUG don\u0027t know what that means :-()\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    protected static int index(String strIndex, int splitNum) throws DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            int index \u003d Integer.parseInt(strIndex);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            if (splitNum \u003c 2) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                throw new DukeException(\"HEY!!! Don\u0027t be stingy give MUG more information \u003e.\u003c\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            return index;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch ( NumberFormatException ex) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            throw new DukeException(\"Please feed MUG an integer number ~_~\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 63
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.io.PrintWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private final String filepath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        File file \u003d new File(filepath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            if(!file.exists()){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            System.out.println(\"An error occurred!!\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            Scanner sc \u003d new Scanner(new File(this.filepath));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            sc.useDelimiter(\"[\\n]\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                line \u003d sc.next();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                String[] newLine \u003d line.split(\"[|]\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                Command command \u003d Parser.command(newLine[0]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                boolean taskStatus \u003d Integer.parseInt(newLine[1]) \u003d\u003d 1;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                if (command \u003d\u003d Command.TODO) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    taskList.add(new Todo(newLine[2], taskStatus));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                } else if (command \u003d\u003d Command.DEADLINE) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    LocalDate date \u003d Parser.date(newLine[3]);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    taskList.add(new Deadline(newLine[2], date, taskStatus));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                } else if (command \u003d\u003d Command.EVENT) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    LocalDate date \u003d Parser.date(newLine[3]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    taskList.add(new Event(newLine[2], date, taskStatus));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (FileNotFoundException | DukeException ex){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            System.out.println(\"WARNING: \" + ex.getMessage() + \" :WARNING\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            System.out.println(\"WARNING: There is Something wrong with your Storage :WARNING\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public void appendTask(Command command, String info) throws DukeException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            FileWriter fw \u003d new FileWriter(this.filepath, true);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            PrintWriter pw \u003d new PrintWriter(bw);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            switch(command) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                case TODO:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    pw.println(\"TODO|0|\" + info);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                case DEADLINE:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    String[] dInfo \u003d info.split(\" /by \");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    Parser.input(command, dInfo.length, true);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    Parser.info(command, dInfo[1], true);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    String deadlineEvent \u003d dInfo[0];"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    LocalDate deadlineTime \u003d Parser.date(dInfo[1]);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    pw.println(\"DEADLINE|0|\" + deadlineEvent + \"|\" + deadlineTime);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                case EVENT:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    String[] eInfo \u003d info.split(\" /at \");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    Parser.input(command, eInfo.length, true);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    Parser.info(command, eInfo[1], true);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    String eventEvent \u003d eInfo[0];"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    LocalDate eventTime \u003d Parser.date(eInfo[1]);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    pw.println(\"EVENT|0|\" + eventEvent + \"|\" + eventTime);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            pw.flush();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            pw.close();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (DukeException ex){"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            throw new DukeException(ex.getMessage());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            throw new DukeException(\"Something went wrong. MUG fail to add the Task :_:\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public void deleteTask(int taskId) throws DukeException {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String tempFile \u003d \"temp.txt\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        File oldFile \u003d new File(this.filepath);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        File newFile \u003d new File(tempFile);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        int taskTrack \u003d 0;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            FileWriter fw \u003d new FileWriter(tempFile, true);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            PrintWriter pw \u003d new PrintWriter(bw);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            Scanner sc \u003d new Scanner(new File(this.filepath));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            sc.useDelimiter(\"[\\n]\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            while(sc.hasNext()) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                line \u003d sc.next();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                taskTrack++;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                if(taskTrack !\u003d taskId) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    pw.println(line);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            sc.close();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            pw.flush();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            pw.close();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            oldFile.delete();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            File renameFile \u003d new File(this.filepath);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            newFile.renameTo(renameFile);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            throw new DukeException(\"Something went wrong. MUG fail to delete the Task :_:\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public void doneTask(int taskId) throws DukeException {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String tempFile \u003d \"temp.txt\";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        File oldFile \u003d new File(this.filepath);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        File newFile \u003d new File(tempFile);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        int taskTrack \u003d 0;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            FileWriter fw \u003d new FileWriter(tempFile, true);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            BufferedWriter bw \u003d new BufferedWriter(fw);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            PrintWriter pw \u003d new PrintWriter(bw);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            Scanner sc \u003d new Scanner(new File(this.filepath));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            sc.useDelimiter(\"[\\n]\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            while(sc.hasNext()) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                line \u003d sc.next();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                taskTrack++;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                if(taskTrack !\u003d taskId) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    pw.println(line);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    String[] newLine \u003d line.split(\"[|]\" , 3);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    pw.println(newLine[0] + \"|\" + 1 + \"|\" + newLine[2] );"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            sc.close();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            pw.flush();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            pw.close();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            oldFile.delete();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            File renameFile \u003d new File(this.filepath);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            newFile.renameTo(renameFile);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            throw new DukeException(\"File not found\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            throw new DukeException(\"Something went wrong\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 169
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public Task markAsDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return new Task(this.description, true);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 32
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    Storage store;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public TaskList(Storage store) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        this.taskList \u003d store.load();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        this.store \u003d store;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private int taskListLen() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return this.taskList.size();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public String readList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        if(this.taskListLen() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            return \"MUG don\u0027t have any of your task \\\"_\\\"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            int taskId \u003d 1;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            StringBuilder results \u003d new StringBuilder(\"Here is your tasks:\\n\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            for (Task tsk : this.taskList) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                results.append(taskId);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                results.append(\". \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                results.append(tsk);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                if (taskId !\u003d this.taskListLen()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    results.append(\"\\n\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                taskId++;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            return results.toString();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public String addTask(Command command, String info) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            Task task;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                case TODO:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    task \u003d new Todo(info);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                case DEADLINE:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    String[] dInfo \u003d info.split(\" /by \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    Parser.input(command, dInfo.length, true);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    Parser.info(command, dInfo[1], true);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    String deadlineEvent \u003d dInfo[0];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    LocalDate deadlineTime \u003d Parser.date(dInfo[1]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    task \u003d new Deadline(deadlineEvent, deadlineTime);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                case EVENT:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    String[] eInfo \u003d info.split(\" /at \");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    Parser.input(command, eInfo.length, true);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    Parser.info(command, eInfo[1], true);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    String eventEvent \u003d eInfo[0];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    LocalDate eventTime \u003d Parser.date(eInfo[1]);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    task \u003d new Event(eventEvent, eventTime);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    task \u003d new Task(info);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            this.taskList.add(task);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            store.appendTask(command, info);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            return \"Got it. MUG has added this task:\\n\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    + task"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    + \"\\nNow you have \""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    + this.taskListLen()"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    + \" tasks in the list.\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            return ex.getMessage();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public String deleteTask(int taskId) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        if ( taskId \u003e this.taskListLen()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            return \"MUG don\u0027t have this task to Delete @_@\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                int taskIndex \u003d taskId - 1;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                Task deletedTask \u003d this.taskList.get(taskIndex);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                this.taskList.remove(taskIndex);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                this.store.deleteTask(taskId);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                return \"Noted. MUG has removed this task:\\n\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                        + deletedTask"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                        + \"\\nNow you have \""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                        + this.taskListLen()"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                        + \" tasks in the list.\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                return ex.getMessage();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public String taskDone(int taskId) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        if (taskId \u003e this.taskListLen()) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            return \"MUG don\u0027t have this task to mark as Done :\u003e\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            int taskIndex \u003d taskId - 1;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            Task doneTask \u003d this.taskList.get(taskIndex);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            if (doneTask.isDone) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                return \"MUG had marked this task as done:\\n\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                        + doneTask;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    doneTask \u003d doneTask.markAsDone();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    this.taskList.set(taskIndex, doneTask);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    this.store.doneTask(taskId);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    return \"Congratz! MUG has marked this task as done:\\n\""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                            + doneTask;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                } catch (DukeException ex) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    return ex.getMessage();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 120
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public Todo markAsDone() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return new Todo(super.description, true);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 20
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public void welcome() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String logo \u003d \" ___    ___        ______\\n\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                + \"|   \\\\  /   |_    _|  ____|\\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                + \"|    \\\\/    | |  | |  |  _\\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                + \"|          | |__| |  |_| |\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                + \"|__/\\\\__/\\\\__|\\\\___,_|______|\\n\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String welcome \u003d logo"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                + \"** Hello! I\u0027m MUG  **\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                + \"** What can MUG do for you ?_? **\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        System.out.println(welcome);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    private static String printDesign(String word) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return \"**\\n\" + word + \"\\n**\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    public String readCommand(String input, TaskList tasks) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            String[] splitOrder \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            Command command \u003d Parser.command(splitOrder[0]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                case LIST:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    output \u003d printDesign(tasks.readList());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                case BYE:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    output \u003d \"** Bye. Hope to see you soon!! **\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                case DONE:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    Parser.input(command, splitOrder.length, false);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    Parser.info(command, splitOrder[1], false);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    int doneTaskId \u003d Parser.index(splitOrder[1], splitOrder.length);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    output \u003d printDesign(tasks.taskDone(doneTaskId));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                case DELETE:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    Parser.input(command, splitOrder.length, false);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    Parser.info(command, splitOrder[1], false);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    int deleteTaskId \u003d Parser.index(splitOrder[1], splitOrder.length);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    output \u003d printDesign(tasks.deleteTask(deleteTaskId));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                case TODO:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                case DEADLINE:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                case EVENT:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    Parser.input(command, splitOrder.length, false);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    Parser.info(command, splitOrder[1], false);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    String info \u003d splitOrder[1];"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    output \u003d printDesign(tasks.addTask(command, info));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    String errorCommand \u003d \"Hey!!! I\u0027m sorry, but MUG don\u0027t know what that means :-()\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    output \u003d printDesign(errorCommand);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (DukeException ex){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            output \u003d printDesign(ex.getMessage());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "            output \u003d printDesign(\"There is Something wrong with your Storage\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 69
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "command"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "todo"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "todo"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "todo borrow textbook"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "deadline return book"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "deadline return book /by"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "deadline return book /by 2019-12-02"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "event"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "event"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "event project meeting"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "event project meeting /at"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "event project meeting /at 2019-12-01"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "delete 5"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 24
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "if"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "  ! ("
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003esources.txt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "  )"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 6,
      "-": 37
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "../src/main/java/TaskList.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "../src/main/java/Storage.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "../src/main/java/Parser.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "../src/main/java/Command.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "../src/main/java/Ui.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "../src/main/java/Event.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "../src/main/java/Task.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "../src/main/java/Duke.java"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "../src/main/java/Deadline.java"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "../src/main/java/Todo.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "TianYong-Goh"
        },
        "content": "../src/main/java/DukeException.java"
      }
    ],
    "authorContributionMap": {
      "TianYong-Goh": 11
    }
  }
]
