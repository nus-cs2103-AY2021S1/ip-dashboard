[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    mainClassName \u003d \"luke.Luke\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    archiveBaseName \u003d \"luke\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 39,
      "gsmoon97": 17
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "E|1|read book|Aug 4th 3-4pm"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "T|0|return book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "T|0|do this"
      }
    ],
    "authorContributionMap": {
      "gsmoon97": 3
    }
  },
  {
    "path": "src/main/java/luke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "package luke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gsmoon97": 12
    }
  },
  {
    "path": "src/main/java/luke/Luke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "package luke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.commands.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.exception.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.task.Deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.task.Event;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.task.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.task.Todo;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "public class Luke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public Luke(String filePath) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        this.storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            this.tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        } catch (LukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            this.tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            Command command \u003d Parser.parseCommand(input);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            return command.execute(this.storage, this.tasks, this.ui);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        } catch (LukeException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public Ui getUi() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        return this.ui;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    //    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//     * Creates a task.Todo object with the given input."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//     * @param input description of the task.Todo object"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//     * @return the todo object with the given input"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//    private static Todo createTodo(String input) throws EmptyTodoException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//        String todo \u003d input.replaceAll(\"todo \", \"\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//        if (input.equals(\"todo\") || input.equals(\"todo \")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//            throw new EmptyTodoException(\"\\n\\tThe description of todo cannot be empty.\\n\\tPlease make sure you follow the correct format.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//            return new Todo(todo);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//     * Creates a task.Deadline object with the given input."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//     * @param input description of the task.Deadline object"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//     * @return the task.Deadline object with the given input"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//    private static Deadline createDeadline(String input) throws EmptyDeadlineException, InvalidDeadlineException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//        String[] deadline \u003d input.split(\"deadline | /by \");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//        if (input.equals(\"deadline\") || input.equals(\"deadline \")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//            throw new EmptyDeadlineException(\"\\n\\tThe description of deadline cannot be empty.\\n\\tPlease make sure you follow the correct format.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//        } else if (deadline.length !\u003d 3) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//            throw new InvalidDeadlineException(\"\\n\\tYou have typed in an invalid deadline.\\n\\tPlease make sure you follow the correct format.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//        } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//            return new Deadline(deadline[1], LocalDate.parse(deadline[2]));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//     * Creates a task.Event object with the given input."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//     * @param input description of the task.Event object"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//     * @return the task.Event object with the given input"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//    private static Event createEvent(String input) throws EmptyEventException, InvalidEventException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//        String[] event \u003d input.split(\"event | /at \");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//        if (input.equals(\"event\") || input.equals(\"event \")) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//            throw new EmptyEventException(\"\\n\\tThe description of event cannot be empty.\\n\\tPlease make sure you follow the correct format.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//        } else if (event.length !\u003d 3) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//            throw new InvalidEventException(\"\\n\\tYou have typed in an invalid event.\\n\\tPlease make sure you follow the correct format.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//        } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//            return new Event(event[1], event[2]);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gsmoon97": 93
    }
  },
  {
    "path": "src/main/java/luke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "package luke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.gui.MainWindow;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": " * A GUI for Luke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    private Luke luke \u003d new Luke(\"/data/tasks.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setLuke(luke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gsmoon97": 32
    }
  },
  {
    "path": "src/main/java/luke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "package luke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.commands.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.exception.LukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.exception.LukeUnknownCommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.task.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public static Task parseTask(String taskStr) throws LukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        assert taskStr !\u003d \"\" : \"Task should not be empty.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        String[] taskDetails \u003d taskStr.split(\" \\\\| \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        Task parsedTask \u003d null;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        if (taskDetails[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            parsedTask \u003d new Todo(taskDetails[2]);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        } else if (taskDetails[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            parsedTask \u003d new Deadline(taskDetails[2], LocalDateTime.parse(taskDetails[3]));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        } else if (taskDetails[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            parsedTask \u003d new Event(taskDetails[2], taskDetails[3]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        if (taskDetails[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            parsedTask.markAsDone();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        return parsedTask;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public static Command parseCommand(String input) throws LukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        assert input !\u003d \"\" : \"User input should not be empty.\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        List\u003cString\u003e commandSplit \u003d Arrays.asList(input.split(\" \"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        String commandType \u003d commandSplit.get(0);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            switch (commandType) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                parseTodoCommand(commandSplit);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                String[] deadlineDetails \u003d commandSplit.get(1).split(\"/by\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                String deadlineDescription \u003d deadlineDetails[0].trim();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                LocalDateTime by \u003d LocalDateTime.parse(deadlineDetails[1].trim());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                return new AddCommand(new Deadline(deadlineDescription, by));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                String[] eventDetails \u003d commandSplit.get(1).split(\"/at\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                String eventDescription \u003d eventDetails[0].trim();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                String at \u003d eventDetails[1].trim();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                return new AddCommand(new Event(eventDescription, at));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                return new DeleteCommand(Integer.parseInt(commandSplit.get(1)));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                return new DoneCommand(Integer.parseInt(commandSplit.get(1)));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                throw new LukeUnknownCommandException(commandType);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        } catch (DateTimeException dateTimeException) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            throw new LukeException(\"Please enter the date and time in the format \u0027DD-MM-YYYY HHMM\u0027!\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        } catch (Exception exception) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            throw new LukeException(\"Unable to read command. Please enter it in the correct format!\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    private static Command parseTodoCommand(List\u003cString\u003e commandSplit) throws LukeUnknownCommandException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            String description \u003d commandSplit.get(1);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            return new AddCommand(new Todo(description));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            throw new LukeUnknownCommandException(commandSplit.get(0));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "}"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "gsmoon97": 82
    }
  },
  {
    "path": "src/main/java/luke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "package luke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.exception.LukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public Storage (String filePath) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        // what if filePath is corrupted?"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     * Reads task list from the file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     * @return Latest task list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public List\u003cTask\u003e load() throws LukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        // if data folder does not exist"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        // create a new folder"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        // if file does not exist"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        // create a new file"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        try (BufferedReader br \u003d new BufferedReader(new FileReader(filePath))) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            String readLine \u003d null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            while((readLine \u003d br.readLine()) !\u003d null){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                Task parsedTask \u003d Parser.parseTask(readLine);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                tasks.add(parsedTask);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            throw new LukeException(e.getMessage());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        catch (IOException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "           throw new LukeException(e.getMessage());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     * Writes task list to the file."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     * @param tasks newly updated task list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public void save(TaskList tasks) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        try (BufferedWriter bw \u003d new BufferedWriter(new FileWriter(filePath, false))) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            // write task to hard disk (./data/tasks.txt)"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            // for each task inside the TaskList, toDataString, then write to file"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            String dataString \u003d \"\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                dataString +\u003d tasks.getTask(i).toDataString() + \"\\n\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            bw.write(dataString);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            bw.flush();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gsmoon97": 65
    }
  },
  {
    "path": "src/main/java/luke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "package luke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    protected List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     * Retrieves the task that corresponds to the given index."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     * @param i index of the task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     * @return The task that corresponds to the given index"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public Task getTask(int i) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        return this.tasks.get(i);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     * Retrieves the number of tasks inside the current tasklist."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     * @return The size of tasks inside the current tasklist"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public Task deleteTask(int taskNumber) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        int idx \u003d taskNumber - 1;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        Task deletedTask \u003d this.tasks.get(idx);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        this.tasks.remove(idx);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        return deletedTask;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public Task doTask(int taskNumber) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        int idx \u003d taskNumber - 1;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        Task doneTask \u003d this.tasks.get(idx);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        doneTask.markAsDone();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        return doneTask;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public void findTask(String input) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            Task current \u003d this.tasks.get(i);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            if (current.getDescription().contains(input)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                result.add(current);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        if (result.size() \u003c 1) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            //return error message"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            String todoSummary \u003d \"Here are the tasks in your list.\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            for (int i \u003d 0; i \u003c result.size(); i++) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                Task current \u003d result.get(i);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                todoSummary +\u003d String.format(\"%d.%s\\n\", i + 1, current);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            System.out.printf(todoSummary);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gsmoon97": 80
    }
  },
  {
    "path": "src/main/java/luke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "package luke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public String showWelcome() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        return \"Hey there! I\u0027m Luke.\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                + \"Please tell me what to do.\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public String showError(String msg) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//        return \"An unexpected error was encountered while loading data file.\\nPlease try again.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        System.out.println(\"loading error\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public String showAddResult(Task newTask, int numOfTasks) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        assert numOfTasks \u003e\u003d 0 : \"Number of tasks should not be negative\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        return String.format(\"The following task has been successfully added.\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                + \"-\u003e %s\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                + \"Now you have %d tasks in your list.\\n\", newTask, numOfTasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public String showDeleteResult(Task newTask, int numOfTasks) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        assert numOfTasks \u003e\u003d 0 : \"Number of tasks should not be negative\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        return String.format(\"The following task has been successfully deleted.\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                + \"-\u003e %s\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                + \"Now you have %d tasks in your list.\\n\", newTask, numOfTasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public String showDoneResult(Task newTask) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        return String.format(\"The following task has been successfully marked as done.\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                + \"-\u003e %s\\n\", newTask);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public String showListResult(TaskList tasks) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        if (tasks.getSize() \u003c 1) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            return \"You don\u0027t have any tasks in your list :(\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            String taskSummary \u003d \"Here are the tasks in your list.\\n\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                Task current \u003d tasks.getTask(i);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                taskSummary +\u003d String.format(\"-\u003e %d.%s\\n\", i + 1, current);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            return String.format(\"%s\", taskSummary);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public String showExitResult() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gsmoon97": 60
    }
  },
  {
    "path": "src/main/java/luke/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "package luke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.exception.LukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    protected Task task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public String execute(Storage storage, TaskList tasks, Ui ui) throws LukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            tasks.add(this.task);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            return ui.showAddResult(this.task, tasks.getSize());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        } catch (DateTimeException dateTimeException) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            throw new LukeException(\"Please enter a valid date format.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gsmoon97": 28
    }
  },
  {
    "path": "src/main/java/luke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "package luke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.exception.LukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public abstract String execute(Storage storage, TaskList taskList, Ui ui) throws LukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gsmoon97": 12
    }
  },
  {
    "path": "src/main/java/luke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "package luke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.exception.LukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    protected int taskNumber;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public DeleteCommand(int taskNumber) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public String execute(Storage storage, TaskList tasks, Ui ui) throws LukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            Task deletedTask \u003d tasks.deleteTask(this.taskNumber);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            return ui.showDeleteResult(deletedTask, tasks.getSize());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            throw new LukeException(\"Please enter a valid task number.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gsmoon97": 27
    }
  },
  {
    "path": "src/main/java/luke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "package luke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.exception.LukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    protected int taskNumber;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public DoneCommand(int taskNumber) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public String execute(Storage storage, TaskList tasks, Ui ui) throws LukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            Task doneTask \u003d tasks.doTask(this.taskNumber);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            return ui.showDoneResult(doneTask);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            throw new LukeException(\"Please enter a valid task number.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gsmoon97": 27
    }
  },
  {
    "path": "src/main/java/luke/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "package luke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.exception.LukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public String execute(Storage storage, TaskList tasks, Ui ui) throws LukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        return ui.showExitResult();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gsmoon97": 19
    }
  },
  {
    "path": "src/main/java/luke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "package luke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.exception.LukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    protected TaskList tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public String execute(Storage storage, TaskList tasks, Ui ui) throws LukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        return ui.showListResult(tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gsmoon97": 21
    }
  },
  {
    "path": "src/main/java/luke/exception/LukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "package luke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "public class LukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public LukeException(String msg) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gsmoon97": 7
    }
  },
  {
    "path": "src/main/java/luke/exception/LukeUnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "package luke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "public class LukeUnknownCommandException extends LukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public LukeUnknownCommandException(String command) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        super(String.format(\"Sorry, \u0027%s\u0027 is an invalid command. Please type in a valid command.\", command));"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gsmoon97": 7
    }
  },
  {
    "path": "src/main/java/luke/gui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "package luke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public static DialogBox getLukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gsmoon97": 61
    }
  },
  {
    "path": "src/main/java/luke/gui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "package luke.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.Luke;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import luke.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": " * Controller for duke.MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    private final double DIALOG_BOX_SPACING \u003d 5.0;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    private Luke luke;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/userIcon.jpg\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    private Image lukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/lukeIcon.jpg\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        });"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        });"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public void setLuke(Luke l) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        luke \u003d l;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     * containing Duke\u0027s reply and then appends them to the dialog"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     * container. Clears the user input after processing."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//        String welcome \u003d luke.getUi().showWelcome();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "//        dialogContainer.getChildren().add(DialogBox.getLukeDialog(welcome, lukeImage));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        String response \u003d luke.getResponse(input);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                DialogBox.getLukeDialog(response, lukeImage)"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        );"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        dialogContainer.setSpacing(DIALOG_BOX_SPACING);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gsmoon97": 68
    }
  },
  {
    "path": "src/main/java/luke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "package luke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public Deadline(String description, LocalDateTime by) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        super(TaskType.DEADLINE, description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        return stringifyBy();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public String stringifyBy() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        return by.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public String toDataString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        return String.format(\"D|%s|%s\", super.toDataString(), this.getBy());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + stringifyBy() + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gsmoon97": 32
    }
  },
  {
    "path": "src/main/java/luke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "package luke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        super(TaskType.EVENT, description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public String toDataString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        return String.format(\"E|%s|%s\", super.toDataString(), this.getAt());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gsmoon97": 24
    }
  },
  {
    "path": "src/main/java/luke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "package luke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    protected TaskType taskType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public Task(TaskType taskType, String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public TaskType getTaskType() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        return this.taskType;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        this.isDone \u003d true; //mark the progress as done"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public String toDataString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        int isDone \u003d this.isDone ? 1 : 0;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        return String.format(\"%d|%s\", isDone, this.getDescription());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        return String.format(\"[%s] %s\", this.getStatusIcon(), this.getDescription());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gsmoon97": 39
    }
  },
  {
    "path": "src/main/java/luke/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "package luke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    EVENT;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gsmoon97": 7
    }
  },
  {
    "path": "src/main/java/luke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "package luke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        super(TaskType.TODO, description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public String toDataString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        return String.format(\"T|%s|\", super.toDataString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gsmoon97": 18
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "gsmoon97": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"luke.gui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            \u003cFont name\u003d\"Menlo Regular\" size\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "         \u003c/font\u003e\u003c/TextField\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "gsmoon97": 23
    }
  },
  {
    "path": "src/test/java/LukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "public class LukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public void dummyTest1(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        assertEquals(1, 1);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    public void dummyTest2(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gsmoon97": 15
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "java -classpath ../bin luke.Luke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gsmoon97"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 31,
      "gsmoon97": 3
    }
  }
]
