[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     * Constructor for Deadline."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     * @param description Deadline task description"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     * @param by          Deadline for task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by:\" + by + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rolandyuwy": 19
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "import javax.annotation.processing.SupportedSourceVersion;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": " * Duke, more commonly known as Duck, is a Personal Assistant Chat Bot that"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": " * helps a person to keep track of various tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": " * Contains static attribute stored_task which stores task input from user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": " **/"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    public static final List\u003cTask\u003e stored_task \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    public static final String line \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    //Represents command inputs as constants"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    public enum Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        LIST(\"list\"), BYE(\"bye\"), DELETE(\"delete\"), DONE(\"done\"),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        TODO(\"todo\"), DEADLINE(\"deadline\"), EVENT(\"event\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        private final String input;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        private Command(String input) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "            this.input \u003d input;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        public String getInput() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "            return input;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     * Lists stored task by looping through stored_task, along with their status."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    public static void listStoredTasks() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        if (stored_task.isEmpty()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "            System.out.println(\"No tasks stored...\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "            System.out.println(line);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "            System.out.println(\"Quack! Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "            int count \u003d 1;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "            for (Task task : stored_task) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                System.out.println(count + \". \" + task);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "            System.out.println(line);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    public static void displayTaskCount() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        int numOfTasks \u003d stored_task.size();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        if (numOfTasks \u003d\u003d 1) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "            System.out.println(\"My duck senses tell me you have 1 task in the list.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "            System.out.println(\"My duck senses tell me you have \" + numOfTasks + \" tasks in the list.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     * Adds input task into stored_task."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     * @param newTask Input task from user to be stored."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    public static void addTask(Task newTask) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        stored_task.add(newTask);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        System.out.println(\"Quack! I have added: \" + newTask);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        displayTaskCount();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     * Checks if string contains only numbers."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     * @param input input string to check"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     * @return if string contains only numbers"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    public static boolean isNumber(String input){"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        return input.matches(\"[0-9]+\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     * Marks task as done."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     * @param taskNumber Task number of task to be marked as done."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    public static void markTaskAsDone(int taskNumber) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "            if (taskNumber \u003c\u003d 0 || taskNumber \u003e stored_task.size()) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                throw new DukeException(\"Wrong task number!\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                Task t \u003d stored_task.get(taskNumber - 1);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                if (t.checkIfDone()) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                    throw new DukeException(\"This task is already done: \" + t.getDescription());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                    t.markAsDone();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                    System.out.println(line);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                    System.out.println(\"Quack! I have marked this task as done: \\n\" + t);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                    System.out.println(line);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "            System.out.println(line);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "            System.out.println(line);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     * Deletes input task from stored_task."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     * @param taskNumber Task number of task to be deleted."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    public static void deleteTask(int taskNumber) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "            if (taskNumber \u003c\u003d 0 || taskNumber \u003e stored_task.size()) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                throw new DukeException(\"Wrong task number!\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                Task taskToDelete \u003d stored_task.get(taskNumber - 1);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                stored_task.remove(taskToDelete);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                System.out.println(line);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                System.out.println(\"Quack! I have deleted this task: \\n\" + taskToDelete);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                displayTaskCount();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                System.out.println(line);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "            System.out.println(line);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "            System.out.println(line);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     * Prints greeting message."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     * Scans for commands entered by the user, then stores input task into stored_task for 3 types of tasks:"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     * ToDo, Deadline and Event."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     * Upon user command input \"done \" followed by the task number, task will be marked as done."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     * Upon user command input \"list\", stored task will be listed."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     * Upon user command input \"bye\", system is exited."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     * Upon user command input \"delete\", task is deleted."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        String greeting_message \u003d line +"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                \"\\n Quack! I am Duck\" +"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                \"\\n How can I help you today?\\n\" + line;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        String exit_message \u003d line +"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                \"\\n Waddling off now. See you soon! \\n\" + line;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        System.out.println(greeting_message);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                if (input.equals(Command.BYE.getInput())) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                    System.out.println(exit_message);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                } else if (input.equals(Command.LIST.getInput())) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                    listStoredTasks();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                } else if (input.startsWith(Command.DONE.getInput())) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                    if (input.length() \u003e 4) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                        if (!input.substring(4, 5).equals(\" \")) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                            throw new DukeException(\"My duck instincts tell me your input makes no sense...\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                            String taskNumberString \u003d input.substring(5);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                            if (isNumber(taskNumberString)) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                                int taskNumber \u003d Integer.parseInt(input.substring(5));"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                                markTaskAsDone(taskNumber);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                                throw new DukeException(\"You need to input the task number!\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                        throw new DukeException(\"You need to include your task number to mark done...\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                } else if (input.startsWith(Command.DELETE.getInput())) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                    if (input.length() \u003e 6) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                        if (!input.substring(6, 7).equals(\" \")) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                            throw new DukeException(\"My duck instincts tell me your input makes no sense...\");"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                            String taskNumberString \u003d input.substring(7);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                            if (isNumber(taskNumberString)) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                                int taskNumber \u003d Integer.parseInt(input.substring(7));"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                                deleteTask(taskNumber);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                                throw new DukeException(\"You need to input the task number!\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                        throw new DukeException(\"You need to include your task number to delete...\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                } else if (input.startsWith(Command.TODO.getInput())) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                    if (input.length() \u003e 4) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                        if (!input.substring(4, 5).equals(\" \")) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                            throw new DukeException(\"My duck instincts tell me your input makes no sense...\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                            ToDo newTask \u003d new ToDo(input.substring(5));"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                            addTask(newTask);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                        throw new DukeException(\"Your todo description can\u0027t be empty...\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                } else if (input.startsWith(Command.DEADLINE.getInput())) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                    if (input.length() \u003e 8) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                        if (!input.substring(8, 9).equals(\" \")) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                            throw new DukeException(\"My duck instincts tell me your input makes no sense...\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                            int indexOfBy \u003d input.indexOf(\"/by\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                            if (indexOfBy \u003d\u003d -1) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                                throw new DukeException(\"Did you include /by?\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                                String description \u003d input.substring(9, indexOfBy);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                                String by \u003d input.substring(indexOfBy + 3);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                                Deadline newTask \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                                addTask(newTask);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                        throw new DukeException(\"Your deadline description can\u0027t be empty...\");"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                } else if (input.startsWith(Command.EVENT.getInput())) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                    if (input.length() \u003e 5) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                        if (!input.substring(5, 6).equals(\" \")) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                            throw new DukeException(\"My duck instincts tell me your input makes no sense...\");"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                            int indexOfAt \u003d input.indexOf(\"/at\");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                            if (indexOfAt \u003d\u003d -1) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                                throw new DukeException(\"Did you include /at?\");"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                                String description \u003d input.substring(6, indexOfAt);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                                String at \u003d input.substring(indexOfAt + 3);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                                Event newTask \u003d new Event(description, at);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                                addTask(newTask);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                        throw new DukeException(\"Your event description can\u0027t be empty...\");"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                    throw new DukeException(\"My duck instincts tell me your input makes no sense...\");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                System.out.println(line);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "                System.out.println(line);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rolandyuwy": 246,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": " * Represents exceptions specific to Duke."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": " **/"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    public DukeException(String message){"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rolandyuwy": 10
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     * Constructor for Event."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     * @param description Event task description"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     * @param at Time frame for event."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at:\" + at + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rolandyuwy": 19
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": " * Contains task description and completion status of task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": " **/"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     * Constructor for Task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     * @param description Task description"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     * Retrieves status and returns icon corresponding to status."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     * @return Icon corresponding to status."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        return (isDone ? \"✓\" : \"X\"); //return tick or X symbols"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     * Gets task description."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     * @return Task description."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     * Marks task as done."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     * Checks if task is done."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     * @return If Task is Done."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    public boolean checkIfDone() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        return getStatusIcon() + \" \" + description;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rolandyuwy": 55
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     * Constructor for ToDo."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     *"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     * @param description ToDo task description"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "     **/"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rolandyuwy": 15
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "read"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "blah"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "event project /at Mon 2-4pm"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "deadline do hw /by no idea"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "delete two"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "rolandyuwy": 15
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "dir /s /B ..\\src\\main\\java\\*.java \u003e sources.txt"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin @sources.txt"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "pause"
      }
    ],
    "authorContributionMap": {
      "rolandyuwy": 4,
      "-": 20
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "C:\\Users\\Admin\\Desktop\\CS2103T\\repos\\ip\\src\\main\\java\\Deadline.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "C:\\Users\\Admin\\Desktop\\CS2103T\\repos\\ip\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "C:\\Users\\Admin\\Desktop\\CS2103T\\repos\\ip\\src\\main\\java\\DukeException.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "C:\\Users\\Admin\\Desktop\\CS2103T\\repos\\ip\\src\\main\\java\\Event.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "C:\\Users\\Admin\\Desktop\\CS2103T\\repos\\ip\\src\\main\\java\\Task.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rolandyuwy"
        },
        "content": "C:\\Users\\Admin\\Desktop\\CS2103T\\repos\\ip\\src\\main\\java\\ToDo.java"
      }
    ],
    "authorContributionMap": {
      "rolandyuwy": 6
    }
  }
]
