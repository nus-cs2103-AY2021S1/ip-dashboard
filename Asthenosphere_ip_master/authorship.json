[
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private final Task task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    AddCommand(Task task) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        String output \u003d \"Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        output +\u003d (\"\\t \" + task.toString() + \"\\n\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        output +\u003d (\"\\t Now you have \" + tasks.getSize() + (tasks.getSize() \u003e 1 ? \" tasks\" : \" task\") + \" in the list.\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        ui.displayMessage(output);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            storage.writeData(tasks.getTasks());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            throw new StorageAccessException(\"☹ OOPS!!! Something went wrong when saving the new task.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 23
    }
  },
  {
    "path": "src/main/java/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        ui.bye();"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 11
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 9
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private LocalDate endDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    Deadline(String description, LocalDate endDate) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    Deadline(String description, LocalDate endDate, String completionStatus) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        super(description, completionStatus);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    String getType() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    LocalDate getDate() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return endDate;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + endDate.format(DateTimeFormatter.ofPattern(\"MMMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 31
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    DeleteCommand(int index) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            if (index \u003e tasks.getSize()) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                throw new InvalidArgumentException(\"☹ OOPS!!! The task index you give is not found.\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            String output \u003d \"Noted. I\u0027ve removed this task:\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            output +\u003d (\"\\t\" + tasks.getTask(index) + \"\\n\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            output +\u003d (\"\\tNow you have \" + (tasks.getSize() - 1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            ui.displayMessage(output);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            tasks.deleteTask(index);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            storage.writeData(tasks.getTasks());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } catch (InvalidArgumentException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            ui.displayMessage(e.getMessage());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            throw new StorageAccessException(\"☹ OOPS!!! Something went wrong when removing the task from storage.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 27
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    DoneCommand(int index) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            if (index \u003e tasks.getSize()) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                throw new InvalidArgumentException(\"☹ OOPS!!! The task index you give is not found.\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            tasks.markDone(index);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            String msg \u003d \"Nice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            msg +\u003d (\"\\t \" + tasks.getTask(index));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            ui.displayMessage(msg);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            ui.displayMessage(e.getMessage());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 22
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    Duke() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        storage \u003d new Storage(\"data/data.txt\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            tasks \u003d new TaskList(storage.processStorage());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void run() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                ui.displayMessage(e.getMessage());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 40,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    Event(String description, LocalDate date) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    Event(String description, LocalDate date, String completionStatus) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        super(description, completionStatus);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    String getType() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    LocalDate getDate() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + date.format(DateTimeFormatter.ofPattern(\"MMMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 31
    }
  },
  {
    "path": "src/main/java/InvalidArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class InvalidArgumentException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public InvalidArgumentException(String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 5
    }
  },
  {
    "path": "src/main/java/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    InvalidCommandException(String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 5
    }
  },
  {
    "path": "src/main/java/InvalidTaskTypeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class InvalidTaskTypeException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public InvalidTaskTypeException(String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 5
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            ui.displayMessage(\"No tasks on your agenda.\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            ui.displayMessage(String.format(\"Here are the tasks in your agenda:\\n%s\", tasks.listTasks()));"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 10
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        String[] fullCommandArray \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        fullCommand \u003d fullCommand.strip();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        if (fullCommand.equals(\"bye\")) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } else if (fullCommand.equals(\"list\")) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } else if (fullCommand.equals(\"show\")) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            throw new InvalidArgumentException(\"☹ OOPS!!! The show command requires a date in yyyy-mm-dd.\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } else if (fullCommandArray[0].equals(\"show\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                LocalDate date \u003d LocalDate.parse(fullCommandArray[1]);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                return new ShowCommand(date);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                throw new InvalidArgumentException(\"☹ OOPS!!! The show command requires a date in yyyy-mm-dd.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } else if (fullCommand.equals(\"done\") || fullCommand.equals(\"delete\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            throw new InvalidCommandException(\"☹ OOPS!!! The index of a task cannot be empty.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } else if (fullCommandArray[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            return new DoneCommand(Integer.parseInt(fullCommandArray[1]));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } else if (fullCommandArray[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            return new DeleteCommand(Integer.parseInt(fullCommandArray[1]));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            String type \u003d fullCommand.split(\" \")[0];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            String temp \u003d fullCommand.strip();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            if (temp.equals(TaskType.TODO.getType()) || temp.equals(TaskType.DEADLINE.getType()) || temp.equals(TaskType.EVENT.getType())) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                throw new InvalidArgumentException(\"☹ OOPS!!! The description of a \" + temp + \" cannot be empty.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            } else if (temp.equals(\"\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                throw new InvalidTaskTypeException(\"☹ OOPS!!! The type of a task cannot be empty.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            if (type \u003d\u003d null || (!type.equals(TaskType.TODO.getType()) \u0026\u0026 !type.equals(TaskType.DEADLINE.getType()) \u0026\u0026 !type.equals(TaskType.EVENT.getType()))) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                throw new InvalidTaskTypeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            String details \u003d fullCommand.substring(type.length());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            if (type.equals(TaskType.TODO.getType())) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                ToDo t \u003d new ToDo(details.strip());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                return new AddCommand(t);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            } else if (type.equals(TaskType.DEADLINE.getType())) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                String[] detailsArray \u003d details.split(\"/by\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                LocalDate date;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                    date \u003d LocalDate.parse(detailsArray[1].strip());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                    throw new InvalidArgumentException(\"☹ OOPS!!! Please enter a date in yyyy-mm-dd format.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                Deadline d \u003d new Deadline(detailsArray[0].strip(), date);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                return new AddCommand(d);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                String[] detailsArray \u003d details.split(\"/at\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                LocalDate date;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                    date \u003d LocalDate.parse(detailsArray[1].strip());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                    throw new InvalidArgumentException(\"☹ OOPS!!! Please enter a date in yyyy-mm-dd format.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                Event e \u003d new Event(detailsArray[0].strip(), date);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                return new AddCommand(e);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 66
    }
  },
  {
    "path": "src/main/java/ShowCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class ShowCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private final LocalDate date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    ShowCommand(LocalDate date) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        ui.displayMessage(tasks.showTasksOnDate(date));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 14
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private final String FILE_PATH;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    Storage(String path) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        FILE_PATH \u003d path;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            File f \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            if (!f.exists()) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                if (f.getParentFile().mkdirs() \u0026\u0026 f.createNewFile()) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                    System.out.println(\"\\tStorage space for you tasks has been initialized successfully.\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            System.out.println(\"Oops! Something went wrong when loading your tasks from storage.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    List\u003cTask\u003e processStorage() throws IOException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        File f \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            String data \u003d sc.nextLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            String[] dataArray \u003d data.split(\" \\\\| \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            switch (dataArray[0]) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                    list.add(new ToDo(dataArray[2], dataArray[1]));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                    list.add(new Event(dataArray[2], LocalDate.parse(dataArray[3]), dataArray[1]));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                    list.add(new Deadline(dataArray[2], LocalDate.parse(dataArray[3]), dataArray[1]));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                    throw new IOException(\"Invalid data\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void writeData(List\u003cTask\u003e list) throws IOException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        FileWriter fw \u003d new FileWriter(\"data/data.txt\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        for (Task t: list) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            String toWrite \u003d \"\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            toWrite +\u003d (t.getType() + \" | \" + (t.isCompleted ? \"1\" : \"0\") + \" | \" + t.description + (t.getDate() !\u003d null ? (\" | \" + t.getDate()) : \"\") + \"\\n\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            fw.write(toWrite);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 60
    }
  },
  {
    "path": "src/main/java/StorageAccessException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class StorageAccessException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public StorageAccessException(String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 5
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    protected boolean isCompleted;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        this.isCompleted \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    Task(String description, String completionStatus) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        this.isCompleted \u003d completionStatus.equals(\"1\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    String getStatusIcon() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return (isCompleted ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    String getType() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    LocalDate getDate() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void markAsDone() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        isCompleted \u003d true;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 37
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.util.concurrent.atomic.AtomicInteger;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "enum TaskType {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    TODO(\"todo\"),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    EVENT(\"event\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    DEADLINE(\"deadline\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private TaskType(String type) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    String getType() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    TaskList() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        list \u003d tasks;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void addTask(Task task) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void markDone(int index) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        this.list.get(index - 1).markAsDone();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    int size() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    Task getTask(int index) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return list.get(index - 1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    int getSize() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return new ArrayList\u003c\u003e(list);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    String listTasks() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        for (int i \u003d 0; i \u003c this.list.size(); i++) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            output.append(\"\\t \").append(i + 1).append(\".\").append(list.get(i)).append(i \u003d\u003d list.size() - 1 ? \"\" : \"\\n\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    String showTasksOnDate(LocalDate date) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        Stream\u003cTask\u003e filtered \u003d list.stream().filter(task -\u003e task.getDate().equals(date));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        AtomicInteger i \u003d new AtomicInteger(1);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        filtered.forEach(task -\u003e {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            output.append(\"\\t \").append(i.getAndIncrement()).append(\".\").append(task).append(\"\\n\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        });"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        if (i.intValue() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            return \"\\t No tasks found on \" + date.format(DateTimeFormatter.ofPattern(\"MMMM d yyyy\"));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void deleteTask(int index) throws InvalidArgumentException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        this.list.remove(index - 1);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 89
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    ToDo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    ToDo(String description, String completionStatus) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        super(description, completionStatus);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    String getType() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 19
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    Scanner s;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    Ui() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        s \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void displayMessage(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        System.out.println(\"\\t \" + message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void showLogo() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        String logo \u003d \"\\t██████╗ ██╗   ██╗██╗  ██╗███████╗\\n\" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                \"\\t██╔══██╗██║   ██║██║ ██╔╝██╔════╝\\n\" +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                \"\\t██║  ██║██║   ██║█████╔╝ █████╗  \\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                \"\\t██║  ██║██║   ██║██╔═██╗ ██╔══╝  \\n\" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                \"\\t██████╔╝╚██████╔╝██║  ██╗███████╗\\n\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                \"\\t╚═════╝  ╚═════╝ ╚═╝  ╚═╝╚══════╝\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        System.out.println(\"\\tHello boss! This is\\n\" + logo);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void showWelcome() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        showLogo();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        System.out.println(\"\\tWhat can I do for you?\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        System.out.println(\"\\t___________________________________________________________________________\\n\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void showLine() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        System.out.println(\"\\t___________________________________________________________________________\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void bye() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        displayMessage(\"Bye. Hope to see you again soon\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    String readCommand() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return s.nextLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 41
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "deadline project 1 /by Thursday"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "delete 5"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "delete"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "blah"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "todo"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "event"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "event project meeting /at 2020-08-24"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "deadline iP week 3 /by 2020-08-27"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 18
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "# delete saved data from previous run"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "if [ -e \"./data/\" ]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "  rm -rf data/"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "fi"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "if"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "  ! ("
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003esources.txt"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "  )"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 11,
      "-": 37
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/InvalidTaskTypeException.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/TaskList.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/ByeCommand.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/Storage.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/DeleteCommand.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/ListCommand.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/Parser.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/InvalidArgumentException.java"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/InvalidCommandException.java"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/Command.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/AddCommand.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/Ui.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/Event.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/Task.java"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/Duke.java"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/Deadline.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/DoneCommand.java"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/ToDo.java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/StorageAccessException.java"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/ShowCommand.java"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/DukeException.java"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 21
    }
  }
]
