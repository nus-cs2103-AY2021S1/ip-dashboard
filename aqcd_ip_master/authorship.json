[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "aqcd": 2,
      "-": 24
    }
  },
  {
    "path": "src/main/java/duke/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": " * Handles addition of deadline-based Tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": "public class AddDeadlineCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /** duke.Command details */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    private final String[] instructions;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for duke.AddDeadlineCommand."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param instructions Contains description and deadline."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public AddDeadlineCommand(String[] instructions) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        this.instructions \u003d instructions;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Executes the AddDeadline duke.Command, adding a new duke.Task of type duke.Deadline with description and date."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param tasks duke.TaskList to be added to."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param ui For user interaction."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param storage To store the added task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        String[] deadlineInfo \u003d instructions[1].split(\" /by \", 2); // [name, deadline]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        if (deadlineInfo.length \u003c 2) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            ui.conditionError(Constants.TaskTypes.DEADLINE);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            Task deadline \u003d new Deadline(deadlineInfo[0], LocalDate.parse(deadlineInfo[1]));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            tasks.addTask(deadline);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            ui.invalidDateError();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aqcd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aqcd": 42
    }
  },
  {
    "path": "src/main/java/duke/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": " * Handles addition of event-based Tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": "public class AddEventCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /** duke.Command details */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    private final String[] instructions;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for duke.AddEventCommand."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param instructions Contains description and deadline."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public AddEventCommand(String[] instructions) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        this.instructions \u003d instructions;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Executes the AddEvent duke.Command, adding a new duke.Task of type duke.Event with description and date."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param tasks duke.TaskList to be added to."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param ui For user interaction."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param storage To store the added task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        String[] eventInfo \u003d instructions[1].split(\" /at \", 2); // [name, date]"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        if (eventInfo.length \u003c 2) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            ui.conditionError(Constants.TaskTypes.EVENT);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            Task event \u003d new Event(eventInfo[0], LocalDate.parse(eventInfo[1]));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            tasks.addTask(event);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            ui.invalidDateError();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aqcd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aqcd": 42
    }
  },
  {
    "path": "src/main/java/duke/AddTodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": " * Handles addition of todo-based Tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": "public class AddTodoCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /** duke.Command details */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    private final String[] instructions;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for duke.AddTodoCommand."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param instructions Contains description."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public AddTodoCommand(String[] instructions) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        this.instructions \u003d instructions;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Executes the AddTodo duke.Command, adding a new duke.Task of type duke.Todo with description."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param tasks duke.TaskList to be added to."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param ui For user interaction."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param storage To store the added task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        Task todo \u003d new Todo(instructions[1]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        tasks.addTask(todo);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aqcd"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "aqcd": 32
    }
  },
  {
    "path": "src/main/java/duke/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": " * Handles closing of application."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for duke.ByeCommand."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public ByeCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Executes the Bye duke.Command, ending the program."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param tasks duke.TaskList to be added to."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param ui For user interaction."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param storage To store the added task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        ui.bye();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aqcd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aqcd": 25
    }
  },
  {
    "path": "src/main/java/duke/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": " * Provides contract for duke.Command subclasses."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for duke.Command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Contract for duke.Command execution."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param tasks duke.TaskList to be added to."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param ui For user interaction."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param storage To store the added task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aqcd": 21
    }
  },
  {
    "path": "src/main/java/duke/Constants.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": " * Contains Enums used in multiple locations."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": "public class Constants {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Type of Tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public enum TaskTypes {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        TODO, DEADLINE, EVENT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Type of Commands."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public enum CommandType {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        BYE, LIST, DELETE, DONE, TODO, DEADLINE, EVENT, FIND"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aqcd": 21
    }
  },
  {
    "path": "src/main/java/duke/DatedTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": " * Handles addition of date-based Tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": "public class DatedTask extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /** Date of task */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for Dated Tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param name Description of duke.Task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param date Date of duke.Task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public DatedTask(String name, LocalDate date) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for Dated Tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param name Description of duke.Task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param completed State of completion of duke.Task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param date Date of duke.Task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public DatedTask(String name, boolean completed, LocalDate date) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        super(name, completed);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Represents duke.Task in String form."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @return String representation of duke.Task object."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public String format() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        return super.format() + SAVE_DELIMITER + this.date.format(DateTimeFormatter.ofPattern(\"YYYY-MM-dd\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aqcd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aqcd": 43
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": " * Handles deadline-based Tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": "public class Deadline extends DatedTask {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for duke.Deadline-based Tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param name Description of duke.Task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param deadline duke.Deadline of duke.Task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public Deadline(String name, LocalDate deadline) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        super(name, deadline);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for duke.Deadline-based Tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param name Description of duke.Task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param completed State of completion of duke.Task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param deadline duke.Deadline of duke.Task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public Deadline(String name, boolean completed, LocalDate deadline) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        super(name, completed, deadline);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Represents duke.Deadline in format to be saved."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @return Saved representation of duke.Deadline object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public String format() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        return \"D\" + SAVE_DELIMITER + super.format();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Represents duke.Deadline in String form."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @return String representation of duke.Deadline object."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aqcd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aqcd": 47
    }
  },
  {
    "path": "src/main/java/duke/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": " * Handles deletion of Tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /** duke.Command details */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    private final String[] instructions;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for duke.DeleteCommand."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param instructions Contains index of duke.Task to be deleted."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public DeleteCommand(String[] instructions) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        this.instructions \u003d instructions;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Executes the Delete duke.Command, deleting the duke.Task at the index provided by the instructions."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param tasks duke.TaskList to be updated."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param ui For user interaction."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param storage To remove the deleted task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        if (instructions.length \u003c 2) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            ui.incompleteInstructionError();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        int index \u003d Integer.parseInt(instructions[1]) - 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        if (index \u003e\u003d tasks.getSize()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            ui.deleteError();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            tasks.deleteTask(index);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aqcd"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "aqcd": 39
    }
  },
  {
    "path": "src/main/java/duke/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": " * Handles completion of Tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /** duke.Command details */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    private final String[] instructions;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for duke.DoneCommand."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param instructions Contains index of duke.Task to be completed."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public DoneCommand(String[] instructions) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        this.instructions \u003d instructions;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Executes the Done duke.Command, completing the duke.Task at the index provided by the instructions."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param tasks duke.TaskList to be updated."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param ui For user interaction."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param storage To update the completed task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        if (instructions.length \u003c 2) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            ui.incompleteInstructionError();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        int index \u003d Integer.parseInt(instructions[1]) - 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        tasks.completeTask(index);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aqcd"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "aqcd": 35
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": " * Controls application."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /** Local task store */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /** List of tasks */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /** duke.Ui to interact with user */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for duke.DeleteCommand."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param filepath Contains filepath of local data storage."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public Duke(String filepath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        storage \u003d new Storage(filepath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Initialises the program."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param args Unused."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Runs event loop to listen for user input, until the user invokes a duke.ByeCommand."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            String input \u003d ui.readCommand();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                Command cmd \u003d parser.parse(input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                cmd.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aqcd": 52,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": " * Handles exceptions generated by application."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for DukeExcpetion."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param msg Contains error message."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aqcd": 15
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": " * Handles event-based Tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": "public class Event extends DatedTask {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for duke.Event-based Tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param name Description of duke.Task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param date Date of duke.Task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public Event(String name, LocalDate date) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        super(name, date);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for duke.Event-based Tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param name Description of duke.Task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param completed State of completion of duke.Task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param date Date of duke.Task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public Event(String name, boolean completed, LocalDate date) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        super(name, completed, date);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Represents duke.Event in format to be saved."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @return Saved representation of duke.Event object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public String format() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        return \"E\" + SAVE_DELIMITER + super.format();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Represents duke.Event in String form."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @return String representation of duke.Event object."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aqcd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aqcd": 47
    }
  },
  {
    "path": "src/main/java/duke/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": " * Handles searching of tasks given a search phrase."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /** duke.Command details */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    private final String[] instructions;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for duke.FindCommand."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param instructions Contains search phrase."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public FindCommand(String[] instructions) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        this.instructions \u003d instructions;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Executes the Find duke.Command, displaying a list of tasks that have the search phrase."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param tasks duke.TaskList to be searched."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param ui For user interaction."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param storage Unused."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        System.out.println(\"\u003e\u003e Your matching tasks:\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        boolean hasResult \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        for (Task task : tasks.getTasks()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            if (task.name.contains(instructions[1])) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                System.out.println(\"\u003e\u003e \" + i++ + \". \" + task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                hasResult \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        if (!hasResult) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            System.out.println(\"\u003e\u003e No results!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aqcd"
        },
        "content": "}"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "aqcd": 41
    }
  },
  {
    "path": "src/main/java/duke/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": " * Handles display of duke.Task list."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for duke.ListCommand."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Executes the List duke.Command, displaying a list of all Tasks the user has."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param tasks duke.TaskList to be referenced."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param ui For user interaction."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param storage Unused."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        for (Task task : tasks.getTasks()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            System.out.println(\"\u003e\u003e \" + i++ + \". \" + task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aqcd"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "aqcd": 28
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": " * Handles making sense of user input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for duke.Parser."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Converts user input into a command of the appropriate type depending on the leading word"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * of the user input."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param input User input."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @return duke.Command object corresponding to input."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @throws DukeException When user input cannot be parsed."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        String[] chunks \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        String action \u003d chunks[0].toUpperCase();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        Constants.CommandType command;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            command \u003d Constants.CommandType.valueOf(action);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            throw new DukeException(\"\u003e\u003e Oh no!!! I don\u0027t understand this input.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        switch(command) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        case BYE:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            if (chunks.length \u003c 2) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                throw new DukeException(\"\u003e\u003e Oh no!!! Delete must have the index of the task you\u0027re deleting!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            return new DeleteCommand(chunks);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            if (chunks.length \u003c 2) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                throw new DukeException(\"\u003e\u003e Oh no!!! Done must have the index of the task you\u0027re completing!\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            return new DoneCommand(chunks);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            if (chunks.length \u003c 2) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                throw new DukeException(\"\u003e\u003e Oh no!!! A todo must have a description!\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            return new AddTodoCommand(chunks);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            if (chunks.length \u003c 2) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                throw new DukeException(\"\u003e\u003e Oh no!!! A deadline must have a description and date!\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            return new AddDeadlineCommand(chunks);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            if (chunks.length \u003c 2) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                throw new DukeException(\"\u003e\u003e Oh no!!! An event must have a description and date!\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            return new AddEventCommand(chunks);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        case FIND:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            if (chunks.length \u003c 2) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                throw new DukeException(\"\u003e\u003e Oh no!!! Find needs a search word or phrase!\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            return new FindCommand(chunks);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            throw new DukeException(\"\u003e\u003e Oh no!!! I don\u0027t understand this input.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aqcd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aqcd": 69
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": " * Handles storing Tasks locally and reading from locally stored Tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /** Where the local save file is stored */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    private String filepath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /** List of tasks to be saved */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /** Short form of duke.Task types. */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    private enum TaskSymbols {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        SYMBOL_T, SYMBOL_E, SYMBOL_D"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for duke.Storage."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param filepath Contains path of local storage file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Saves the input list of tasks into a local store."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param tasks List of tasks to be saved."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public void save(TaskList tasks) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filepath);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            for (Task t : tasks.getTasks()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                fw.write(t.format() + \"\\n\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            System.out.println(\"\u003e\u003e Oh no! Your tasks could not be saved!\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Loads a list of tasks from a local store."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @return List of tasks from the local store."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @throws DukeException When file is not found."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public List\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        String directoryErrorMsg \u003d \"\u003e\u003e Something went wrong creating the data directory!\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            String[] directories \u003d filepath.split(\"/\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            StringBuilder path \u003d new StringBuilder();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            for (int i \u003d 0; i \u003c directories.length - 1; i++) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                path.append(directories[i]).append(\"/\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                File directory \u003d new File(path.toString());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                if (!directory.exists()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                    boolean success \u003d directory.mkdir();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                    if (!success) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                        throw new DukeException(directoryErrorMsg);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            File file \u003d new File(filepath);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            if (file.exists()) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                Scanner fr \u003d new Scanner(file);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                while (fr.hasNextLine()) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                    String ln \u003d fr.nextLine();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                    String[] taskInfo \u003d ln.split(Task.ESCAPED_SAVE_DELIMITER);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                    TaskSymbols type \u003d TaskSymbols.valueOf(\"SYMBOL_\" + taskInfo[0]);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                    switch(type) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                    case SYMBOL_T:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                        tasks.add(new Todo(taskInfo[1], Boolean.parseBoolean(taskInfo[2])));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                    case SYMBOL_E:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                        tasks.add(new Event(taskInfo[1], Boolean.parseBoolean(taskInfo[2]),"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                                LocalDate.parse(taskInfo[3])));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                    case SYMBOL_D:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                        tasks.add(new Deadline(taskInfo[1], Boolean.parseBoolean(taskInfo[2]),"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                                LocalDate.parse(taskInfo[3])));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                boolean success \u003d file.createNewFile();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                if (!success) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                    throw new DukeException(directoryErrorMsg);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "aqcd"
        },
        "content": "                }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            return this.tasks;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            throw new DukeException(\"\u003e\u003e Oh no! I can\u0027t find your file!\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            throw new DukeException(\"\u003e\u003e Oh no! The file couldn\u0027t be created for some reason!\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            throw new DukeException(\"\u003e\u003e Oh no! File format seems to be incorrect!\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "aqcd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aqcd": 108
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": " * Handles maintenance and display of duke.Task objects."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /** Separator for task details */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public static String SAVE_DELIMITER \u003d \"|\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /** Escaped version of separator */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public static String ESCAPED_SAVE_DELIMITER \u003d \"\\\\|\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /** Name of task */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /** Completion state of task */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    protected boolean isCompleted;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for Tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param name Description of duke.Task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        this.isCompleted \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for Tasks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param name Description of duke.Task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param completed Completion state of duke.Task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public Task(String name, boolean completed) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        this.isCompleted \u003d completed;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Marks duke.Task as complete."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public void complete() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        this.isCompleted \u003d true;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Gets appropriate status icon based on completion state of the duke.Task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @return Status icon."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        return this.isCompleted ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Represents duke.Task in format to be saved."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @return Saved representation of duke.Task object."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public String format() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        return this.name + SAVE_DELIMITER + this.isCompleted;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Represents duke.Task in String form."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @return String representation of duke.Task object."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + this.name;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aqcd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aqcd": 69
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": " * Handles manipulation of the list of Tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for duke.TaskList."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for duke.TaskList."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param tasks Initial list of tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Gets list of tasks."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @return List of tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Gets size of the list of tasks."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @return Size of list of tasks."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Adds an input task to the list of tasks."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param task duke.Task to be added."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        System.out.println(\"\u003e\u003e Added the task:\\n\u003e\u003e \" + task + \"\\n\u003e\u003e You now have \" + tasks.size() + \" tasks to do!\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Deletes a task to the list of tasks."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param idx Index of task to be deleted."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public void deleteTask(int idx) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        Task task \u003d tasks.get(idx);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        tasks.remove(idx);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        System.out.println(\"\u003e\u003e I\u0027ve eradicated the task:\\n\u003e\u003e \" + task + \"\\n\u003e\u003e You now have \" + tasks.size() + \" tasks to do!\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Marks a task in the list of tasks as completed."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param idx Index of task to be completed."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public void completeTask(int idx) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        tasks.get(idx).complete();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        System.out.println(\"\u003e\u003e Yay! The following task is marked as done:\\n\u003e\u003e \" + tasks.get(idx));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aqcd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aqcd": 72
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": " * Handles todo-based Tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for duke.Todo-type Tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param name Description of duke.Task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public Todo(String name) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for duke.Todo-type Tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param name Description of duke.Task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @param completed Completion state of duke.Task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public Todo(String name, boolean completed) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        super(name, completed);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Represents duke.Todo in format to be saved."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @return Saved representation of duke.Todo object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public String format() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        return \"T\" + SAVE_DELIMITER + super.format();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Represents duke.Todo in String form."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @return String representation of duke.Todo object."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aqcd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aqcd": 42
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": " * Handles interaction with the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Constructor for duke.Ui."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Reads next command from user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * @return Line of user input."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Displays error when user loads the program without an existing saved task list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        System.out.println(\"\u003e\u003e No data storage found. Creating new task list.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Greets the user on application boot."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        System.out.println(\"\u003e\u003e Beep Boop. I am Aq-bot.\\n\u003e\u003e How can I help?\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Says bye to the user when application closes."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public void bye() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        System.out.println(\"\u003e\u003e Bye! Hope I helped!\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Displays error when user enters an invalid date for Dated Tasks."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public void invalidDateError() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        System.out.println(\"\u003e\u003e Please format your date in YYYY-MM-DD format!\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Displays error when user enters an incomplete instruction."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public void incompleteInstructionError() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        System.out.println(\"\u003e\u003e This instruction is incomplete!\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Displays error when user attempts to create a Dated duke.Task without a date."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public void conditionError(Constants.TaskTypes type) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        System.out.println(\"\u003e\u003e Oh no!!! A \" + type.toString().toLowerCase() + \" must have an associated date!\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     * Displays error when user attempts to delete a task that does not exist."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aqcd"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public void deleteError() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        System.out.println(\"\u003e\u003e Oh no!!! That task does not exist!\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "aqcd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aqcd": 75
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public void parser_commandTypeBye_expectedBehaviour() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            Command byeCommand \u003d parser.parse(\"bye\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            assert(byeCommand instanceof ByeCommand);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public void parser_commandTypeList_expectedBehaviour() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            Command listCommand \u003d parser.parse(\"list\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            assert(listCommand instanceof ListCommand);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public void parser_commandTypeDone_expectedBehaviour() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            Command doneCommand \u003d parser.parse(\"done 2\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            assert(doneCommand instanceof DoneCommand);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public void parser_commandTypeDelete_expectedBehaviour() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            Command deleteCommand \u003d parser.parse(\"delete 2\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            assert(deleteCommand instanceof DeleteCommand);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public void parser_commandTypeDelete_exceptionThrown() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e parser.parse(\"delete\"));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public void parser_commandTypeAdd_expectedBehaviour() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            Command addTodoCommand \u003d parser.parse(\"todo Test1\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            assert(addTodoCommand instanceof AddTodoCommand);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            Command addDeadlineCommand \u003d parser.parse(\"deadline Test2 /by 2020-10-10\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            assert(addDeadlineCommand instanceof AddDeadlineCommand);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            Command addEventCommand \u003d parser.parse(\"event Test3 /at 2020-10-10\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            assert(addEventCommand instanceof AddEventCommand);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "aqcd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aqcd": 72
    }
  },
  {
    "path": "src/test/java/duke/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public void storage_testLoad_expectedBehaviour() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        Storage storage \u003d new Storage(\"src/test/resources/storageTest.txt\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            List\u003cTask\u003e tasks \u003d storage.load();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            assertEquals(2, tasks.size());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    public void storage_testLoad_exceptionThrown() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        Storage storage \u003d new Storage(\"src/test/resources/storageTestException.txt\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "aqcd"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e storage.load());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "aqcd"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "aqcd": 27
    }
  },
  {
    "path": "src/test/resources/storageTest.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "T|Test1|true"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": "D|Test2|true|2020-10-10"
      }
    ],
    "authorContributionMap": {
      "aqcd": 2
    }
  },
  {
    "path": "src/test/resources/storageTestException.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "SomeRandomContent"
      }
    ],
    "authorContributionMap": {
      "aqcd": 1
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "aqcd"
        },
        "content": "todo eat cake"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "aqcd"
        },
        "content": "event friend\u0027s birthday /at 2020-08-23"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "aqcd"
        },
        "content": "deadline CS2103 /by Aug 10"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "aqcd"
        },
        "content": "deadline CS2103 /by 2020-08-20"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "aqcd"
        },
        "content": "hello"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "aqcd"
        },
        "content": "todo"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "aqcd"
        },
        "content": "event description-less event :("
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "aqcd"
        },
        "content": "deadline CS2103 /by"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "aqcd"
        },
        "content": "testy test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "aqcd"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "aqcd"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "aqcd"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "aqcd"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "todo eat less cake"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "find cake"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": "find friend\u0027s birthday"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": "find"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "aqcd"
        },
        "content": "find no match"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "aqcd": 22
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "aqcd"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "aqcd": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "aqcd"
        },
        "content": "# delete saved file from previous run"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "aqcd"
        },
        "content": "if [ -e \"./data/duke.txt\" ]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "aqcd"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "aqcd"
        },
        "content": "    rm data/duke.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "aqcd"
        },
        "content": "fi"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "aqcd"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke/*.java"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "aqcd"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "aqcd"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "aqcd": 9,
      "-": 35
    }
  }
]
