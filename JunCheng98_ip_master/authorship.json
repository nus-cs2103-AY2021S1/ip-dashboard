[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "E \u003e ✘ \u003e new stuff \u003e at: 2020-10-07"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "T \u003e ✘ \u003e this other stuff"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "D \u003e ✘ \u003e new deadline \u003e by: 2020-07-03"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 3
    }
  },
  {
    "path": "src/main/java/duke/command/CheckCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.storage.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * Encapsulates the Command which checks and loads tasks which occur"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * on the date specified in the check command entered by the user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "public class CheckCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public CheckCommand(LocalDate date) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        ArrayList\u003cTask\u003e lib \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        ui.printCheckStatement(date);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        for (int i \u003d 0; i \u003c lib.size(); i++) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            if (lib.get(i).getDate() \u003d\u003d null) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            if (lib.get(i).getDate().equals(date)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                ui.showTask(lib.get(i).toString());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        ui.printEndLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 46
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.storage.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * Encapsulates the parent Command class with abstract methods for execute and"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * checking completion status of program."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public abstract boolean isDone();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 16
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.storage.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * Encapsulates a Command which creates a new Deadline task to add to the task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public DeadlineCommand(String description, String time) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        ArrayList\u003cTask\u003e lib \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            Deadline deadline \u003d new Deadline(description, time);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            tasks.addDeadline(deadline);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            ui.printAddStatements(deadline.toString(), lib.size());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            ui.printExceptions(ex);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 45
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.storage.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * Encapsulates a Command which deletes a task from the task list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        ArrayList\u003cTask\u003e lib \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        if (index \u003e\u003d lib.size() || lib.size() \u003d\u003d 0 || index \u003c 0) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            ui.printExceptions(new DukeException("
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                    \"This task ID does not exist in the database!\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            ui.printDeleteStatement(lib.get(index).toString(), lib.size() - 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            tasks.deleteTask(index);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 40
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.storage.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * Encapsulates a Command which marks a task in the list as complete."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        ArrayList\u003cTask\u003e lib \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        if (index \u003e\u003d lib.size() || lib.size() \u003d\u003d 0 || index \u003c 0) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            ui.printExceptions(new DukeException("
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                    \"This task ID does not exist in the database!\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            tasks.completeTask(index);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            ui.printDoneStatement(lib.get(index).toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 39
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.storage.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * Encapsulates a Command which creates a new Event task to add to the task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public EventCommand(String description, String time) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        ArrayList\u003cTask\u003e lib \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            Event event \u003d new Event(description, time);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            tasks.addEvent(event);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            ui.printAddStatements(event.toString(), lib.size());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            ui.printExceptions(ex);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 45
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.storage.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * Encapsulates a command which facilitates leaving the Duke program."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            storage.save(tasks.getTaskList());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            ui.sayBye();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            ui.printExceptions(ex);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 29
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.storage.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private String keyWord;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public FindCommand(String keyWord) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        this.keyWord \u003d keyWord;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        ArrayList\u003cTask\u003e lib \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        ui.printFindStatement();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        for (int i \u003d 0; i \u003c lib.size(); i++) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            if (lib.get(i).getDescription().contains(keyWord)) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                ui.showTask(lib.get(i).toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        ui.printEndLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 36
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.storage.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * Encapsulates a Command which lists out all the tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        ui.showCurrentTasks(tasks.getTaskList());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 21
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.storage.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * Encapsulates a Command which creates a new ToDo task to add to the task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public TodoCommand(String description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        ArrayList\u003cTask\u003e lib \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        ToDo todo \u003d new ToDo(description);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        tasks.addTodo(todo);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        ui.printAddStatements(todo.toString(), lib.size());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 37
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * Encapsulates the exception system that Duke uses to handle"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * program issues that occur during its runtime."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 12
    }
  },
  {
    "path": "src/main/java/duke/main/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.storage.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * Encapsulates the core class which coordinates with all other key classes to"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * take in input, process it and produce the output that the Duke program displays"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * to its users."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * Creates a Duke object which holds a file path and uses it to load"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * the text file from the hard drive or create one if it does not yet exist."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * It also creates new Ui and Storage objects for functionality."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param filePath The path where the text file is located."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            ui.loadFileError();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            storage.createFile();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            ui.loadDateError();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * Runs the Duke program until the bye command is entered, and until"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * then it takes in commands and processes them to provide output to"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * the user."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        // display starting UI"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        ui.showStartMessage();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        ui.showCurrentTasks(tasks.getTaskList());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        Parser parser \u003d new Parser(ui);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        boolean isDone \u003d false;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        while (!isDone) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                String command \u003d ui.readCommand();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                Command c \u003d parser.parse(command);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                isDone \u003d c.isDone();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                ui.printExceptions(ex);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 72,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.command.TodoCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.command.CheckCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * Parses the string commands passed into the program by the user through"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * the console, and afterward processes them to create Command objects."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public Parser(Ui ui) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public boolean isNumeric(String test) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            Integer.parseInt(test);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public Command parse(String command) throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        String[] modEcho \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        if (modEcho.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            return CheckOneWord(command);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            return CheckTwoWords(modEcho);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * Parses one word commands. (e.g. bye, list)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param echo The command entered by the user."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @return A command"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @throws DukeException If command is invalid or is missing some details."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public Command CheckOneWord(String echo) throws DukeException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        if (echo.equals(\"bye\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        } else if (echo.equals(\"list\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        } else if (echo.equals(\"todo\") || echo.equals(\"deadline\") || echo.equals(\"event\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            throw new DukeException(\"Please enter a valid\" +"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                    \" description for your task!\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        } else if (echo.equals(\"done\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            throw new DukeException(\"Please enter the ID \" +"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                    \"of the task you would like to complete.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        } else if (echo.equals(\"delete\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            throw new DukeException(\"Please retry and enter \" +"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                    \"the ID of the task to be deleted.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        } else if (echo.equals(\"check\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            throw new DukeException(\"Please enter a date to check!\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        } else if (echo.equals(\"find\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            throw new DukeException(\"Please enter a keyword to search for.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            throw new DukeException(\"Please enter a valid \" +"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                    \"command into the console.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * Parses two word commands. (e.g. done 2, delete 3)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param modEcho The command entered by the user."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @return A command."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @throws DukeException If the command entered is invalid."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public Command CheckTwoWords(String[] modEcho) throws DukeException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        String task \u003d modEcho[0];"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        if (task.equals(\"done\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            if (!isNumeric(modEcho[1])) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                throw new DukeException(\"Please enter a valid task number to complete!\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                int index \u003d Integer.parseInt(modEcho[1]) - 1;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                return new DoneCommand(index);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        } else if (task.equals(\"delete\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            if (!isNumeric(modEcho[1])) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                throw new DukeException(\"Please enter a valid task number for deletion!\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                int index \u003d Integer.parseInt(modEcho[1]) - 1;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                return new DeleteCommand(index);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        } else if (task.equals(\"check\")) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                LocalDate checkedDate \u003d LocalDate.parse(modEcho[1]);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                return new CheckCommand(checkedDate);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                throw new DukeException(\"Please enter the date in this format: yyyy-mm-dd\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        } else if (task.equals(\"find\")) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            return new FindCommand(modEcho[1]);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            if (task.equals(\"todo\")) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                return new TodoCommand(modEcho[1]);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            } else if (task.equals(\"deadline\") || task.equals(\"event\")) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                return CheckValidTime(modEcho);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                throw new DukeException(\"Please enter a valid task name to add into the list!\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * Parses commands involving time-based tasks."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param modEcho The command entered by the user."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @return A command."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @throws DukeException If the date entered is in the wrong format."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public Command CheckValidTime(String[] modEcho) throws DukeException {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        String task \u003d modEcho[0];"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        String[] processTime \u003d modEcho[1].split(\"/\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        if (processTime.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            throw new DukeException(\"You need to include \u0027/by\u0027 or \u0027/at\u0027 for this task to describe the time.\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            String[] time \u003d processTime[1].split(\" \", 2);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            if (time.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                throw new DukeException(\"The time description cannot be left blank!\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                if (task.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                    return new DeadlineCommand(processTime[0].trim(),"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                            time[1].trim());"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                    return new EventCommand(processTime[0].trim(),"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                            time[1].trim());"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 156
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * Encapsulates a save-and-load system that allows task information to be saved to the hard drive"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * via a text file when the program ends, as well as allow the information to be loaded to"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * the UI system when the program begins."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * Creates a file and its parent directory in reference to the project root"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * folder. If the file exists, nothing will change."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void createFile() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            File saveFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            saveFile.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            saveFile.createNewFile();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * Load the contents of the text file onto an ArrayList to create a task list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @return A task list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @throws FileNotFoundException If file cannot be found."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @throws DukeException If date format is incorrect."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws FileNotFoundException, DukeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        ArrayList\u003cTask\u003e lib \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        Scanner reader \u003d new Scanner(file);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        while (reader.hasNext()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            String next \u003d reader.nextLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            String[] modNext \u003d next.split(\"\u003e\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            if (modNext[0].trim().equals(\"D\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                String[] time \u003d modNext[3].trim().split(\" \");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                Deadline deadline \u003d new Deadline(modNext[2].trim(),"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                        time[1], modNext[1].trim().equals(\"✓\"));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                lib.add(deadline);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            if (modNext[0].trim().equals(\"E\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                String[] time \u003d modNext[3].trim().split(\" \");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                Event event \u003d new Event(modNext[2].trim(),"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                        time[1], modNext[1].trim().equals(\"✓\"));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                lib.add(event);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            if (modNext[0].trim().equals(\"T\")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                ToDo toDo \u003d new ToDo(modNext[2].trim(),"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                        modNext[1].trim().equals(\"✓\")"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                );"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                lib.add(toDo);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return lib;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void writeToFile(String filePath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        FileWriter writer \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        writer.write(textToAdd);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void appendToFile(String filePath, String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        FileWriter writer \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        writer.write(textToAppend);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * Save the data from the updated task list to the text file and hence the hard"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * drive."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param lib The updated task list."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @throws IOException If issues occur when writing the text to the file path."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e lib) throws IOException {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        for (int i \u003d 0; i \u003c lib.size(); i++) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            String curr \u003d lib.get(i).saveData();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            if (i \u003d\u003d 0) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                writeToFile(\"data/duke.txt\", curr + \"\\n\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            } else if (i \u003d\u003d (lib.size() - 1)) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                appendToFile(\"data/duke.txt\", curr);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                appendToFile(\"data/duke.txt\", curr + \"\\n\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 116
    }
  },
  {
    "path": "src/main/java/duke/storage/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * Encapsulates the list of tasks that the user currently stores. Allows"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * for the deletion and addition of all types of supported tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        taskList.remove(index);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void completeTask(int index) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        taskList.get(index).finishTask();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void addDeadline(Deadline deadline) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        taskList.add(deadline);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void addEvent(Event event) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        taskList.add(event);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void addTodo(ToDo todo) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        taskList.add(todo);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 49
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * Encapsulates a deadline task which contains a valid LocalDate."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * Creates a deadline task with a description and deadline date."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param description The task to complete by deadline."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param by The date that the task has to be completed."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @throws DukeException If date format entered is invalid."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public Deadline(String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            this.date \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            throw new DukeException(\"Please enter the date in this format: yyyy-mm-dd\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * Creates a completed deadline task with description and date. Used only when loading"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * data to the program."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param description The task that is completed."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param by The date which should have passed."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param isDone The task completion status."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @throws DukeException If date format is invalid."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public Deadline(String description, String by, boolean isDone) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            this.date \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            throw new DukeException(\"Please enter the date in this format: yyyy-mm-dd\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public String saveData() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return \"D \u003e \" + super.saveData() + \" \u003e by: \" + this.date;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return \"D \u003e \" + super.toString() + \" \u003e by: \" + printDate();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 56
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * Encapsulates an event task which contains a valid LocalDate."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * Creates an event task with description and attendance date."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param description The task details."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param at The attendance date."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @throws DukeException If date format entered is invalid."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public Event(String description, String at) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            this.date \u003d LocalDate.parse(at);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            throw new DukeException(\"Please enter the date in this format: yyyy-mm-dd\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * Creates a completed event task with description and attendance date. Used only when"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * loading data to program."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param description The task details."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param at The attendance date."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param isDone The task completion status."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @throws DukeException If date format is invalid."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public Event(String description, String at, boolean isDone) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            this.date \u003d LocalDate.parse(at);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            throw new DukeException(\"Please enter the date in this format: yyyy-mm-dd\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public String saveData() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return \"E \u003e \" + super.saveData() + \" \u003e at: \" + this.date;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return \"E \u003e \" + super.toString() + \" \u003e at: \" + printDate();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 56
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * Encapsulates the parent class for all types of tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * Creates a generic task with a description."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param description The task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return isDone"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                ? \"✓\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                : \"✘\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public String getDescription() { return this.description; }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public String printDate() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return this.date.getDayOfWeek() + \", \" + this.date.getMonth() + \" \" +"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                this.date.getDayOfMonth() + \" \" + this.date.getYear();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void finishTask() { isDone \u003d true; }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public String saveData() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return getStatusIcon() + \" \u003e \" + this.description;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return getStatusIcon() + \" \u003e \" + this.description;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 51
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * Encapsulates a ToDo task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public String saveData() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return \"T \u003e \" + super.saveData();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return \"T \u003e \" + super.toString();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 26
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * Encapsulates a UI system which is responsible for printing the responses that the"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * user can interact with. It also reads and passes commands to the Duke class."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private String startLine \u003d \"---------------\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private String endLine \u003d \"---------------\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void showStartMessage() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        System.out.println(startLine + \"Hello! I\u0027m\\n\" + logo +"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        startLine + \"What can I do for you?\\n\" + endLine);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        showCommands();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void showCommands() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        System.out.println(startLine +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                        \"Here are a list of commands you can use:\\n\" +"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                        \"1. list (shows all currently listed tasks)\\n\" +"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                        \"2. bye (exit the program)\\n\" +"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                        \"3. done \u003ctask number\u003e (mark the task with \u003ctask number\u003e \" +"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                \"as complete)\\n\" +"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                        \"4. delete \u003ctask number\u003e (delete this task with \" +"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                \"\u003ctask number\u003e from list)\\n\" +"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                        \"5. check \u003cyyyy-mm-dd\u003e (check tasks that are due or \" +"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                \"occurring on \u003cyyyy-mm-dd\u003e)\\n\" +"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                        \"6. todo \u003cdescription\u003e (adds todo task to list with \" +"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                \"\u003cdescription\u003e)\\n\" +"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                        \"7. deadline \u003cdescription\u003e /by \u003ctime\u003e (adds deadline to list with \" +"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                \"\u003cdescription\u003e and due by \u003ctime\u003e)\\n\" +"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                        \"8. event \u003cdescription\u003e /at \u003ctime\u003e (adds event to list with \" +"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                \"\u003cdescription\u003e and occurs at \u003ctime\u003e)\\n\" +"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                        \"9. find \u003cword\u003e (list tasks that contain \u003cword\u003e in description)\\n\" +"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                endLine);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void printEndLine() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        System.out.println(endLine);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void showTask(String taskString) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        System.out.println(taskString);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void showCurrentTasks(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        System.out.println(startLine + \"Here are the task(s) in your list:\\n\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            System.out.println( (i + 1) + \". \" + tasks.get(i).toString());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        System.out.println(endLine);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void printDoneStatement(String taskString) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        System.out.println(startLine + \"Nice! I\u0027ve marked this task as done:\\n\" +"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                taskString + \"\\n\" + endLine);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void printDeleteStatement(String taskString, int size) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        System.out.println(startLine + \"The following task has been deleted:\\n\" +"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                taskString+ \"\\n\" + \"Now you have \" + size + \" task(s) in the list.\\n\" + endLine);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void printCheckStatement(LocalDate date) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        System.out.println(startLine + \"You have the following\" +"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                \" tasks on \" + date + \":\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void printFindStatement() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        System.out.println(startLine + \"Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void printAddStatements(String taskString, int size) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        System.out.println(startLine + \"Got it. I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                taskString + \"\\n\" + \"Now you have \" + size + \" task(s) in the list.\\n\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                + endLine);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void loadDateError() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        System.out.println(startLine + \"Please enter the date in this format: yyyy-mm-dd\\n\""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        + endLine);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void loadFileError() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        System.out.println(startLine + \"File cannot be found. Creating new file now.\\n\" + endLine);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void printExceptions(Exception ex) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        System.out.println(startLine + ex.getMessage() + \"\\n\" + endLine);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void sayBye() {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        System.out.println(startLine + \"Bye. Hope to see you again soon!\\n\" +"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                endLine);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 122
    }
  },
  {
    "path": "src/test/java/duke/main/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.storage.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * Encapsulates the main test system that the developer uses to test the"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * functionality of the Duke program."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void datePrintTest() throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"Test the printDate() method\", \"2020-08-23\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        assertEquals(\"SUNDAY, AUGUST 23 2020\", deadline.printDate());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void toStringTest() throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        Event event \u003d new Event(\"Test the toString() method\", \"2020-08-23\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        assertEquals(\"E \u003e ✘ \u003e Test the toString() method \u003e at: SUNDAY, AUGUST 23 2020\","
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                event.toString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void commandBooleanTest() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        ListCommand testCommand \u003d new ListCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        assertEquals(false, testCommand.isDone());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void commandBooleanTest2() throws DukeException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        Parser parser \u003d new Parser(ui);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        assertEquals(true, parser.parse(\"bye\").isDone());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void taskListTest() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        ToDo todo \u003d new ToDo(\"Test the TaskList class for the Duke project\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        taskList.addTodo(todo);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        assertEquals(\"T \u003e ✘ \u003e Test the TaskList class for the Duke project\","
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                taskList.getTaskList().get(0).toString());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 59
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "deadline orbital splashdown /by 18th August"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "event sports day /at Sunday 1030"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 10
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 1,
      "-": 20
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 1,
      "-": 37
    }
  }
]
