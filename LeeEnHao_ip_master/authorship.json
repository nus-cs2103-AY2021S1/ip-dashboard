[
  {
    "path": "src/dependencies/dukeexceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "package dependencies.dukeexceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeEnHao": 7
    }
  },
  {
    "path": "src/dependencies/dukeexceptions/EmptyTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "package dependencies.dukeexceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "public class EmptyTaskException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    public EmptyTaskException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeEnHao": 7
    }
  },
  {
    "path": "src/dependencies/dukeexceptions/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "package dependencies.dukeexceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "public class UnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    public UnknownCommandException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeEnHao": 7
    }
  },
  {
    "path": "src/dependencies/dukeexceptions/UnspecifiedDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "package dependencies.dukeexceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "public class UnspecifiedDateException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    public UnspecifiedDateException(String msg) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeEnHao": 7
    }
  },
  {
    "path": "src/dependencies/executable/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "package dependencies.executable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "import dependencies.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "public class Command implements Executable {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    private CommandType command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    private Command(CommandType command, Task task) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    public CommandType getType() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    public Task getTask() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        return this.task;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    /* -------------------------------------- Static Factory Methods ---------------------------------------------*/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    public static Command createAddCommand(Task task) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        return new Command(CommandType.ADD, task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    public static Command createDoneCommand(Task task) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        return new Command(CommandType.DONE, task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    public static Command createListCommand(Task task) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        return new Command(CommandType.LIST, Task.createEmptyTask());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    public static Command createDeleteCommand(Task task) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        return new Command(CommandType.DELETE, task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeEnHao": 41
    }
  },
  {
    "path": "src/dependencies/executable/CommandType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "package dependencies.executable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": " * For use to indicate the different performable commands Duke can execute."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "public enum CommandType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    TODO, EVENT, DEADLINE, LIST, INVALID, DONE, DELETE, ADD"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeEnHao": 8
    }
  },
  {
    "path": "src/dependencies/executable/Executable.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "package dependencies.executable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "import dependencies.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "// TODO: Leave this for now"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "public interface Executable {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    CommandType getType();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    Task getTask();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeEnHao": 12
    }
  },
  {
    "path": "src/dependencies/executor/Executor.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "package dependencies.executor;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "import dependencies.storage.Store;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "import dependencies.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "import dependencies.executable.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "import static dependencies.executable.CommandType.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "public class Executor {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    private static final Store storage \u003d Store.initStorage();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    private static final String ADD_COMMAND \u003d \"add\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    private static final String LIST_COMMAND \u003d \"list\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    private static final String DONE_COMMAND \u003d \"done\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    private static final String DELETE_COMMAND \u003d \"delete\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    private CommandType commandState;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    /** Private constructor. */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    private Executor() {}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * Initializer for the executor."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    public static Executor initExecutor() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        return new Executor();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    private void setState(CommandType c) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        this.commandState \u003d c;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * Executed the given command."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * @param executable"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * @return string specifying what happened/what was done (no newline character at end of reply)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    public String receiveAndExec(Executable executable) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        // TODO: Adding of new commands is to be done here."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        switch(executable.getType()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            case LIST: {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                setState(LIST);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            case ADD: {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                setState(ADD);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            case DELETE: {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                setState(DELETE);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            case DONE: {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                setState(DONE);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            default: {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                setState(INVALID);  // Should never reached this stage."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        return execAndReturn(executable);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    // TODO: Ideally this class should not be returning strings. String should be returned in the Parser"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    private String execAndReturn(Executable e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        String reply;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        switch(commandState) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            case LIST: {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                reply \u003d storage.getTodosInList();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                sb.append(\"Here are the tasks in your list:\\n\")"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                        .append(reply);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                return sb.toString();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            case ADD: {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                Task t \u003d e.getTask();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                reply \u003d storage.add(t);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                return String.format(\"Got it! I have added the task:\\n%s\\n\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                        + \"Now you have %d tasks in the list.\","
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                        reply,"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                        storage.getListSize());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            case DONE: {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                // Done command would have a task of \"1 2 3 4\""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                String[] nums \u003d e.getTask().showTask().split(\"[\\\\D]+\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                Integer[] arr \u003d new Integer[nums.length];"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                for (int i \u003d 0; i \u003c nums.length; i++) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                    arr[i] \u003d Integer.valueOf(nums[i]);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                reply \u003d storage.done(arr);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                return String.format(\"Congratz! I will marked this task as completed for you!\\n%s\\n\" +"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                        \"Keep up the good work and continue to stay motivated.\\n\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                        + \"You\u0027ve got %d task left to be completed!\","
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                        reply,"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                        storage.getNumOfIncompleted());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            case DELETE: {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                String nums \u003d e.getTask().showTask();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                reply \u003d storage.deleteTask(Integer.valueOf(nums));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                return String.format(\"Noted. I\u0027ve removed this task:\\n%s\\n\""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                        + \"Now you have %d tasks left in the list.\","
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                        reply,"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                        storage.getListSize());"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            default: {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                return \"Error\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeEnHao": 116
    }
  },
  {
    "path": "src/dependencies/parser/Checker.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "package dependencies.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "import dependencies.dukeexceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "import dependencies.dukeexceptions.EmptyTaskException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "import dependencies.dukeexceptions.UnknownCommandException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "import dependencies.executable.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "import dependencies.executable.Executable;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "import dependencies.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "class Checker {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    private Executable command;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * Constructor for the checker object. Validates the command given/if and creates an Executable object"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * that can be passed to the executor."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * @param e string to be parsed into a command"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    private Checker(Executable e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        this.command \u003d e;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * Returns the Executable object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * Executable object holds the task inside."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * @return the executable object"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    public Executable getExecutable() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        return this.command;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * Static factory method for constructing the checker object."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * The Checker should have an Executable containing the task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * @param s command"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * @return Checker object"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    public static Checker parseAndCheck(String s) throws DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            return parseExplicitCommand(s);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    /* -------------------------------------- END OF PUBLIC METHODS ----------------------------------------------- */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * Checks for command that is passed in explicit format."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * eg."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * 1) \"event (task) /at (date)\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * 2) \"todo (task)\""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * 3) \"deadline (task) /by (date)\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * @param s input"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * @return Checker object"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    private static Checker parseExplicitCommand(String s) throws DukeException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        Executable e;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        if (s.contains(\"list\") || s.contains(\"List\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            e \u003d Command.createListCommand(null);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        else if (checkForWord(s, \"done\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            String task \u003d cutOutTheWord(s, \"done\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            if (task.isBlank() || task.isEmpty()) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                throw new EmptyTaskException(\"Sorry, you have to tell me which task you have completed.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            Task t \u003d Task.createMiscTask(task);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            e \u003d Command.createDoneCommand(t);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        } else if (checkForWord(s, \"todo\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            String task \u003d cutOutTheWord(s, \"todo\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            Task t \u003d Task.createTodo(task);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            if (task.isEmpty() || task.isBlank()) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                throw new EmptyTaskException(\"Sorry, but your description of a task cannot be empty. -_-\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            e \u003d Command.createAddCommand(t);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        } else if (checkForWord(s, \"event\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            String task \u003d cutOutTheWord(s, \"event\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            if (task.isBlank() || task.isEmpty()) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                throw new EmptyTaskException(\"Please tell me the event that will be happening!\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            String[] arr \u003d task.split(\"/?at\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            Task t \u003d Task.createEvent(arr[0].trim(), arr[1].trim());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            e \u003d Command.createAddCommand(t);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        } else  if (checkForWord(s, \"deadline\")) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            String task \u003d cutOutTheWord(s, \"deadline\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            if (task.isEmpty() || task.isBlank()) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                throw new EmptyTaskException(\"Please describe what you need to do.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            String[] arr \u003d task.split(\"/?by\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            Task t \u003d Task.createEvent(arr[0].trim(), arr[1].trim());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            e \u003d Command.createAddCommand(t);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        } else if (checkForWord(s, \"delete\")) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            String task \u003d cutOutTheWord(s, \"delete\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            if (task.isEmpty() || task.isBlank()) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                throw new EmptyTaskException(\"You have to tell me what to delete! LOL\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            Task t \u003d Task.createMiscTask(task);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            e \u003d Command.createDeleteCommand(t);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            throw new UnknownCommandException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        return new Checker(e);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * Case insensitive check for a word."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * @param line"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * @param word"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    private static boolean checkForWord(String line, String word) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        return Pattern.compile(Pattern.quote(word), Pattern.CASE_INSENSITIVE).matcher(line).find();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * Case Insensitive cutting out of the word."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * @param line"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * @param cmd"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    private static String cutOutTheWord(String line, String cmd) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        // TODO: Should I use ENGLISH or UK????"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        String c2 \u003d cmd.toUpperCase(Locale.UK);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        String l2 \u003d line.toUpperCase(Locale.UK);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        int idx \u003d l2.indexOf(c2);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        return line.substring(idx + cmd.length()).trim();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    private boolean isTodo(String s) {return false;}"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    public boolean isValidCommand(String s) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    /* -------------------------------------- Additional Feature Section ---------------------------------- */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * Instead of parsing just natural language, this function will be able to parse a natural sentence."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * eg. \"I have a meeting on Monday.\" -\u003e \"event meeting /at Monday\""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * Remember to edit this only in the branch \"add-ons\"."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * @param s"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    private static Checker parseNaturalLanguage(String s) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        return new Checker(null);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeEnHao": 167
    }
  },
  {
    "path": "src/dependencies/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "package dependencies.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "import dependencies.executor.Executor;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "import dependencies.dukeexceptions.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": " * Parser class which parses the given input. Checks if any command is given"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": " * and command is valid."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    /** Object for executing the commands. */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    private static final Executor executor \u003d Executor.initExecutor();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * Private constructor for a Parser object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    private Parser() {}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * Initializer for Parser."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * @return the Parser"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    public static Parser initParser() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        return new Parser();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * Parses given command and determines if it is a valid command,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * and calls an executor to execute a valid command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * @return reply: what was done"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    public String parseAndExec(String command) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        Checker checker \u003d null;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            checker \u003d Checker.parseAndCheck(command);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            String reply;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            reply \u003d executor.receiveAndExec(checker.getExecutable());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            return reply;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "//        } catch (EmptyTaskException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "//            return e.toString();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeEnHao": 50
    }
  },
  {
    "path": "src/dependencies/storage/DB.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "package dependencies.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "public class DB implements Serializable {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeEnHao": 6
    }
  },
  {
    "path": "src/dependencies/storage/FNV64.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "package dependencies.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": " * Fowler-No-Voll hash utility function."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "class FNV64 {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    private static final long PRIME \u003d 0x100000001b3L;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    private static final long OFFSET \u003d 0xcbf29ce484222325L;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    public static long hash(String k) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        long ret \u003d OFFSET;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        int l \u003d k.length();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        for (int i \u003d 0; i \u003c l; i++) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            ret ^\u003d k.charAt(i);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            ret *\u003d PRIME;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        return ret;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeEnHao": 20
    }
  },
  {
    "path": "src/dependencies/storage/Store.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "package dependencies.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "import dependencies.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "public class Store {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    /** todoList that stores the tasks. */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    private final ArrayList\u003cTask\u003e todoList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    /** Private constructor */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    private Store() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        todoList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * Initializer for the Store object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * @return the Store object"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    public static Store initStorage() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        return new Store();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * Returns a String in the form of a list with \\n appended"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * at the end of each item."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * @return todoList in a form of a String"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    public String getTodosInList() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        for (int i \u003d 0; i \u003c todoList.size(); i++) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            sb.append(i+1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            sb.append(\". \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            sb.append(todoList.get(i).toString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            if (i !\u003d todoList.size() - 1) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                sb.append(\"\\n\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            if (i \u003d\u003d todoList.size() - 1) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                sb.append(\"\\nSo stop procrastinating!\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        if (todoList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            sb.append(\"Theres\u0027s nothing here!\\n\")"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                    .append(\"Try adding something to your list?\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * Adds the specified task to the todoList."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * @return a string represenitng the newly added task"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    public String add(Task task) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        todoList.add(task);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        return task.toString();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * Finds the given task at index and completes it."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * @param nums am array of numbers in string form"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * @return a string represenitng the newly completed task."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    public String done(Integer[] nums) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        for (int i \u003d 0; i \u003c nums.length; i++) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            Task t \u003d todoList.get(nums[i] - 1);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            t.completed();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            sb.append(t.toString());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            if (i !\u003d nums.length - 1) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                sb.append(\"\\n\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * Finds all given task specified and deletes it from"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * list."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * @param nums"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    public String deleteTask(Integer nums) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        Task t \u003d todoList.get(nums - 1);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        todoList.remove(nums - 1);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        return t.toString();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * Returns the number of tasks in the todoList. Includes completed task."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * @return size of the list as a String"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    public int getListSize() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        return todoList.size();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * Returns the number of completed tasks in the list."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * @return number of completed tasks"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    public int getNumOfCompleted() {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        int c \u003d 0;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        for (int i \u003d 0; i \u003c todoList.size(); i++) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            if (todoList.get(i).isCompleted()) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                c++;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        return c;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * Returns the number of incomplete tasks in the list."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * @return number of incomplete tasks"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    public int getNumOfIncompleted() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        int c \u003d 0;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        for (int i \u003d 0; i \u003c todoList.size(); i++) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            if (!todoList.get(i).isCompleted()) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                c++;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        return c;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeEnHao": 135
    }
  },
  {
    "path": "src/dependencies/task/CompletionState.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "package dependencies.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "enum CompletionState {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    COMPLETED, UNFINISHED"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeEnHao": 5
    }
  },
  {
    "path": "src/dependencies/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "package dependencies.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "import static dependencies.task.CompletionState.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "public abstract class Task implements Serializable {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    protected CompletionState state;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    protected String task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    protected Task(String task) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        this.state \u003d UNFINISHED;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    abstract String getDateLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    public String showTask() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        return this.task;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    public boolean isTaskEmpty() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    public void completed() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        this.state \u003d COMPLETED;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    public boolean isCompleted() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        return state \u003d\u003d COMPLETED;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    /* -------------------------- Static factory methods to create different Tasks ----------------------- */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    public static Task createMiscTask(String task) { return new DoneTask(task); }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    public static Task createEmptyTask(){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        return new EmptyTask();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    public static Task createTodo(String task) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        return new ToDos(task);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    public static Task createEvent(String task, String date) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        return new Events(task, date);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    public static Task createDeadline(String task, String date) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        return new Deadlines(task, date);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    /* ----------------------------------------- Subclasses--------------------------------------------- */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    private static class EmptyTask extends Task{"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        private EmptyTask() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            super(null);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            super.state \u003d null;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        public String getDateLine() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        public boolean isTaskEmpty() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            return \"There is nothing here to see...\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    private static class DoneTask extends Task{"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        private DoneTask(String nums) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            super(nums);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            super.state \u003d null;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        public String getDateLine() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        public boolean isTaskEmpty() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            return \"There is nothing here to see...\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    private static class Events extends Task {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        private String date;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        private Events(String task, String date) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            super(task);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            this.date \u003d date;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        public String getDateLine() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            return this.date;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            return String.format("
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                    \"[Event][%s] %s (at: %s)\", super.state \u003d\u003d UNFINISHED ? \"X\""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                            : Character.toString((char)0x2713),"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                    super.task,"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                    date);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    private static class ToDos extends Task {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        private ToDos(String task) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            super(task);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        public String getDateLine() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            return String.format("
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                    \"[ToDo][%s] %s\", super.state \u003d\u003d UNFINISHED ? \"X\""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                            : Character.toString((char)0x2713),"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                    super.task);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    private static class Deadlines extends Task {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        private String deadline;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        private Deadlines(String task, String deadline) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            super(task);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        public String getDateLine() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            return this.deadline;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            return String.format("
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                    \"[Deadline][%s] %s (by: %s)\", super.state \u003d\u003d UNFINISHED ? \"X\""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                            : Character.toString((char)0x2713),"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                    super.task,"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                    deadline);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeEnHao": 164
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        Ui duke \u003d new Ui();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        duke.start();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        int x \u003d 1;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        while (x \u003e 0) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            if (sc.hasNext()) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                x \u003d duke.takeCommand(sc.nextLine());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeEnHao": 16,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "import dependencies.parser.Parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "import dependencies.dukeexceptions.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": " * Class that separates the command checker/parser from the main(). Catches command that"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": " * ends/closes program, terminating it immediately."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    private static final String DIVIDER \u003d \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    private static final String GREETING \u003d \"Hello, I\u0027m Duke\\nwhat can I do for you?\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    private static final String LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                                    + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                                    + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                                    + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "                                    + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    private static final String CIAO \u003d DIVIDER + \"Spero di rivederti presto\\n\" + DIVIDER;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    private static final String CONVO_START \u003d DIVIDER + LOGO + \"\\n\" + GREETING + DIVIDER;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    private  static final Parser PARSER \u003d Parser.initParser();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    private static final String END \u003d \"end|ciao|bye|close|exit|nights|shutdown\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    public void start() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        System.out.println(CONVO_START);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    public void end() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        System.out.println(CIAO);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * Receives command from user."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * Handling of \"bye\" command takes place here, for now."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * @param s"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     * @return -1 indicating failure, 0 indicating end of program, 1 indicating program is running"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    public int takeCommand(String s) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        // End command"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        if (!s.isEmpty() \u0026\u0026 END.contains(s)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            end();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            return 0;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        String reply \u003d PARSER.parseAndExec(s);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        // Error encountered"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        if (reply.equals(\"Error\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            System.out.println(DIVIDER + reply + \"\\n\" + DIVIDER);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            return -1;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            // Normal execution"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            System.out.println(DIVIDER + reply + \"\\n\" + DIVIDER);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "            return 1;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "LeeEnHao": 55
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "todo run 100km"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "event meeting /at Monday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "deadline return books /by Tuesday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "todo change the world"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "exit"
      }
    ],
    "authorContributionMap": {
      "LeeEnHao": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "LeeEnHao"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "LeeEnHao": 1,
      "-": 20
    }
  }
]
