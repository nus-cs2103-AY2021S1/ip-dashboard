[
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": " * Main program for Duke."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * Main program function."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @param args input arguments, not used"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        Ui.printGreeting();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        String userInput;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        TaskList userTaskList \u003d new TaskList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        loop: while (true) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            userInput \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                UserCommandType userCommandType \u003d Parser.parseUserCommand(userInput);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                switch (userCommandType) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                    case EXIT:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                        Ui.printMessageBetweenLines(StringConstants.EXIT_MESSAGE);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                        break loop;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                    case LIST:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                        userTaskList.printTaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                    case DONE:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                        int doneIndex \u003d Parser.getTaskIndex(userInput);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                        String[] doneMessages \u003d userTaskList.markTaskDoneAtIndex(doneIndex);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                        Ui.printMessagesBetweenLines(doneMessages);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                        userTaskList.saveTaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                    case DELETE:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                        int deleteIndex \u003d Parser.getTaskIndex(userInput);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                        String[] deleteMessages \u003d userTaskList.deleteTaskAtIndex(deleteIndex);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                        Ui.printMessagesBetweenLines(deleteMessages);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                        userTaskList.saveTaskList();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                    case TODO:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                    case DEADLINE:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                    case EVENT:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                        userTaskList.addTask(userInput, userCommandType);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                        userTaskList.saveTaskList();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                    case FIND:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                        userTaskList.find(userInput);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            } catch (Parser.InvalidCommandException | TaskList.InvalidIndexException exception) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                Ui.printExceptionBetweenLines(exception);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sun-yitao": 56,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": " * Class for parsing user commands."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    private static final String TODO_COMMAND \u003d \"todo\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    private static final String DEADLINE_COMMAND \u003d \"deadline\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    private static final String EVENT_COMMAND \u003d \"event\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    private static final String LIST_COMMAND \u003d \"list\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    private static final String DONE_COMMAND \u003d \"done\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    private static final String FIND_COMMAND \u003d \"find\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    private static final String DELETE_COMMAND \u003d \"delete\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    private static final String EXIT_COMMAND \u003d \"bye\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    private static final DateTimeFormatter dateTimeFormatter \u003d"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * Parse user command as a String and returns the corresponding UserCommandType."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @param command String of user command"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @return UserCommandType"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @throws InvalidCommandException if user command is not recognised"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public static UserCommandType parseUserCommand(String command) throws InvalidCommandException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        if (command.equals(LIST_COMMAND)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            return UserCommandType.LIST;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        } else if (command.equals(EXIT_COMMAND)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            return UserCommandType.EXIT;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        } else if (command.startsWith(DONE_COMMAND)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            return UserCommandType.DONE;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        } else if (command.startsWith(DELETE_COMMAND)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            return UserCommandType.DELETE;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        } else if (command.startsWith(TODO_COMMAND)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            return UserCommandType.TODO;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        } else if (command.startsWith(DEADLINE_COMMAND)) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            return UserCommandType.DEADLINE;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        } else if (command.startsWith(EVENT_COMMAND)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            return UserCommandType.EVENT;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        } else if (command.startsWith(FIND_COMMAND)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            return UserCommandType.FIND;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * Parse a task command and return the String components."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @param command user command String"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @return String array of the command components as Task name, dateTimeString"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @throws InvalidCommandException if command syntax is unrecognised"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public static String[] parseTask(String command) throws InvalidCommandException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        String[] components \u003d command.split(\" \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        String taskType \u003d components[0];"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        if (taskType.equals(TODO_COMMAND)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            if (components.length \u003c 2) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                throw new InvalidCommandException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            return new String[]{"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                    String.join(\" \", Arrays.copyOfRange(components, 1, components.length))"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            };"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        } else if (taskType.equals(DEADLINE_COMMAND) || taskType.equals(EVENT_COMMAND)) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            for (int i \u003d 0; i \u003c components.length - 1; i++) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                if (components[i].equals(\"/at\") || components[i].equals(\"/by\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                    String dateTimeString \u003d  i + 2 \u003d\u003d components.length"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                            ? components[i + 1] + \" 0000\""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                            : String.join(\" \","
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                            Arrays.copyOfRange(components, i + 1, components.length));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                    // Task name, Datetime"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                    return new String[]{"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                        String.join(\" \", Arrays.copyOfRange(components, 1, i)),"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                        dateTimeString"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                    };"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            throw new InvalidCommandException(\"No date provided\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * Parse datetime String and return LocalDateTime."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @param dateString datetime String"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @return LocalDateTime"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @throws InvalidCommandException if cannot parse dateString"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public static LocalDateTime parseDateTime(String dateString) throws InvalidCommandException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            return LocalDateTime.parse(dateString, dateTimeFormatter);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        } catch (DateTimeParseException exception) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            throw new InvalidCommandException(\"Invalid date time format, \" +"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                    \"please specify your date in dd/MM/yyyy HHmm format\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * Get Task index of done user command."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @param command User command String"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @return task index"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @throws InvalidCommandException if command syntax is invalid"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public static int getTaskIndex(String command) throws InvalidCommandException {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        String[] components \u003d command.split(\" \");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        if (components.length !\u003d 2) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            throw new InvalidCommandException(\"Done command should have 2 components\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        return Integer.parseInt(components[1]) - 1;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * Get Keyword String from find command."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @param command user command"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @return keyword String"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @throws InvalidCommandException if keyword string not provided"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public static String getFindKeyWordString(String command) throws InvalidCommandException {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        String[] components \u003d command.split(\" \");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        if (components.length \u003c 2) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            throw new InvalidCommandException(\"Done command should have 2 components\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        return String.join(\" \", Arrays.copyOfRange(components, 1, components.length));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * An exception for invalid user command."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public static class InvalidCommandException extends Exception {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        public InvalidCommandException(String errorMessage) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            super(errorMessage);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        public InvalidCommandException() {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            super(\"Unrecognised command\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sun-yitao": 143
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": " * Class for loading and persisting data to disk."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    private static final String saveFilePath \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * Save tasks to disk."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @param tasks ArrayList of tasks to save"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @throws IOException if cannot write to saveFilePath"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public static void save(ArrayList\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        createSaveDirectoryIfNotExists();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(saveFilePath);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        for (Task task: tasks) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            fileWriter.write(task.toSaveString() + System.lineSeparator());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        fileWriter.close();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * Load tasks from saveFilePath."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @return ArrayList of loaded tasks"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public static ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            createSaveDirectoryIfNotExists();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            File file \u003d new File(saveFilePath);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                String[] components \u003d scanner.nextLine().split(\"\\\\|\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                switch (components[0]) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                        tasks.add(new Todo(components[2], components[1].equals(\"1\")));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                        tasks.add(new Deadline(components[2], components[1].equals(\"1\"),"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                                LocalDateTime.parse(components[3])));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                        tasks.add(new Event(components[2], components[1].equals(\"1\"),"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                                components[3]));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                        throw new InvalidSaveFileException();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        } catch (FileNotFoundException exception) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            System.out.println(\"No save file detected\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        } catch (InvalidSaveFileException | DateTimeParseException exception) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            Ui.printExceptionBetweenLines(exception);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    private static void createSaveDirectoryIfNotExists() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        File saveDirectory \u003d new File(\"data\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        if (! saveDirectory.exists()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            saveDirectory.mkdir();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * Exception when save file syntax is invalid."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public static class InvalidSaveFileException extends Exception {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        public InvalidSaveFileException() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            super(\"Invalid save file\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sun-yitao": 91
    }
  },
  {
    "path": "src/main/java/duke/StringConstants.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": " * String constants for printing to user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "public class StringConstants {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    // Strings for printing"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public static final String LINE \u003d \"__________________________________________________\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public static final String FOUR_SPACES \u003d \"    \";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public static final String SIX_SPACES \u003d \"      \";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public static final String[] GREETING_MESSAGES \u003d new String[]{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        \"Hello! I\u0027m Duke\","
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        \"What can I do for you?\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    };"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public static final String DONE_MESSAGE \u003d \"Nice! I\u0027ve marked this task as done:\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public static final String ADD_MESSAGE \u003d \"Got it. I\u0027ve added this task: \";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public static final String DELETE_MESSAGE \u003d \"Noted. I\u0027ve removed this task:\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public static final String COUNT_MESSAGE \u003d \"Now you have %d tasks in the list.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public static final String EXIT_MESSAGE \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public static final String TASK_FOUND_MESSAGE \u003d \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public static final String NO_TASK_FOUND_MESSAGE \u003d \"No matching tasks found.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sun-yitao": 24
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": " * TaskList for manipulating user tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    private final ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * Loads tasks from saveFilePath."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        this.tasks \u003d Storage.load();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    private void addTask(Task task) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * Parse add task command and adds corresponding task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @param command User command String"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @param userCommandType UserCommandType"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @throws Parser.InvalidCommandException if user command syntax is invalid"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public void addTask(String command, UserCommandType userCommandType)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            throws Parser.InvalidCommandException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        String[] taskComponents \u003d Parser.parseTask(command);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        switch (userCommandType) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                task \u003d new Todo(taskComponents[0], false);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                task \u003d new Deadline(taskComponents[0], false,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                        Parser.parseDateTime(taskComponents[1]));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                task \u003d new Event(taskComponents[0], false, taskComponents[1]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                throw new Parser.InvalidCommandException();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        addTask(task);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        Ui.printMessagesBetweenLines(new String[] {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            StringConstants.ADD_MESSAGE,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            \"  \" + task.toString(),"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            String.format(StringConstants.COUNT_MESSAGE, tasks.size())"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        });"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * Mark task done at index."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @param index index of task to be marked done"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @return String array of messages to be printed"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @throws InvalidIndexException if index is out of bounds"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public String[] markTaskDoneAtIndex(int index) throws InvalidIndexException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            Task task \u003d tasks.get(index);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            task.markDone();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            return new String[] {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                StringConstants.DONE_MESSAGE,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                \"  \" + task.toString()"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            };"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            throw new InvalidIndexException();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * Delete task at index."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @param index index of task to delete"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @return String array of messages to be printed"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @throws InvalidIndexException if index is out of bounds"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public String[] deleteTaskAtIndex(int index) throws InvalidIndexException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            Task task \u003d tasks.get(index);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            tasks.remove(index);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            return new String[] {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                StringConstants.DELETE_MESSAGE,"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                \"  \" + task.toString(),"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                String.format(StringConstants.COUNT_MESSAGE, tasks.size())"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            };"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            throw new InvalidIndexException();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * Gets task at index."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @param index index of task to get"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @return task at index"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @throws InvalidIndexException if index is out of bounds"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public Task getTaskAtIndex(int index) throws InvalidIndexException {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            return tasks.get(index);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            throw new InvalidIndexException();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * Prints all the user tasks."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public void printTaskList() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        String[] messages \u003d new String[tasks.size()];"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            messages[i] \u003d String.format(\"%d.%s\", i + 1, task.toString());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        Ui.printMessagesBetweenLines(messages);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * Finds tasks matching with keyword String and prints them."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @param command user command String"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public void find(String command) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            String keyWordString \u003d Parser.getFindKeyWordString(command);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            ArrayList\u003cString\u003e messages \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            messages.add(StringConstants.TASK_FOUND_MESSAGE);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            int i \u003d 1;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            for (Task task: tasks) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                if (task.getName().contains(keyWordString)) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                    messages.add(String.format(\"%d.%s\", i, task.toString()));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                    i++;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            if (messages.size() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                Ui.printMessageBetweenLines(StringConstants.NO_TASK_FOUND_MESSAGE);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                Ui.printMessagesBetweenLines(messages.toArray(new String[0]));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        } catch (Parser.InvalidCommandException exception) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            Ui.printExceptionBetweenLines(exception);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * Saves user tasks to disk."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public void saveTaskList() {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            Storage.save(tasks);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        } catch (IOException exception) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            System.out.println(exception.getMessage());"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * Exception for when task index is out of bounds."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public static class InvalidIndexException extends Exception {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        public InvalidIndexException() {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            super(\"Invalid task index\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sun-yitao": 174
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * Print message with 4 indentation."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @param message message to be printed"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public static void printWith4Indent(String message) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        System.out.println(StringConstants.FOUR_SPACES + message);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * Print message with 6 indentation."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @param message message to be printed"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public static void printWith6Indent(String message) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        System.out.println(StringConstants.SIX_SPACES + message);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * Print new line."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public static void printNewLine() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * Print message between 2 lines."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @param message message to be printed"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public static void printMessageBetweenLines(String message) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        printWith4Indent(StringConstants.LINE);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        printWith6Indent(message);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        printWith4Indent(StringConstants.LINE);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * Print array of messages between 2 lines."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @param messages array of messages to be printed"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public static void printMessagesBetweenLines(String[] messages) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        printWith4Indent(StringConstants.LINE);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        for (String message: messages) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            printWith6Indent(message);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        printWith4Indent(StringConstants.LINE);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * Print exception message between 2 lines."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @param exception exception to be printed"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public static void printExceptionBetweenLines(Exception exception) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        printMessageBetweenLines(\"Error: \" + exception.getMessage());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * Print greeting to user."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public static void printGreeting() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        printMessagesBetweenLines(StringConstants.GREETING_MESSAGES);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sun-yitao": 63
    }
  },
  {
    "path": "src/main/java/duke/UserCommandType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": " * Type of user command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "public enum UserCommandType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    LIST,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    FIND,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    DELETE,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    EXIT,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sun-yitao": 15
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    private final LocalDateTime deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * A Task with deadline."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @param name name of Task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @param done whether Task is done"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @param deadline deadline of task in LocalDateTime"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public Deadline(final String name, final boolean done, final LocalDateTime deadline) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        super(name, done);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * Returns String representation of Task presented to user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @return String representation of Task presented to user"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        String doneSymbol \u003d isDone() ? \"✓\" : \"✗\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        return String.format(\"[D][%s] %s (by: %s)\", doneSymbol, getName(),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "                deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HHmm\")));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * Returns String representation of Task to be saved."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @return String representation of Task to be saved"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        return String.format(\"D|%d|%s|%s\", isDone() ? 1 : 0, getName(), deadline);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sun-yitao": 40
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    private final String duration;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * A Task with duration."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @param name name of Task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @param done whether Task is done"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @param duration duration of Task as a String"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public Event(String name, boolean done, String duration) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        super(name, done);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * Returns String representation of Task presented to user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @return String representation of Task presented to user"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        String doneSymbol \u003d isDone() ? \"✓\" : \"✗\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        return String.format(\"[E][%s] %s (at: %s)\", doneSymbol, getName(), duration);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * Returns String representation of Task to be saved."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @return String representation of Task to be saved"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        return String.format(\"E|%d|%s|%s\", isDone() ? 1 : 0, getName(), duration);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sun-yitao": 35
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    private final String name;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    private boolean done;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * A base Task to inherit from."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @param name name of Task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @param done whether Task is done"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public Task(String name, boolean done) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        this.done \u003d done;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * Mark task as done."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * Returns whether Task is done."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @return boolean of task is done"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        return done;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * Gets name of task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @return name of task as a String"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * Returns String representation of Task presented to user."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @return String representation of Task presented to user"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        String doneSymbol \u003d isDone() ? \"✓\" : \"✗\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        return String.format(\"[%s] %s\", doneSymbol, getName());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * Returns String representation of Task to be saved."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @return String representation of Task to be saved"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public abstract String toSaveString();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sun-yitao": 55
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * A Task without deadline or duration."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @param name name of Task"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @param done whether Task is done"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public Todo(String name, boolean done) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        super(name, done);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * Returns String representation of Task presented to user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @return String representation of Task presented to user"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        String doneSymbol \u003d isDone() ? \"✓\" : \"✗\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        return String.format(\"[T][%s] %s\", doneSymbol, getName());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * Returns String representation of Task to be saved."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     * @return String representation of Task to be saved"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public String toSaveString() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        return String.format(\"T|%d|%s\", isDone() ? 1 : 0, getName());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sun-yitao": 32
    }
  },
  {
    "path": "src/test/java/duke/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    private final Deadline deadline1 \u003d new Deadline(\"example 1\", false,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            LocalDateTime.of(2020, 12, 12, 12, 12));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    private final Deadline deadline2 \u003d new Deadline(\"example 2\", true,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "            LocalDateTime.of(2020, 1, 1, 0, 0));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public void testTodoToString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        assertEquals(\"[D][✗] example 1 (by: Dec 12 2020 1212)\", deadline1.toString());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        assertEquals(\"[D][✓] example 2 (by: Jan 01 2020 0000)\", deadline2.toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public void testTodoToSaveString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        assertEquals(\"D|0|example 1|2020-12-12T12:12\", deadline1.toSaveString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        assertEquals(\"D|1|example 2|2020-01-01T00:00\", deadline2.toSaveString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sun-yitao": 26
    }
  },
  {
    "path": "src/test/java/duke/task/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    private final Todo todo1 \u003d new Todo(\"example 1\", false);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    private final Todo todo2 \u003d new Todo(\"example 2\", true);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public void testTodoToString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        assertEquals(\"[T][✗] example 1\", todo1.toString());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        assertEquals(\"[T][✓] example 2\", todo2.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    public void testTodoToSaveString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        assertEquals(\"T|0|example 1\", todo1.toSaveString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "        assertEquals(\"T|1|example 2\", todo2.toSaveString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sun-yitao": 22
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "blah"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "todo"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "todo   "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "deadline return book"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "event project meeting"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "sun-yitao": 21
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sun-yitao"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "sun-yitao": 1,
      "-": 36
    }
  }
]
