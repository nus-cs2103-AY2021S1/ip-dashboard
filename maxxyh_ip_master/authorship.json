[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "maxxyh": 2,
      "-": 24
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    archiveBaseName \u003d \"alphaDuke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maxxyh": 19,
      "-": 43
    }
  },
  {
    "path": "data/save.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "T,1,read book,na"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "D,0,return book,2020-06-06 1800"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "E,0,project meeting,2020-08-06 1400-1600"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "T,1,join sports club,na"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "T,0,borrow book,na"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "T,0,buy water bottle,na"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "D,0,interview questions,2020-07-08 2359"
      }
    ],
    "authorContributionMap": {
      "maxxyh": 7
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "**Alpha** is a **desktop chatbot app for managing tasks**, "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "optimized for use via a Command Line Interface. "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "Use Alpha to quickly get your life on-task! Here\u0027s a "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "quick breakdown of Alpha\u0027s features."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "### Add a task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "Alpha supports 3 types of tasks:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "1. To-do (basic task)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "2. Deadline (to-do with a deadline)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "3. Event (has a start and end time) "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "#### Add to-do: `todo`"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "Adds a to-do to the task list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "Format: `todo \u003cDescription\u003e`"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "Examples: "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "* `todo finish Sci-Fi readings for class`"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "* `todo buy eggs and chicken` "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "#### Add deadline: `deadline`"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "Adds a deadline to the task list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "Format: `deadline \u003cDescription\u003e /by \u003cTime\u003e`"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "_Note: Time format \u003d_ `Date Time` \u003d `YYYY-MM-dd HHmm`"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "Examples: "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "* `deadline Philosophy essay /by 2020-09-18 2359`"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "* `deadilne Figma UI markup /by 2020-09-25 1800`"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "#### Add event: `event`"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "Adds an event to the task list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "Format: `event \u003cDescription\u003e /at \u003cTime\u003e`"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "_Note: Time format \u003d_ `Date startTime-endTime` \u003d `YYYY-MM-dd HHmm-HHmm`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "Examples: "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "* `event Art Exhibition Opening /at 2020-09-20 1800-2200`"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "* `event Ultra Hackathon /at 2020-10-14 0800-2300`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "### View task list: `list`"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "Lists out all tasks in the task list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "Example of usage: `list`"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome: "
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "![list command](./images/list.png)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "### Removing a task: `delete`"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "**Removes** a task from the task list."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "Format: `delete \u003cindex\u003e`"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "* Tasks are identified by index"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "* The index refers to the index number shown in the displayed task list."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "* Index begins from 1. It needs to be a positive integer."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "* `delete 1` "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "* `delete -1` -\u003e `ERROR` "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "### Mark task as complete: `done`"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "Marks a task as **completed**."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "Format: `done \u003cindex\u003e`"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "* Tasks are identified by index"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "* The index refers to the index number shown in the displayed task list."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "* Index begins from 1. It needs to be a positive integer."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "* `done 1` "
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "* `done -1` -\u003e `ERROR` "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "### Find a task: `find`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "Find a task whose description contains the given search term."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "Format: `find \u003cSearch Term\u003e`"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "* search term is a `String` searching for a match amongst the task descriptions"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "* search term is case-insensitive"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "* `find ultra`"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "* `find book`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "Expected outcome: "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "![find command](./images/find.png)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "### Postpone a deadline/event: `postpone`"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "Postpone a deadline or event."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "Format: `postpone \u003cindex\u003e /by \u003camount\u003e \u003ctime unit\u003e`"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "Supported time units: "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "* `year(s)`"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "* `month(s)`"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "* `day(s)`"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "* `hour(s)`"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "* `minute(s)`"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "Example of usage: `postpone 3 /by 2 hours`"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "Example of outcome:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "![list command](./images/postpone.png) "
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "### Advance a deadline/event: `postpone`"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "Advance (brings forward) a deadline or event."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "Format: `advance \u003cindex\u003e /by \u003camount\u003e \u003ctime unit\u003e`"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "Supported time units: "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "* `year(s)`"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "* `month(s)`"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "* `day(s)`"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "* `hour(s)`"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "* `minute(s)`"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "Example of usage: `advance 3 /by 2 hours`"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "Example of outcome:"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "![list command](./images/advance.png) "
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "### Help: `help`"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "Shows the list of all available commands."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "Example: `help`"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "## Command Summary"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "Action | Format, Examples"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "--------|------------------"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "Add To-do |  `todo \u003cDescription\u003e`\u003cbr/\u003eE.g.: `todo finish Sci-Fi readings for class` "
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "Add Deadline | `deadline \u003cDescription\u003e /by \u003cTime\u003e`\u003cbr/\u003eE.g.: `deadline Philosophy essay /by 2020-09-18 2359`"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "Add Event |  `event \u003cDescription\u003e /at \u003cTime\u003e`\u003cbr/\u003eE.g.: `event Art Exhibition Opening /at 2020-09-20 1800-2200`"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "List | `list`"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "Delete | `delete \u003cindex\u003e`"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "Done | `done \u003cindex\u003e`"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "Find |  `find \u003csearch term\u003e`"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "Postpone | `postpone \u003cindex\u003e \u003camount\u003e \u003ctime unit\u003e`\u003cbr/\u003eE.g.: `postpone 3 /by 2 hours` "
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "Advance | `advance \u003cindex\u003e \u003camount\u003e \u003ctime unit\u003e`\u003cbr/\u003eE.g.: `advance 3 /by 2 hours`"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "help | `help` "
      }
    ],
    "authorContributionMap": {
      "maxxyh": 134,
      "-": 16
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import static duke.storage.Storage.DEFAULT_STORAGE_FILEPATH;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.storage.Storage.StorageOperationException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.ui.Parser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "maxxyh"
        },
        "content": " * Manages tasks and deadlines in a chat bot style."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "maxxyh"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "maxxyh"
        },
        "content": " * Duke supports CRUD operations for 3 types of tasks:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "maxxyh"
        },
        "content": " * \u003cli\u003eTodo with description\u003c/li\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "maxxyh"
        },
        "content": " * \u003cli\u003eEvents with duration\u003c/li\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "maxxyh"
        },
        "content": " * \u003cli\u003eDeadlines\u003c/li\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "maxxyh"
        },
        "content": " * \u003c/p\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "maxxyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public Duke(Ui ui) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        this(DEFAULT_STORAGE_FILEPATH, ui);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * Constructor for Duke."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * Loads tasks from save file into taskList."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @param filePath save file path."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @param ui Ui manager."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public Duke(String filePath, Ui ui) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            taskList \u003d storage.loadTasks();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            this.ui \u003d ui;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            parser \u003d new Parser(taskList);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        } catch (StorageOperationException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            ui.outputErrorBlockToUser(e.getMessage());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            throw new RuntimeException(e);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * Responds to user string input."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * Able to handle and print DukeException."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * If \"bye\", saves locally and exits."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @return true terminate if bye"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public boolean respondToUserInput(String input) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            ui.showGoodbyeMessage();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                storage.saveTasks(taskList);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            } catch (StorageOperationException soe) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                ui.outputErrorBlockToUser(soe.getMessage());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            Command command \u003d parser.getCommandFromInput(input);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            String response \u003d command.execute();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            ui.outputBlockToUser(response);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            ui.outputErrorBlockToUser(e.getMessage());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * Starts Duke by showing the welcome message."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public void startDuke() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        ui.showWelcomeMessage();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maxxyh": 91
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maxxyh"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maxxyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maxxyh": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.ui.MainWindow;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "maxxyh"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "maxxyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            MainWindow mainWindow \u003d fxmlLoader.\u003cMainWindow\u003egetController();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            Duke duke \u003d new Duke(new Ui(System.in, mainWindow.getDialogContainer()));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            mainWindow.setDuke(duke);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            duke.startDuke();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            stage.getIcons().add(new Image(this.getClass().getResourceAsStream(\"/images/logo.png\")));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maxxyh": 36
    }
  },
  {
    "path": "src/main/java/duke/TimeModification.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maxxyh"
        },
        "content": " * Container class for taskIndex, amount and timeUnit."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maxxyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "public class TimeModification {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private int taskIndex;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private int amount;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private ChronoUnit timeUnit;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * Constructor for TimeModification."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @param amount"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @param timeUnit"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public TimeModification(int taskIndex, int amount, ChronoUnit timeUnit) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        this.amount \u003d amount;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        this.timeUnit \u003d timeUnit;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public int getAmount() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        return amount;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public ChronoUnit getTimeUnit() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        return timeUnit;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public int getTaskIndex() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        return taskIndex;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maxxyh": 36
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maxxyh"
        },
        "content": " * Represents a command to be executed by Duke."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maxxyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    protected TaskList taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * Constructor for {@code Command}."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public Command(TaskList taskList) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * Executes the command and gets the response."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @return response in String format."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public abstract String execute();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maxxyh": 26
    }
  },
  {
    "path": "src/main/java/duke/commands/CommandAdd.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "public class CommandAdd extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public static final String COMMAND_STRING \u003d \"add\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private static final String ADD_TASK_CONFIRMATION \u003d \"Fine. I\u0027ve added this task:\\n\" + \"%s\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            + \"Now you have a total of %d %s in your list.\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * Constructor for CommandAdd"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @param taskList task list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @param task task to be added."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public CommandAdd(TaskList taskList, Task task) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        super(taskList);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        int size \u003d taskList.getSize();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        return String.format(ADD_TASK_CONFIRMATION, task, size, (size \u003d\u003d 1 ? \"task\" : \"tasks\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public Task getTask() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maxxyh": 35
    }
  },
  {
    "path": "src/main/java/duke/commands/CommandAddDeadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "public class CommandAddDeadline extends CommandAdd {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public static final String COMMAND_STRING \u003d \"deadline\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public CommandAddDeadline(TaskList taskList, Task task) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        super(taskList, task);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maxxyh": 13
    }
  },
  {
    "path": "src/main/java/duke/commands/CommandAddEvent.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "public class CommandAddEvent extends CommandAdd {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public static final String COMMAND_STRING \u003d \"event\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public CommandAddEvent(TaskList taskList, Task task) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        super(taskList, task);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maxxyh": 14
    }
  },
  {
    "path": "src/main/java/duke/commands/CommandAddToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "public class CommandAddToDo extends CommandAdd {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public static final String COMMAND_STRING \u003d \"todo\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public CommandAddToDo(TaskList taskList, Task task) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        super(taskList, task);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maxxyh": 13
    }
  },
  {
    "path": "src/main/java/duke/commands/CommandDelete.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "public class CommandDelete extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public static final String COMMAND_STRING \u003d \"delete\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private int toDeleteIdx;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * Constructor for CommandDelete."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @param taskList task list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @param toDeleteIdx index of task to delete."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public CommandDelete(TaskList taskList, int toDeleteIdx) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        super(taskList);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        this.toDeleteIdx \u003d toDeleteIdx;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public String execute() throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        String output \u003d \"Feeling weak? Giving up? Well done... Removed this task: \\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        output +\u003d taskList.remove(toDeleteIdx) + \"\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maxxyh": 28
    }
  },
  {
    "path": "src/main/java/duke/commands/CommandDone.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "public class CommandDone extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public static final String COMMAND_STRING \u003d \"done\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private int doneIdx;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * Constructor for CommandDone."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @param taskList Task List."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @param doneIdx Index of task to be set as done."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public CommandDone(TaskList taskList, int doneIdx) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        super(taskList);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        this.doneIdx \u003d doneIdx;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public String execute() throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        taskList.get(doneIdx).setDone();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        String output \u003d \"Finally... about time you finished that. Marked this task as done: \\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        output +\u003d taskList.get(doneIdx) + \"\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maxxyh": 29
    }
  },
  {
    "path": "src/main/java/duke/commands/CommandFind.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "public class CommandFind extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public static final String COMMAND_STRING \u003d \"find\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private String searchTerm;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * Constructor for {@code CommandFind}."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @param taskList Task list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @param ui Ui object"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @param searchTerm String term to search for"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public CommandFind(TaskList taskList, String searchTerm) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        super(taskList);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        this.searchTerm \u003d searchTerm.toLowerCase();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        output +\u003d \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            Task task \u003d taskList.get(i);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            if (task.toString().toLowerCase().contains(searchTerm)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                output +\u003d String.format(\"%d. %s\\n\", counter, task.toString());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maxxyh": 37
    }
  },
  {
    "path": "src/main/java/duke/commands/CommandHelp.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "public class CommandHelp extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public static final String COMMAND_STRING \u003d \"help\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private static final String HELP_STRING \u003d \"I\u0027m a task list manager basically! \""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            + \"Here are the commands you can use:\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            + \"- list\\n\" + \"- todo \u003cDescription\u003e\\n\" + \"- deadline \u003cDescription\u003e /by \u003cTime\u003e\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            + \"- event \u003cDescription\u003e /at \u003cTime\u003e\\n\" + \"- delete \u003cindex\u003e\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            + \"- done \u003cindex\u003e\\n\" + \"- find \u003csearch term\u003e\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            + \"- postpone \u003cindex\u003e \u003camount\u003e \u003ctime unit\u003e\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            + \"- advance \u003cindex\u003e \u003camount\u003e \u003ctime unit\u003e\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            + \"Date Time format: YYYY-MM-dd HHmm(-HHmm)\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * Constructor for {@code CommandHelp}."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public CommandHelp(TaskList taskList) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        super(taskList);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        return HELP_STRING;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maxxyh": 31
    }
  },
  {
    "path": "src/main/java/duke/commands/CommandList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "public class CommandList extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public static final String COMMAND_STRING \u003d \"list\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public CommandList(TaskList taskList) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        super(taskList);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        output +\u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            output +\u003d String.format(\"%d. %s\\n\", i + 1, taskList.get(i));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        int remainingTasks \u003d taskList.getRemainingTaskCount();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        output +\u003d String.format(\"You have %d undone tasks! %s\\n\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                remainingTasks,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                remainingTasks \u003e 0 ? \"Buck up!!\" : \"Well done I guess.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maxxyh": 26
    }
  },
  {
    "path": "src/main/java/duke/commands/CommandReschedule.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "public abstract class CommandReschedule extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public static final List\u003cChronoUnit\u003e VALID_TIME_UNITS \u003d new ArrayList\u003c\u003e(Arrays.asList(ChronoUnit.MINUTES,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            ChronoUnit.HOURS, ChronoUnit.DAYS, ChronoUnit.MONTHS, ChronoUnit.YEARS));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public static final String COMMAND_STRING \u003d \"reschedule\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    protected int taskIndex;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * Constructor for {@code CommandReschedule}."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public CommandReschedule(TaskList taskList, int taskIndex) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        super(taskList);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maxxyh": 28
    }
  },
  {
    "path": "src/main/java/duke/commands/CommandRescheduleAdvance.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.TimeModification;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.tasks.TaskDeadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.tasks.TaskEvent;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "public class CommandRescheduleAdvance extends CommandReschedule {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public static final String COMMAND_STRING \u003d \"advance\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private int amount;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private ChronoUnit timeUnit;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * Constructor for {@code CommandRescheduleAdvance}."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @param timeModification"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public CommandRescheduleAdvance(TaskList taskList, TimeModification timeModification) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        super(taskList, timeModification.getTaskIndex());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        this.amount \u003d timeModification.getAmount();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        this.timeUnit \u003d timeModification.getTimeUnit();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        Task task \u003d taskList.get(taskIndex);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        if (task instanceof TaskDeadline) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            TaskDeadline newTask \u003d (TaskDeadline) task;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            newTask.advance(amount, timeUnit);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        } else if (task instanceof TaskEvent) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            TaskEvent newTask \u003d (TaskEvent) task;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            newTask.advance(amount, timeUnit);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        String output \u003d String.format(\"Advancing by %d %s\\n\", amount, timeUnit)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                + \"Okay, I\u0027ve brought it forward. Updated as follows: \\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                + taskList.get(taskIndex);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maxxyh": 45
    }
  },
  {
    "path": "src/main/java/duke/commands/CommandReschedulePostpone.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.TimeModification;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.tasks.TaskDeadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.tasks.TaskEvent;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "public class CommandReschedulePostpone extends CommandReschedule {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public static final String COMMAND_STRING \u003d \"postpone\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private int amount;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private ChronoUnit timeUnit;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * Constructor for {@code CommandReschedulePostpone}."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @param timeModification"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public CommandReschedulePostpone(TaskList taskList, TimeModification timeModification) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        super(taskList, timeModification.getTaskIndex());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        this.amount \u003d timeModification.getAmount();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        this.timeUnit \u003d timeModification.getTimeUnit();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        Task task \u003d taskList.get(taskIndex);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        if (task.toString().charAt(1) \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            TaskDeadline newTask \u003d (TaskDeadline) task;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            newTask.postpone(amount, timeUnit);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        } else if (task.toString().charAt(1) \u003d\u003d \u0027E\u0027) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            TaskEvent newTask \u003d (TaskEvent) task;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            newTask.postpone(amount, timeUnit);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        String output \u003d String.format(\"Pushing back by %d %s\\n\", amount, timeUnit)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                + \"Okay, I\u0027ve postponed it. Updated as follows: \\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                + taskList.get(taskIndex);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maxxyh": 45
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "public class DukeException extends IllegalArgumentException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maxxyh": 9
    }
  },
  {
    "path": "src/main/java/duke/exceptions/IllegalValueException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.storage.Storage.StorageOperationException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maxxyh"
        },
        "content": " * Signals that input from save file is not in the right format."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maxxyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "public class IllegalValueException extends StorageOperationException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public IllegalValueException(String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maxxyh": 14
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InvalidArgumentsException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "public class InvalidArgumentsException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public InvalidArgumentsException(String command) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        super(\"Invalid arguments for \" + command);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maxxyh": 8
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InvalidTimeUnitException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "public class InvalidTimeUnitException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public InvalidTimeUnitException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        super(\"Invalid time unit specified\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maxxyh": 8
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    /** Default file path used if user does not provide one */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public static final String DEFAULT_STORAGE_FILEPATH \u003d \"/data/save.txt\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public static final String DEFAULT_STORAGE_DIRECTORY \u003d System.getProperty(\"user.home\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public static final String SEPARATOR \u003d \",\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * Task data storage argument format."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * \u003col\u003eT, D, E\u003c/ol\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * \u003col\u003eisDone (1 for done, 0 for not done)\u003c/ol\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * \u003col\u003edescription\u003c/ol\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * \u003col\u003edate (\"null\" if not applicable)\u003c/ol\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public static final Pattern TASK_DATA_ARGS_FORMAT \u003d"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            Pattern.compile(\"(?\u003ceventType\u003e[TDE])\" + SEPARATOR"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                    + \"(?\u003cisDone\u003e[01])\" + SEPARATOR"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                    + \"(?\u003cdescription\u003e.+[^,]$?)\" + SEPARATOR"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                    + \"(?\u003cdate\u003e.+)\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public final Path path;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public Storage() throws InvalidStorageFilePathException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        this(DEFAULT_STORAGE_DIRECTORY + DEFAULT_STORAGE_FILEPATH);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * Constructor for Storage."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @param filePath Save file path."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @throws InvalidStorageFilePathException If not valid path."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public Storage(String filePath) throws InvalidStorageFilePathException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        this.path \u003d Path.of(filePath);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        if (!isValidPath(path)) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            throw new InvalidStorageFilePathException(\"Storage file should end with .txt\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * Checks if save path is valid."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @param path save path."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @return true if path ends with .txt."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private static boolean isValidPath(Path path) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        return path.toString().endsWith(\".txt\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * Saves tasks from a {@code TaskList} into a external file."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @param taskList Task list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @throws StorageOperationException if IOException occurs."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public void saveTasks(TaskList taskList) throws StorageOperationException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        List\u003cString\u003e dataLines \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.getSize(); i++) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            Task task \u003d taskList.get(i);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            String line \u003d String.join(\",\", task.getSaveData());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            dataLines.add(line);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            Files.write(path, dataLines);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            throw new StorageOperationException(\"Error writing file: \" + path);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * Loads tasks from external file."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @return {@code TaskList} containing list of tasks."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @throws StorageOperationException if IOException or illegal save format is found."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public TaskList loadTasks() throws StorageOperationException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        if (!Files.exists(path) || !Files.isRegularFile(path)) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            File file \u003d new File(DEFAULT_STORAGE_FILEPATH);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            return new TaskList();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        assert Files.exists(path) \u0026\u0026 Files.isRegularFile(path) : \"A non-existent file scenario\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                + \" should already be handled\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            // read the file"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            List\u003cString\u003e dataLines \u003d Files.readAllLines(path);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            return TaskDecoder.decodeTasksFromSave(dataLines);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            throw new StorageOperationException(\"Error reading file: \" + path);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            // illegalValueException is when arguments cannot form a task"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        } catch (IllegalValueException ive) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            throw new StorageOperationException(ive.getMessage());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * Signals that storage file path is invalid."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public static class InvalidStorageFilePathException extends DukeException {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        public InvalidStorageFilePathException(String message) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            super(message);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * Signals that some error has occurred while trying to"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * convert and read/write data between the application"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * and the duke.storage file."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public static class StorageOperationException extends DukeException {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        public StorageOperationException(String message) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            super(message);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maxxyh": 129
    }
  },
  {
    "path": "src/main/java/duke/storage/TaskDecoder.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import static duke.storage.Storage.TASK_DATA_ARGS_FORMAT;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.exceptions.IllegalValueException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.tasks.TaskDeadline;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.tasks.TaskEvent;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.tasks.TaskToDo;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "maxxyh"
        },
        "content": " * Transforms String input from save file"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "maxxyh"
        },
        "content": " * into {@code Tasks}."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "maxxyh"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "maxxyh"
        },
        "content": " * Methods contained are static."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "maxxyh"
        },
        "content": " * \u003c/p\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "maxxyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "public class TaskDecoder {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * Decodes a list of Strings into a {@code TaskList}."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @param dataLines input from save file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @return TaskList object filled with decoded tasks."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @throws IllegalValueException if input is not in the right format."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public static TaskList decodeTasksFromSave(List\u003cString\u003e dataLines) throws IllegalValueException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        List\u003cTask\u003e output \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        for (String line : dataLines) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            output.add(decodeTaskFromString(line));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        return new TaskList(output);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * Decodes a String into a {@code Task}."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @param encodedTask task in String format."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @return {@code Task} object."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @throws IllegalValueException if input is not in the right format."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private static Task decodeTaskFromString(String encodedTask)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            throws IllegalValueException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        Matcher matcher \u003d TASK_DATA_ARGS_FORMAT.matcher(encodedTask);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            throw new IllegalValueException(\"Encoded task in invalid format. Unable to decode.\" + encodedTask);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        String command \u003d matcher.group(\"eventType\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        boolean isDone \u003d !matcher.group(\"isDone\").equals(\"0\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        String description \u003d matcher.group(\"description\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        assert !command.equals(\"\") \u0026\u0026 !matcher.group(\"isDone\").equals(\"\") \u0026\u0026 !description.equals(\"\")"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                : \"Save field is empty\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            return new TaskToDo(description, isDone);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        case \"E\": {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            String pattern \u003d (\"(\\\\S+)(\\\\s)(\\\\d{4})([-])(\\\\d{4})\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            String date \u003d matcher.group(\"date\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            assert Pattern.compile(pattern).matcher(date).matches() : \"Date input for \" + description + \" is incorrect\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            LocalDate eventDate \u003d LocalDate.parse(date.replaceAll(pattern, \"$1\"));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            String startTemp \u003d date.replaceAll(pattern, \"$3\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            String endTemp \u003d date.replaceAll(pattern, \"$5\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            LocalTime startTime \u003d LocalTime.parse(startTemp, DateTimeFormatter.ofPattern(\"Hmm\"));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            LocalTime endTime \u003d LocalTime.parse(endTemp, DateTimeFormatter.ofPattern(\"Hmm\"));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            Task taskEvent \u003d new TaskEvent(description, eventDate, startTime, endTime);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            if (isDone) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                taskEvent.setDone();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            return taskEvent;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        case \"D\": {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            String date \u003d matcher.group(\"date\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            String pattern \u003d (\"([\\\\S]+)(\\\\s)([\\\\S]+)\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            assert Pattern.compile(pattern).matcher(date).matches() : \"Date input for \" + description + \" is incorrect\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            LocalDate deadlineDate \u003d LocalDate.parse(date.replaceAll(pattern, \"$1\"));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            String timeTemp \u003d date.replaceAll(pattern, \"$3\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            LocalTime deadlineTime \u003d LocalTime.parse(timeTemp, DateTimeFormatter.ofPattern(\"Hmm\"));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            LocalDateTime deadline \u003d deadlineDate.atTime(deadlineTime);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            Task taskDeadline \u003d new TaskDeadline(description, deadline);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            if (isDone) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                taskDeadline.setDone();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            return taskDeadline;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            throw new AssertionError(\"Regex is not checking properly\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maxxyh": 97
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maxxyh"
        },
        "content": " * Represents a task with a description"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maxxyh"
        },
        "content": " * that can be checked as done/undone."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maxxyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * Constructor for Task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * Gets {@code isDone} status of the task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @return isDone - tick or X symbols"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        return (isDone ? \"/\" : \"X\"); //return tick or X symbols"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public abstract String[] getSaveData();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    /*public abstract void postpone(int amount, ChronoUnit timeUnit);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public abstract void advance(int amount, ChronoUnit timeUnit);*/"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "maxxyh": 42
    }
  },
  {
    "path": "src/main/java/duke/tasks/TaskDeadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import static duke.commands.CommandReschedule.VALID_TIME_UNITS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "public class TaskDeadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private LocalDateTime deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * Constructor for Deadline Task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @param description Description of deadline."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @param deadline Date and time of deadline."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public TaskDeadline(String description, LocalDateTime deadline) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public String[] getSaveData() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        return new String[] {\"D\", isDone ? \"1\" : \"0\", description,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                String.format(\"%s\", deadline.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd Hmm\"))) };"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        return String.format(\"[D][%s] %s (by: %s)\", getStatusIcon(),"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                description, deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\u0027,\u0027 Hmm\u0027hrs\u0027\")));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * Postpones the deadline."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @param amount amount of timeUnit to add."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @param timeUnit minutes, hours, days, months, years."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public void postpone(int amount, ChronoUnit timeUnit) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        assert VALID_TIME_UNITS.contains(timeUnit) : \"invalid time unit provided\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        deadline \u003d deadline.plus(amount, timeUnit);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * Advances the deadline."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @param amount amount of timeUnit to add."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @param timeUnit minutes, hours, days, months, years."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public void advance(int amount, ChronoUnit timeUnit) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        assert VALID_TIME_UNITS.contains(timeUnit) : \"invalid time unit provided\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        deadline \u003d deadline.minus(amount, timeUnit);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maxxyh": 54
    }
  },
  {
    "path": "src/main/java/duke/tasks/TaskEvent.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import static duke.commands.CommandReschedule.VALID_TIME_UNITS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "public class TaskEvent extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private LocalDate eventDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private LocalTime startTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private LocalTime endTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * Constructor for Event Task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @param eventDate"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @param startTime"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @param endTime"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public TaskEvent(String description, LocalDate eventDate, LocalTime startTime, LocalTime endTime) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        this.eventDate \u003d eventDate;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        this.startTime \u003d startTime;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        this.endTime \u003d endTime;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public String[] getSaveData() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        return new String[] {\"E\", isDone ? \"1\" : \"0\", description,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                String.format(\"%s %s-%s\", eventDate.format(DateTimeFormatter.ISO_LOCAL_DATE),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                        startTime.format(DateTimeFormatter.ofPattern(\"Hmm\")),"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                        endTime.format(DateTimeFormatter.ofPattern(\"Hmm\")))};"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        return String.format(\"[E][%s] %s (at: %s)\", getStatusIcon(), description,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                String.format("
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                        eventDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"))"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                        + \", \" + startTime.format(DateTimeFormatter.ofPattern(\"Hmm\u0027hrs\u0027\"))"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                        + \" - \" + endTime.format(DateTimeFormatter.ofPattern(\"Hmm\u0027hrs\u0027\"))"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                        ));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * Postpones the event."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @param amount amount of timeUnit to add."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @param timeUnit minutes, hours, days, months, years."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public void postpone(int amount, ChronoUnit timeUnit) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        assert VALID_TIME_UNITS.contains(timeUnit) : \"invalid time unit provided\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        switch (timeUnit) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        case MINUTES: case HOURS:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            startTime \u003d startTime.plus(amount, timeUnit);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            endTime \u003d endTime.plus(amount, timeUnit);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        case DAYS: case MONTHS: case YEARS:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            eventDate \u003d eventDate.plus(amount, timeUnit);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * Advances the event."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @param amount amount of timeUnit to add."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @param timeUnit minutes, hours, days, months, years."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public void advance(int amount, ChronoUnit timeUnit) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        assert VALID_TIME_UNITS.contains(timeUnit) : \"invalid time unit provided\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        switch (timeUnit) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        case MINUTES: case HOURS:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            startTime \u003d startTime.minus(amount, timeUnit);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            endTime \u003d endTime.minus(amount, timeUnit);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        case DAYS: case MONTHS: case YEARS:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            eventDate \u003d eventDate.minus(amount, timeUnit);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maxxyh": 85
    }
  },
  {
    "path": "src/main/java/duke/tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maxxyh"
        },
        "content": " * Represents a list of tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maxxyh"
        },
        "content": " * \u003cp\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maxxyh"
        },
        "content": " * Offers CRUD capabilities."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maxxyh"
        },
        "content": " * \u003c/p\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maxxyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public TaskList(List\u003cTask\u003e taskListIn) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        taskList \u003d taskListIn;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public boolean remove(Task task) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        return taskList.remove(task);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public Task remove(int index) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        return taskList.remove(index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public Task update(int index, Task newTask) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        return taskList.set(index, newTask);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public int getRemainingTaskCount() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        return (int) taskList.stream().filter(x -\u003e !x.isDone()).count();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maxxyh": 51
    }
  },
  {
    "path": "src/main/java/duke/tasks/TaskToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "public class TaskToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public TaskToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * Constructor for Todo Task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @param done Whether task is completed."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public TaskToDo(String description, boolean done) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public String[] getSaveData() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        return new String[] {\"T\", isDone ? \"1\" : \"0\", description, \"na\"};"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    /*@Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public void postpone(int amount, ChronoUnit timeUnit) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public void advance(int amount, ChronoUnit timeUnit) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        return String.format(\"[T][%s] %s\", getStatusIcon(), description);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maxxyh": 38
    }
  },
  {
    "path": "src/main/java/duke/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import javafx.scene.text.Text;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import javafx.scene.text.TextAlignment;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "maxxyh"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "maxxyh"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "maxxyh"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "maxxyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private Text dialog;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        setAlignment(Pos.CENTER_LEFT);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        dialog.setTextAlignment(TextAlignment.LEFT);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img, boolean error) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        db.setStyle(\"-fx-background-color: rgba(0,106,113,0.8);\" + \"-fx-border-radius: 20;\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                + \"-fx-background-radius: 20;\" + \"-fx-background-insets: 5;\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        if (error) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            db.dialog.setFill(Color.rgb(255, 126, 103));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maxxyh": 69
    }
  },
  {
    "path": "src/main/java/duke/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "maxxyh"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "maxxyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/claude.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    * Sets MainWindow\u0027s Duke object."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public void setDuke(Duke duke) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        this.duke \u003d duke;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getUserDialog(input, userImage));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        if (duke.respondToUserInput(input)) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public VBox getDialogContainer() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        return dialogContainer;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maxxyh": 58
    }
  },
  {
    "path": "src/main/java/duke/ui/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import static duke.commands.CommandReschedule.VALID_TIME_UNITS;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.TimeModification;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.commands.CommandAddDeadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.commands.CommandAddEvent;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.commands.CommandAddToDo;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.commands.CommandDelete;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.commands.CommandDone;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.commands.CommandFind;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.commands.CommandHelp;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.commands.CommandList;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.commands.CommandRescheduleAdvance;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.commands.CommandReschedulePostpone;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.exceptions.InvalidArgumentsException;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.exceptions.InvalidTimeUnitException;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.tasks.TaskDeadline;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.tasks.TaskEvent;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.tasks.TaskToDo;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "maxxyh"
        },
        "content": " * Transforms user commands into {@code Command}."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "maxxyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private static final Pattern COMMAND_INPUT_FORMAT \u003d Pattern.compile(\"(?\u003ccommand\u003e^[ltdefpah]\\\\w+)\" + \"\\\\s?\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            + \"(?\u003carguments\u003e.*)\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * Constructor for Parser."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @param taskList task list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public Parser(TaskList taskList) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * Gets {@code Command} from user String input."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * \u003cp\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * Takes in input for the following commands:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * \u003cli\u003eList\u003c/li\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * \u003cli\u003eDone\u003c/li\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * \u003cli\u003eDelete\u003c/li\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * \u003cli\u003eAdd - Event, To-do, Deadline\u003c/li\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * \u003c/p\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @param input user command input in String"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @return Command to be executed"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @throws DukeException If input does not match the required format."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public Command getCommandFromInput(String input) throws DukeException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        Matcher matcher \u003d COMMAND_INPUT_FORMAT.matcher(input);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            throw new DukeException(\"☹ BLEHHHHHH!!! I\u0027m (not) sorry, but I don\u0027t know what that means :/\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        String command \u003d matcher.group(\"command\").toLowerCase();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        String arguments \u003d matcher.group(\"arguments\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        case CommandList.COMMAND_STRING:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            return new CommandList(taskList);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        case CommandHelp.COMMAND_STRING:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            return new CommandHelp(taskList);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        case CommandDone.COMMAND_STRING:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            return new CommandDone(taskList, parseDoneOrDelete(arguments));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        case CommandDelete.COMMAND_STRING:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            return new CommandDelete(taskList, parseDoneOrDelete(arguments));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        case CommandFind.COMMAND_STRING:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            return new CommandFind(taskList, arguments);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        case CommandAddToDo.COMMAND_STRING:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            return new CommandAddToDo(taskList, new TaskToDo(arguments));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        case CommandAddEvent.COMMAND_STRING:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            return new CommandAddEvent(taskList, parseEvent(arguments));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        case CommandAddDeadline.COMMAND_STRING:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            return new CommandAddDeadline(taskList, parseDeadline(arguments));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        case CommandReschedulePostpone.COMMAND_STRING:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            return new CommandReschedulePostpone(taskList, parseReschedule(arguments));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        case CommandRescheduleAdvance.COMMAND_STRING:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            return new CommandRescheduleAdvance(taskList, parseReschedule(arguments));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            throw new DukeException(\"☹ BLEHHHHHH!!! I\u0027m (not) sorry, but I don\u0027t know what that means :/\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private TimeModification parseReschedule(String arguments) throws DukeException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        Pattern timeModPattern \u003d Pattern.compile(\"(?\u003ctaskIndex\u003e\\\\d+)\\\\s+(/by)\\\\s+(?\u003camount\u003e\\\\d+)\\\\s+(?\u003cunit\u003e\\\\w+)\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        Matcher matcher \u003d timeModPattern.matcher(arguments);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            throw new InvalidArgumentsException(\"reschedule\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        int index \u003d Integer.parseInt(matcher.group(\"taskIndex\")) - 1;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        int amount \u003d Integer.parseInt(matcher.group(\"amount\"));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        ChronoUnit timeUnit \u003d ChronoUnit.CENTURIES;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        String timeUnitInput \u003d matcher.group(\"unit\").toLowerCase();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        boolean found \u003d false;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        for (int i \u003d 0; i \u003c VALID_TIME_UNITS.size() \u0026\u0026 !found; i++) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            if (VALID_TIME_UNITS.get(i).toString().toLowerCase().contains(timeUnitInput)) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                timeUnit \u003d VALID_TIME_UNITS.get(i);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                found \u003d true;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        if (!found) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            throw new InvalidTimeUnitException();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        return new TimeModification(index, amount, timeUnit);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private int parseDoneOrDelete(String arguments) throws DukeException {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        Pattern integerPattern \u003d Pattern.compile(\"(?\u003cinteger\u003e\\\\d+)\\\\s?\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        Matcher matcher \u003d integerPattern.matcher(arguments);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        if (matcher.matches()) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            int index \u003d Integer.parseInt(matcher.group(\"integer\")) - 1;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            if (index \u003c 0 || index \u003e taskList.getSize() - 1) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                throw new DukeException(String.format(\"☹ BLEHHHHHH. Task no. %d does not exist. \""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                        + \"Please try again.\", (index + 1)));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                return index;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            throw new DukeException(\"☹ BLEHHHHHH. What are you talking about?? Tell me which task??\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private static Task parseEvent(String arguments) throws DukeException {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        String[] output \u003d arguments.split(\" /\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        if (output.length \u003c 2) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            throw new DukeException(String.format(\"☹ BLEHHHHHH!!! The description of an event cannot be empty.\"));"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        String description \u003d output[0];"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        String pattern \u003d (\"(at?)(\\\\s)(\\\\S+)(\\\\s)(\\\\d{4})([-])(\\\\d{4})\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        LocalDate eventDate \u003d LocalDate.parse(output[1].replaceAll(pattern, \"$3\"));"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        String startTemp \u003d output[1].replaceAll(pattern, \"$5\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        String endTemp \u003d output[1].replaceAll(pattern, \"$7\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        LocalTime startTime \u003d LocalTime.parse(startTemp.substring(0, 2) + \":\""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                + startTemp.substring(2, 4));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        LocalTime endTime \u003d LocalTime.parse(endTemp.substring(0, 2) + \":\""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                + endTemp.substring(2, 4));"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        return new TaskEvent(description, eventDate, startTime, endTime);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private static Task parseDeadline(String arguments) throws DukeException {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        String[] output \u003d arguments.split(\" /\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        if (output.length \u003c 2) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            throw new DukeException(String.format(\"☹ BLEHHHHHH!!! The description of a deadline cannot be empty.\"));"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        String description \u003d output[0];"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        String pattern \u003d (\"(by?)(\\\\s)([\\\\S]+)(\\\\s)([\\\\S]+)\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        LocalDate deadlineDate \u003d LocalDate.parse(output[1].replaceAll(pattern, \"$3\"));"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        String timeTemp \u003d output[1].replaceAll(pattern, \"$5\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        LocalTime deadlineTime \u003d LocalTime.parse(timeTemp.substring(0, 2)"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                + \":\" + timeTemp.substring(2, 4));"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        LocalDateTime deadline \u003d deadlineDate.atTime(deadlineTime);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        return new TaskDeadline(description, deadline);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maxxyh": 169
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maxxyh"
        },
        "content": " * Handles input and output to the user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maxxyh"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public static final String GOODBYE \u003d \"Bye. Try not to come again please...\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private static final String LOGO \u003d \"   ___      _      _ __   _              \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            + \"  /   \\\\    | |    | \u0027_ \\\\ | |_     __ _   \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            + \"  | - |    | |    | .__/ | \u0027 \\\\   / _` |  \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            + \"  |_|_|   _|_|_   |_|__  |_||_|  \\\\__,_|  \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            + \"_|\\\"\\\"\\\"\\\"\\\"|_|\\\"\\\"\\\"\\\"\\\"|_|\\\"\\\"\\\"\\\"\\\"|_|\\\"\\\"\\\"\\\"\\\"|_|\\\"\\\"\\\"\\\"\\\"| \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            + \"\\\"`-0-0-\u0027\\\"`-0-0-\u0027\\\"`-0-0-\u0027\\\"`-0-0-\u0027\\\"`-0-0-\u0027 \\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private static final String GREETING \u003d \"Hello, Alpha here... I see you\u0027ve come to \u0027organise your life\u0027... again.\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            + \"What do you want?\\n\" + \"Hint: type \u0027help\u0027 if you don\u0027t know what to do.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private static final String LINE_PREFIX \u003d \"    \";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private static final String LINE_SEPARATOR \u003d System.lineSeparator();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private static final String DIVIDER \u003d \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/enemy.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * Constructor for Ui object."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @param in input stream."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @param dialogContainer dialog container for Duke."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public Ui(InputStream in, VBox dialogContainer) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        sc \u003d new Scanner(in);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        this.dialogContainer \u003d dialogContainer;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * Show welcome message."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public void showWelcomeMessage() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        //print(\"Hello from\\n\" + LOGO);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        outputBlockToUser(GREETING);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public void showGoodbyeMessage() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        outputBlockToUser(GOODBYE);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * Shows a message to user in a text bubble."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public void outputBlockToUser(String... message) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        //System.out.print(LINE_PREFIX + DIVIDER.replace(\"\\n\", LINE_SEPARATOR));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        for (String m : message) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            // output +\u003d (LINE_PREFIX + m.replace(\"\\n\", LINE_SEPARATOR + LINE_PREFIX));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            output +\u003d (m.replace(\"\\n\", LINE_SEPARATOR));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        print(output);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        //System.out.print(DIVIDER.replace(\"\\n\", LINE_SEPARATOR));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * Shows an error message to the user in a text bubble."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     * @param message"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public void outputErrorBlockToUser(String... message) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        for (String m : message) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            output +\u003d (m.replace(\"\\n\", LINE_SEPARATOR));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        printError(output);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private void print(String input) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(input, dukeImage, false));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    private void printError(String input) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(input, dukeImage, true));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maxxyh": 85
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "\u003c?import javafx.scene.text.Text?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "\u003cfx:root alignment\u003d\"CENTER_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"-Infinity\" style\u003d\"-fx-background-color: rgba(104,176,171,0.7); -fx-border-radius: 20; -fx-background-radius: 20; -fx-background-insets: 5;\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "      \u003cText fx:id\u003d\"dialog\" strokeType\u003d\"OUTSIDE\" strokeWidth\u003d\"0.0\" text\u003d\"Text\" textAlignment\u003d\"RIGHT\" wrappingWidth\u003d\"206.9367003440857\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            \u003cInsets /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "         \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            \u003cFont name\u003d\"Consolas\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "         \u003c/font\u003e\u003c/Text\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            \u003cInsets left\u003d\"10.0\" right\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/ImageView\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "maxxyh": 26
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" style\u003d\"-fx-background: #ecf4f3;\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"334.0\" spacing\u003d\"10.0\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "               \u003cpadding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                  \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "               \u003c/padding\u003e\u003c/VBox\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "         \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "            \u003cInsets /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "         \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "maxxyh": 26
    }
  },
  {
    "path": "src/test/java/duke/commands/CommandReschedulePostponeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.TimeModification;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.tasks.TaskEvent;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "public class CommandReschedulePostponeTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public void postponeCommand_correctEventInput_executePostponeEvent() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        Task event \u003d new TaskEvent(\"john mayer concert\", LocalDate.of(2020, 9, 10),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                LocalTime.of(18, 0), LocalTime.of(21, 0));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        taskList.add(event);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        TimeModification timeMod \u003d new TimeModification(0, 2, ChronoUnit.HOURS);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        Command postponeCommand \u003d new CommandReschedulePostpone(taskList, timeMod);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        String newTime \u003d \"Sep 10 2020, 2000hrs - 2300hrs\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        boolean containsCorrectOutput \u003d postponeCommand.execute().contains(newTime);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        assertTrue(containsCorrectOutput);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maxxyh": 32
    }
  },
  {
    "path": "src/test/java/duke/ui/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.commands.CommandAdd;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.commands.CommandAddDeadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.commands.CommandAddEvent;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.tasks.TaskDeadline;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.tasks.TaskEvent;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public void getCommandFromInput_eventDescriptionDurationString_createsAddEventCommand() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        String input \u003d \"event john mayer concert /at 2020-09-10 1800-2200\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        Parser parser \u003d new Parser(taskList);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        CommandAdd expectedCommand \u003d new CommandAddEvent(taskList,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                new TaskEvent(\"john mayer concert\", LocalDate.parse(\"2020-09-10\"),"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                        LocalTime.parse(\"18:00\"), LocalTime.parse(\"22:00\")));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        assertEquals(expectedCommand.getTask().toString(), ("
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                (CommandAdd) parser.getCommandFromInput(input)).getTask().toString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public void getCommandFromInput_deadlineDescriptionDeadlineString_createsAddDeadlineCommand() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        String input \u003d \"deadline mop floor /by 2020-09-10 2000\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        Parser parser \u003d new Parser(taskList);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        CommandAdd expectedCommand \u003d new CommandAddDeadline(taskList,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                new TaskDeadline(\"mop floor\", LocalDateTime.of(2020, 9, 10, 20, 0)));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        assertEquals(expectedCommand.getTask().toString(), ("
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                (CommandAdd) parser.getCommandFromInput(input)).getTask().toString());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    public void getPostponeCommandFromInput_singularTimeUnitWithPluralAmount_createsPostponeCommand() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        Task event \u003d new TaskEvent(\"john mayer concert\", LocalDate.of(2020, 9, 10),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "                LocalTime.of(18, 0), LocalTime.of(21, 0));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        taskList.add(event);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        String input \u003d \"postpone 1 /by 2 hour\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        Parser parser \u003d new Parser(taskList);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        Command postponeCommand \u003d parser.getCommandFromInput(input);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "maxxyh"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        String newTime \u003d \"Sep 10 2020, 2000hrs - 2300hrs\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        boolean containsCorrectOutput \u003d postponeCommand.execute().contains(newTime);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "        assertTrue(containsCorrectOutput);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maxxyh": 60
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "deadline return book /by 2020-06-06 1800"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "event project meeting /at 2020-08-06 1400-1600"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "deadline return book /by 2020-09-05 2100"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "event project meeting /at 2020-09-02 1400-1600"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "done"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "todo"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "blah"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "done 10"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "delete 7"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "maxxyh": 17
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maxxyh"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java ..\\src\\main\\java\\duke\\command\\*.java ..\\src\\main\\java\\duke\\storage\\*.java ..\\src\\main\\java\\duke\\ui\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "maxxyh": 1,
      "-": 20
    }
  }
]
