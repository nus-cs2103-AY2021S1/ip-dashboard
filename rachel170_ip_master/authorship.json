[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rachel170"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    protected String dueDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rachel170"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    public Deadline(String name, String details) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        this.dueDate \u003d details;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rachel170"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    // Gets deadline of the task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    public String getDeadline() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        return this.dueDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rachel170"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        // By default print task name"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.dueDate + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rachel170"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rachel170": 19
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rachel170"
        },
        "content": "import java.lang.reflect.Array;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rachel170"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rachel170"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rachel170"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    /** Constants **/"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    public static String outputBreaker \u003d \"\u003e\u003e\u003e \";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rachel170"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        /** Initialize objects required **/"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        // Using Scanner for reading inputs"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        // Initialize List for Duke to store stuff in"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        /** Note: limit storage to 100 items **/"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rachel170"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        // Text Images"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rachel170"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        String lineBreaker \u003d \"--.--.--.--.--.--.--.--.--.--.--.\" +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                \"--.--.--.--.--.--.--.--.--.--.--\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rachel170"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        // Greetings"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        System.out.println(\"\\nHello, I\u0027m Duke!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        System.out.println(\"What can I help you with today?\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        System.out.println(\"\\n\" + lineBreaker);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rachel170"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        // Read user input"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        String userInput \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        // System Loop"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        // End only if user input is \"bye\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        while (!userInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rachel170"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rachel170"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                // Process input"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                String[] instructions \u003d userInput.split(\" \", 2);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "rachel170"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                // React to commands"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                if (userInput.equals(\"list\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                    /** Command: \"list\" **/"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                    printList(list);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "rachel170"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                } else if (instructions[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                    /** Command for to do Tasks creation **/"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                    // Add check for command details"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                    if (hasCmdDetails(instructions)) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                        // If command has details, add task to list"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                        System.out.print(outputBreaker);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                        list.add(new Todo(instructions[1]));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                        System.out.println(\"added: \" + list.get(list.size() - 1));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                        System.out.println(\"There is now \" + list.size() + \" tasks in the list!\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                        // Command has no details, throw exception"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                        throw new DukeException(outputBreaker +"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                                \"Whoops! I think you forgot to finish your \""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                                + instructions[0] + \" command. Sorry but I need it. D:\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "rachel170"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                } else if (instructions[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                    /** Command: \"deadline \u003ctaskName\u003e /by \u003cdeadline\u003e\" **/"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                    if (hasCmdDetails(instructions)) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                        System.out.print(outputBreaker);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                        // Extract Details from command"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                        String[] details \u003d instructions[1].split(\" /by \", 2);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                        list.add(new Deadline(details[0], details[1]));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                        System.out.println(\"added: \" + list.get(list.size() - 1));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                        System.out.println(\"There is now \" + list.size() + \" tasks in the list!\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                        // Command has no details, throw exception"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                        throw new DukeException(outputBreaker +"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                                \"Whoops! I think you forgot to finish your \""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                                + instructions[0] + \" command. Sorry but I need it. D:\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "rachel170"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                } else if (instructions[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                    /** Command: \"deadline \u003ctaskName\u003e /by \u003cdeadline\u003e\" **/"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                    if (hasCmdDetails(instructions)) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                        System.out.print(outputBreaker);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                        // Extract Details from command"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                        String[] details \u003d instructions[1].split(\" /at \", 2);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                        list.add(new Event(details[0], details[1]));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                        System.out.println(\"added: \" + list.get(list.size() - 1));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                        System.out.println(\"There is now \" + list.size() + \" tasks in the list!\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                        // Command has no details, throw exception"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                        throw new DukeException(outputBreaker +"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                                \"Whoops! I think you forgot to finish your \""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                                + instructions[0] + \" command. Sorry but I need it. D:\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "rachel170"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                } else if (instructions[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                    // Command: \"done \u003ctask\u003e\""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                    // If valid \u003ctask\u003e, mark done"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                        int taskNumber \u003d Integer.parseInt(instructions[1]);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "rachel170"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                        // Only add if entry exist at index"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                        if (checkList(list, taskNumber)) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                            list.get(taskNumber - 1).markedDone(true);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                            System.out.print(outputBreaker);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                            System.out.println(\"Congratulations! I\u0027ve helped you mark the task as done:\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                            System.out.print(\"\\t\" + list.get(taskNumber - 1).toString() + \"\\n\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "rachel170"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                            // Index don\u0027t exist so throw exception"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                            System.out.print(outputBreaker);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                            throw new DukeException(\"Sorry, I don\u0027t think that\u0027s a valid index...\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                    } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                        //System.out.println(\"Caught nfe\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                        System.out.print(outputBreaker);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                        throw new DukeException(\"Sorry, I don\u0027t think that\u0027s a valid number...\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "rachel170"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                } else if (instructions[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                    // Command: \"delete \u003ctaskNumber\u003e\""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                    // If valid \u003ctaskNumber\u003e, remove from list"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                        int taskNumber \u003d Integer.parseInt(instructions[1]);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "rachel170"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                        // Only delete if entry exist at index"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                        if (checkList(list, taskNumber)) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                            System.out.print(outputBreaker);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                            System.out.println(\"Noted! I\u0027ve helped you remove the following task:\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                            System.out.print(\"\\t\" + list.get(taskNumber - 1).toString() + \"\\n\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                            list.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                            System.out.println(\"\\tNow, there is \" + list.size() + \" tasks in the list!\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "rachel170"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                            // Index don\u0027t exist so throw exception"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                            System.out.print(outputBreaker);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                            throw new DukeException(\"Sorry, I don\u0027t think that\u0027s a valid index...\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                    } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                        //System.out.println(\"Caught nfe\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                        System.out.print(outputBreaker);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                        throw new DukeException(\"Sorry, I don\u0027t think that\u0027s a valid number...\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "rachel170"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                    // Default"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                    // Duke does not recognize the commands"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                    System.out.print(outputBreaker);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                    throw new DukeException(\"Sorry, I don\u0027t recognize what you just entered...\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "rachel170"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "rachel170"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "rachel170"
        },
        "content": "            }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "rachel170"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "rachel170"
        },
        "content": "            System.out.println(\"\\n\" + lineBreaker + \"\\n\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "rachel170"
        },
        "content": "            // Read user input once more"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "rachel170"
        },
        "content": "            userInput \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        // Farewell message"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        System.out.print(outputBreaker);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        System.out.println(\"Bye! Hoped I helped!\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        System.out.println(\"\\n\" + lineBreaker);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "rachel170"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    /** Prints all the contents of the list in order **/"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    public static void printList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        System.out.print(\"Here is what I have! ^^\\n\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        // Handles printing empty list"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        if (list.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "rachel170"
        },
        "content": "            System.out.println(\"Whoops! I don\u0027t have anything of note yet...\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "rachel170"
        },
        "content": "            // Enumerator"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "rachel170"
        },
        "content": "            System.out.print((i+1) + \".\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "rachel170"
        },
        "content": "            // Actual Task"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "rachel170"
        },
        "content": "            System.out.println(list.get(i));"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "rachel170"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    /** Checks if index is valid **/"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    public static boolean checkList(ArrayList\u003cTask\u003e list, int id) {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        if (id \u003c\u003d 0 || id \u003e list.size()) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "rachel170"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "rachel170"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "rachel170"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    public static boolean hasCmdDetails(String[] cmd) throws DukeException {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "rachel170"
        },
        "content": "            if (cmd[1].equals(\"\") || cmd[1].trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                /** Make sure command has follow up details **/"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                // Check if there is second word"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                // Check if second word is just whitespace"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                // If so, command has no details"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "rachel170"
        },
        "content": "            }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "rachel170"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "rachel170"
        },
        "content": "            // Check if there is even anything after command"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "rachel170"
        },
        "content": "            // Exception thrown if userInput.split() fails"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "rachel170"
        },
        "content": "            // Command has no details, throw exception"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "rachel170"
        },
        "content": "            throw new DukeException(outputBreaker +"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                    \"Whoops! I think you forgot to finish your \""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "rachel170"
        },
        "content": "                    + cmd[0] + \" command. Sorry but I need it. D:\");"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rachel170": 199,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rachel170"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rachel170"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rachel170": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rachel170"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    protected String duration;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rachel170"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    public Event(String name, String details) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        this.duration \u003d details;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rachel170"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    // Gets duration of the task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    public String getEventDetails() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        return this.duration;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rachel170"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        // By default print task name"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.duration + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rachel170"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rachel170": 19
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rachel170"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    // Variables"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rachel170"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    // Constructors"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    public Task() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rachel170"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rachel170"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    // Gets Status of task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    public boolean getStatus() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rachel170"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    // Sets Status of task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    public void markedDone(boolean status) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        this.isDone \u003d status;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rachel170"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    // Gets name of task"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "rachel170"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        // By default print task name and status"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        if(isDone) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "rachel170"
        },
        "content": "            return \"[✓] \" + this.name;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "rachel170"
        },
        "content": "            return \"[✗] \" + this.name;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "rachel170"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rachel170": 39
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rachel170"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    public Todo(String name) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rachel170"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        // By default print task name"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rachel170"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rachel170"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "rachel170": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "rachel170"
        },
        "content": "something"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "rachel170"
        },
        "content": "todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "rachel170"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "rachel170"
        },
        "content": "event"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "rachel170"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "rachel170"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "rachel170"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "rachel170"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "rachel170"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rachel170"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rachel170"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "rachel170"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "rachel170"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "rachel170"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "rachel170"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "rachel170"
        },
        "content": "list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "rachel170"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "rachel170"
        },
        "content": "list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "rachel170"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "rachel170": 19
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "rachel170"
        },
        "content": "dir /s /B ..\\src\\main\\java\\*.java \u003e sources.txt"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "rachel170"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin @sources.txt"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "rachel170"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "rachel170"
        },
        "content": "    echo TEST FAILED"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "rachel170"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "rachel170"
        },
        "content": ")"
      }
    ],
    "authorContributionMap": {
      "rachel170": 6,
      "-": 20
    }
  }
]
