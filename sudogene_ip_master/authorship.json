[
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class AddCommand implements Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public AddCommand(String type, String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            Task task \u003d TaskList.createTask(type, description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            storage.update(tasks.getList());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            String msg \u003d ui.getSuccessMessage(\"add\", task);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            msg +\u003d \"\\n\" + ui.getTaskReportMessage(tasks.size());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            ui.sendMessage(msg);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            ui.sendMessage(e.getMessage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 30
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    boolean isExit();"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    void execute(TaskList tasks, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 4
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * Deadline is a subtype of Task which has a stipulated deadline"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * for the task to be completed by."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /** The deadline of the task. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    protected LocalDate byDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /** The deadline time of the task. */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    protected LocalTime byTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructor for Deadline."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param by the deadline of the task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Deadline(String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        super(\"D\", description);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            String[] dateTime \u003d by.split(\" \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            String dateValue \u003d dateTime[0];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            if (dateValue.equals(\"today\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                dateValue \u003d LocalDate.now().toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } else if (dateValue.equals(\"tomorrow\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                dateValue \u003d LocalDate.now().plusDays(1).toString();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            this.byDate \u003d LocalDate.parse(dateValue);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            this.byTime \u003d LocalTime.parse(dateTime[1]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (DateTimeParseException de) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            throw new DukeException(\"Invalid date time format!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException aioobe) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            throw new DukeException(\"Missing date or time!\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Deadline(String description, String by, boolean isDone) throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        super(\"D\", description, isDone);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            String[] dateTime \u003d by.split(\" \");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            String dateValue \u003d dateTime[0];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            if (dateValue.equals(\"today\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                dateValue \u003d LocalDate.now().toString();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } else if (dateValue.equals(\"tomorrow\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                dateValue \u003d LocalDate.now().plusDays(1).toString();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            this.byDate \u003d LocalDate.parse(dateValue);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            this.byTime \u003d LocalTime.parse(dateTime[1]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (DateTimeParseException de) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            throw new DukeException(\"Invalid date time format!\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException aioobe) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            throw new DukeException(\"Missing date or time!\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return description + \" / \" + byDate + \" \" + byTime;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return super.toString() + String.format(\" (by: %s, %s)\","
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                byDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")),"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                byTime.format(DateTimeFormatter.ofPattern(\"hh:mm a\")));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (this \u003d\u003d obj) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (obj instanceof Deadline) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            Deadline t \u003d (Deadline) obj;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return t.type.equals(this.type) \u0026\u0026 t.isDone \u003d\u003d this.isDone"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    \u0026\u0026 t.description.equals(this.description)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    \u0026\u0026 t.byDate.equals(this.byDate) \u0026\u0026 t.byTime.equals(this.byTime);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 87
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class DoneCommand implements Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            Task task \u003d tasks.markDone(index);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            storage.update(tasks.getList());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            String msg \u003d ui.getSuccessMessage(\"done\", task);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            ui.sendMessage(msg);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            ui.sendMessage(e.getMessage());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 25
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * Duke is a personal chatbot with the following functionalities:"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * (i) Adding and removing of Tasks to a list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * (ii) Checking Tasks as completed"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * (iii) Viewing current task list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * Duke stores the task list in a txt file which is first created"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * when the user does not have such a file."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * @author Andy Wu"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /** List which stores the Tasks. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final TaskList tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /** Reads and writes the txt file. */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /** In charge of all user interface related operations */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructor for initializing the bot."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * A file path is required to store the task list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param filePath the path of the txt file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        TaskList temp;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            temp \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            ui.sendMessage(e.getMessage());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            temp \u003d new TaskList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        tasks \u003d temp;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * The main algorithm of the bot which runs indefinitely as long as"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * the running flag is true. The bot takes in user input, processes"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * it and detects command/keywords."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        boolean isRunning \u003d true;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        while (isRunning) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            String input \u003d ui.readCommand();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                isRunning \u003d !c.isExit();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                ui.sendMessage(e.getMessage());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Prints a display of the bot\u0027s logo, level, and name,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * before instantiating and running the bot."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param args optional and will be treated as the first user input."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 64,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * Since Duke has specific keywords or command formats required from"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * the user input to function as intended, and user inputs can deviate"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * from expected formats due to an array of errors i.e. number format error,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * wrong command error, non-existing command error, command format error,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * the DukeException helps to standardize all Duke related errors."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructor which prepends a Duke error signature"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * to the given message for standardization."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param message the error message."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        super(\"!!Whoops!! \" + message);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 19
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * Event is a subtype of Task which represents a task"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * which requires an attendance at a given time."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /** The date of the event. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    protected LocalDate atDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /** The time of the event. */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    protected LocalTime atTime;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructor for Event."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param at the time of the task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Event(String description, String at) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        super(\"E\", description);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            String[] dateTime \u003d at.split(\" \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            String dateValue \u003d dateTime[0];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            if (dateValue.equals(\"today\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                dateValue \u003d LocalDate.now().toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } else if (dateValue.equals(\"tomorrow\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                dateValue \u003d LocalDate.now().plusDays(1).toString();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            this.atDate \u003d LocalDate.parse(dateValue);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            this.atTime \u003d LocalTime.parse(dateTime[1]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (DateTimeParseException de) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            throw new DukeException(\"Invalid date time format!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException aioobe) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            throw new DukeException(\"Missing date or time!\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Event(String description, String at, boolean isDone) throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        super(\"E\", description, isDone);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            String[] dateTime \u003d at.split(\" \");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            String dateValue \u003d dateTime[0];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            if (dateValue.equals(\"today\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                dateValue \u003d LocalDate.now().toString();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } else if (dateValue.equals(\"tomorrow\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                dateValue \u003d LocalDate.now().plusDays(1).toString();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            this.atDate \u003d LocalDate.parse(dateValue);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            this.atTime \u003d LocalTime.parse(dateTime[1]);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (DateTimeParseException de) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            throw new DukeException(\"Invalid date time format!\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException aioobe) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            throw new DukeException(\"Missing date or time!\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return description + \" / \" + atDate + \" \" + atTime;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return super.toString() + String.format(\" (at: %s, %s)\","
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                atDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")),"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                atTime.format(DateTimeFormatter.ofPattern(\"hh:mm a\")));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (this \u003d\u003d obj) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (obj instanceof Event) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            Event t \u003d (Event) obj;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return t.type.equals(this.type) \u0026\u0026 t.isDone \u003d\u003d this.isDone"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    \u0026\u0026 t.description.equals(this.description)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    \u0026\u0026 t.atDate.equals(this.atDate) \u0026\u0026 t.atTime.equals(this.atTime);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 87
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class ExitCommand implements Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        ui.showExit();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 13
    }
  },
  {
    "path": "src/main/java/InvalidCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class InvalidCommand implements Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        ui.sendMessage(\"Sorry I do not know what that means :(\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 12
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class ListCommand implements Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        ui.sendMessage(tasks.getPrintMessage());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 12
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private static String[] format(String raw) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return raw.split(\" \");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public static String getTaskDescription(String[] raw) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String[] temp \u003d Arrays.copyOfRange(raw, 1, raw.length);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return String.join(\" \", temp);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String[] parsed \u003d Parser.format(input);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String command \u003d parsed[0];"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        switch (command.toLowerCase()) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"quit\":"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"exit\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            String description \u003d Parser.getTaskDescription(parsed);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return new AddCommand(command, description);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                int i \u003d Integer.parseInt(parsed[1]);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                return new DoneCommand(i);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                throw new DukeException(\"Invalid task number!\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"remove\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                int i \u003d Integer.parseInt(parsed[1]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                return new RemoveCommand(i);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                throw new DukeException(\"Invalid task number!\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return new InvalidCommand();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 49
    }
  },
  {
    "path": "src/main/java/RemoveCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class RemoveCommand implements Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public RemoveCommand(int index) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            Task task \u003d tasks.remove(index);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            storage.update(tasks.getList());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            String msg \u003d ui.getSuccessMessage(\"remove\", task);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            msg +\u003d \"\\n\" + ui.getTaskReportMessage(tasks.size());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            ui.sendMessage(msg);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            ui.sendMessage(e.getMessage());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 26
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final File file;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.file \u003d new File(filePath);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            if (!file.getParentFile().exists()) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } catch (IOException ioe) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                System.err.println(\"IOException: \" + ioe.getMessage());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public List\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                String[] t \u003d sc.nextLine().split(\",\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                switch (t[0]) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    list.add(new Todo(t[2], t[1].equals(\"1\")));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    list.add(new Deadline(t[2], t[3], t[1].equals(\"1\")));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    list.add(new Event(t[2], t[3], t[1].equals(\"1\")));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            sc.close();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            System.err.println(e.getMessage());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void update(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            FileWriter fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            for (Task t: list) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                String toWrite \u003d String.format(\"%s,%s\", t.getType(), (t.getDone() ? \"1\" : \"0\"));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                String desc \u003d t.getDescription();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                if (\"DE\".contains(t.getType())) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    String[] descSplit \u003d desc.split(\" / \");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    toWrite +\u003d \",\" + descSplit[descSplit.length - 2];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    toWrite +\u003d \",\" + descSplit[descSplit.length - 1];"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    toWrite +\u003d \",\" + desc;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                fw.write(toWrite + \"\\n\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            System.err.println(\"IOException: \" + ioe.getMessage());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 76
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * The Task class encapsulates tasks which are pieces of work"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * to be done. This is used by the Duke chatbot for creating"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * of tasks which can be marked as completed."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /** The description of the task */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /** Flags if a task has been completed */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /** The type of task */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructor for the Task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Tasks are created to be not completed."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param type the type of task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Task(String type, String description) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Overloaded constructor for the Task which includes isDone."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param type the type of task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param isDone the completion flag of the task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Task(String type, String description, boolean isDone) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Gets the completion flag of the task and generates the"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * unicode string representation of the task status;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * a tick for completed, a cross for not completed."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return the unicode of the completion flag."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Checks if the task is completed based on the completion flag."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @return boolean value for completion flag."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public boolean getDone() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Marks a task as completed by setting completion flag to true."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Gets the string description of the task, which is the same"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * string used during initialization."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sudogene"
        },
        "content": "      * @return description of the task."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return String.format(\"[%s][%s] %s\", type, getStatusIcon(), description);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (this \u003d\u003d obj) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (obj instanceof Task) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            Task t \u003d (Task) obj;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return t.type.equals(this.type) \u0026\u0026 t.isDone \u003d\u003d this.isDone"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    \u0026\u0026 t.description.equals(this.description);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 98
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public TaskList(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public static Task createTask(String type, String description) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        Task task \u003d new Task(\"\", \"\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String[] split;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String desc;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        description \u003d description.trim();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (description.isEmpty()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            throw new DukeException(\"Description cannot be empty!\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            task \u003d new Todo(description);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                split \u003d description.split(\" /by \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                desc \u003d split[0];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                String by \u003d split[1];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                task \u003d new Deadline(desc, by);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } catch (IndexOutOfBoundsException ioobe) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                throw new DukeException(\"Invalid \" + type + \" description!\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                split \u003d description.split(\" /at \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                desc \u003d split[0];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                String at \u003d split[1];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                task \u003d new Event(desc, at);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } catch (IndexOutOfBoundsException ioobe) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                throw new DukeException(\"Invalid \" + type + \" description!\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Task remove(int i) throws DukeException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            i--;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return list.remove(i);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (IndexOutOfBoundsException ioobe) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            throw new DukeException(\"Invalid task number!\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Task markDone(int i) throws DukeException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            i--;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            Task task \u003d list.get(i);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            if (task.getDone()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                throw new DukeException(\"Task is already done!\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                task.markAsDone();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (IndexOutOfBoundsException ioobe) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            throw new DukeException(\"Invalid task number!\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String getPrintMessage() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        if (list.isEmpty()) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            return \"Your list is empty!\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        int num \u003d 1;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        StringBuilder msg \u003d new StringBuilder((list.size() \u003e 1)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                ? \"Here are the tasks in your list:\\n\""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                : \"Here\u0027s your one and only task:\\n\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        for (Task task: list) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            msg.append(String.format(\"%d. %s\", num, task));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            if (num \u003c list.size()) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                msg.append(\"\\n\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            num++;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return msg.toString();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 105
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * Todo is a subtype of Task which has a description"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * of the task to be done. This task is rather similar"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * to the parent Task class, but is necessary to have it"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": " * be on the same level as the other subtypes of Task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * Constructor for Todo."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     * @param description the description of the task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        super(\"T\", description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        super(\"T\", description, isDone);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 21
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    private final Scanner sc;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String logo \u003d \"                                                 _     _\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                + \" _______  _______  _______  _______  __   __    (c).-.(c)\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                + \"|       ||       ||  _    ||  _    ||  | |  |    / ._. \\\\ \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                + \"|_     _||    ___|| |_|   || |_|   ||  |_|  |  __\\\\( Y )/__\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                + \"  |   |  |   |___ |       ||       ||       | (_.-/\u0027-\u0027\\\\-._)\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                + \"  |   |  |    ___||  _   | |  _   | |_     _|    ||   || \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                + \"  |   |  |   |___ | |_|   || |_|   |  |   |    _.\u0027 `-\u0027 \u0027._\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                + \"  |___|  |_______||_______||_______|  |___|   (.-./`-\u0027\\\\.-.)\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                + \"                                               `-\u0027     `-\u0027\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                + \"By: Andy Wu\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        sendMessage(\"Hello! Tebby lives to serve :)\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void showExit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        sendMessage(\"Have a good day! Tebby logging off...\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public void sendMessage(String message) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String line \u003d \"    --------------------------------------------------------\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(message);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        int offset \u003d 0;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            int nextIndex \u003d sb.indexOf(\"\\n\", offset);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            if (nextIndex !\u003d -1) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                sb.insert(nextIndex + 1, \"    \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                offset \u003d nextIndex + 5;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        System.out.println(line + \"\\n    \" + sb + \"\\n\" + line);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        System.out.print(\"\u003e\u003e \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String getTaskReportMessage(int size) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String task \u003d size \u003d\u003d 1 ? \"task\" : \"tasks\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        String num \u003d size \u003d\u003d 0 ? \"no\" : String.valueOf(size);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return \"Now you have \" + num + \" \" + task + \" in the list!\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    public String getSuccessMessage(String type, Task task) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Okay I\u0027ve \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        switch(type) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"add\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            sb.append(\"added:\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"remove\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            sb.append(\"removed:\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            sb.append(\"marked this task as done:\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        sb.append(String.format(\"\\n    %s\", task));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 73
    }
  },
  {
    "path": "test/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "class EventTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    void constructor_missingTime_exceptionThrown() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            new Event(\"unit testing\", \"today\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            fail(\"Should have thrown exception.\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            assertEquals(\"!!Whoops!! Missing date or time!\", e.getMessage());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 14
    }
  },
  {
    "path": "test/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "class TaskListTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    void createTask_todo_success() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            assertEquals(new Todo(\"borrow book\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    TaskList.createTask(\"todo\", \"borrow book\"));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    void createTask_event_success() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            assertEquals(new Event(\"book borrowing\", \"2020-08-26 00:00\"),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    TaskList.createTask(\"event\", \"book borrowing /at 2020-08-26 00:00\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "sudogene"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    @org.junit.jupiter.api.Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    void createTask_eventMissingAt_exceptionThrown() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            assertEquals(new Event(\"book borrowing\", \"2020-08-26 00:00\"),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "sudogene"
        },
        "content": "                    TaskList.createTask(\"event\", \"book borrowing at 2020-08-26 00:00\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            fail(\"Should have thrown exception.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "sudogene"
        },
        "content": "            assertEquals(\"!!Whoops!! Invalid event description!\", e.getMessage());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "sudogene"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "sudogene"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "sudogene"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "sudogene": 35
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "sudogene"
        },
        "content": "todo todo"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "sudogene"
        },
        "content": "event event at some date"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "sudogene"
        },
        "content": "event event /at some date"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "sudogene"
        },
        "content": "deadline deadline /by some date"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "sudogene"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "sudogene"
        },
        "content": "done two"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "sudogene"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "sudogene"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "sudogene"
        },
        "content": "delete 200"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "sudogene"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "sudogene"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "sudogene"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "sudogene": 12
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "sudogene"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "sudogene": 1,
      "-": 37
    }
  }
]
