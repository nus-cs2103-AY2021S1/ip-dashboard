[
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private final UI ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private final TaskList taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private Duke(UI ui, TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public static void newDuke(Path filePath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        UI ui \u003d new UI();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        Storage storage;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            storage \u003d Storage.loadStorage(filePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            taskList.loadDataFromStorage(filePath);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            new Duke(ui, taskList, storage).run();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }  catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            ui.printToConsole(\"File System Error\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            ui.printToConsole(\"Stored file format is invalid\\n\" + e.getMessage());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        while (ui.hasNextCommand()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            String nextCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            Command command \u003d Parser.parse(nextCommand);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                command.execute(storage, taskList, ui);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                ui.printToConsole(e.getMessage());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                ui.printToConsole(\"Error: Task could not be saved.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        Path filePath \u003d Paths.get(\"data\",\"duke.txt\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        Duke.newDuke(filePath);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 56,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        super(\"Action failed: \" + message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 8
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public static Command parse(String fullCommand) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        String[] inputList \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        String argument \u003d inputList.length \u003e 1 ? inputList[1] : \"\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        CommandType commandType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            commandType \u003d CommandType.valueOf(inputList[0].toUpperCase());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            commandType \u003d CommandType.INVALID;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        switch (commandType) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        case BYE:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        case DATE:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            return new DateCommand(argument);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            return new DoneCommand(Integer.parseInt(inputList[1]));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            return new DeleteCommand(Integer.parseInt(inputList[1]));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            return new ToDoCommand(argument);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            return new EventCommand(argument);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            return new DeadlineCommand(argument);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        case INVALID: default:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            return new InvalidCommand();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 41
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private final Path filePath;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private Storage(Path filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public static Storage loadStorage(Path filePath) throws IOException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        // create data directory if it does not exist"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        if (!Files.exists(filePath.getParent())) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            Files.createDirectories(filePath.getParent());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        // create file if it does not exist"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        if (!Files.exists(filePath)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            Files.createFile(filePath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return new Storage(filePath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public void writeLineToStorage(String line) throws IOException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(filePath.toString(), true);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        fileWriter.write(line + System.lineSeparator());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        fileWriter.close();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public void deleteLineFromStorage(String lineToDelete) throws IOException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        FileReader reader \u003d new FileReader(filePath.toString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        BufferedReader bufferedReader \u003d new BufferedReader(reader);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        StringBuilder fileData \u003d new StringBuilder();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        while ((line \u003d bufferedReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            if (!line.equals(lineToDelete)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                fileData.append(line);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                fileData.append(System.lineSeparator());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(filePath.toString(), false);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        fileWriter.write(fileData.toString());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        fileWriter.close();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public void editLineInStorage(String oldLine, String newLine) throws IOException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        FileReader reader \u003d new FileReader(filePath.toString());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        BufferedReader bufferedReader \u003d new BufferedReader(reader);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        StringBuilder oldFileData \u003d new StringBuilder();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        while ((line \u003d bufferedReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            oldFileData.append(line);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            oldFileData.append(System.lineSeparator());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        oldLine \u003d Pattern.quote(oldLine);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        String newData \u003d oldFileData.toString().replaceFirst(oldLine, newLine);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(filePath.toString(), false);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        fileWriter.write(newData);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        fileWriter.close();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 75
    }
  },
  {
    "path": "src/main/java/duke/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private static final String DIVIDER \u003d \"___________________________________________________________________________\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private static final String LOGO \u003d \"             _        ______   _____    ______   _____  \\n\" +"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            \"     /\\\\     | |      |  ____| |  __ \\\\  |  ____| |  __ \\\\ \\n\" +"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            \"    /  \\\\    | |      | |__    | |__) | | |__    | |  | |\\n\" +"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            \"   / /\\\\ \\\\   | |      |  __|   |  _  /  |  __|   | |  | |\\n\" +"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            \"  / ____ \\\\  | |____  | |      | | \\\\ \\\\  | |____  | |__| |\\n\" +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            \" /_/    \\\\_\\\\ |______| |_|      |_|  \\\\_\\\\ |______| |_____/ \\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private final Scanner sc;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private boolean hasClosed;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public UI() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        hasClosed \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public void printToConsole(String message) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        System.out.println(LOGO);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        printToConsole(\"Hi I\u0027m Alfred! How can I help you today?\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public void close() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        printToConsole(\"Goodbye!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        hasClosed \u003d true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public boolean hasNextCommand() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return !hasClosed \u0026\u0026 sc.hasNextLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 49
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.UI;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public ByeCommand() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public void execute(Storage storage, TaskList taskList, UI ui) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        ui.close();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 16
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public abstract void execute(Storage storage, TaskList taskList, UI ui) throws DukeException, IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 14
    }
  },
  {
    "path": "src/main/java/duke/command/CommandType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public enum CommandType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    BYE,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    DATE,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    DELETE,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    INVALID,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    LIST,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 13
    }
  },
  {
    "path": "src/main/java/duke/command/DateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public class DateCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private final String argument;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public DateCommand(String argument) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        this.argument \u003d argument;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public void execute(Storage storage, TaskList taskList, UI ui) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        ui.printToConsole(taskList.taskListToDateFilteredString(argument));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 20
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private final String argument;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public DeadlineCommand(String argument) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        this.argument \u003d argument;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public void execute(Storage storage, TaskList taskList, UI ui) throws DukeException, IOException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        Deadline newDeadline \u003d Deadline.createNewDeadline(argument);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        storage.writeLineToStorage(newDeadline.generateStorageString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        ui.printToConsole(taskList.addTaskToList(newDeadline));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 25
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private final int argument;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public DeleteCommand(int argument) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        this.argument \u003d argument;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public void execute(Storage storage, TaskList taskList, UI ui) throws DukeException, IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        ui.printToConsole(taskList.deleteTask(argument, storage));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 22
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private final int argument;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public DoneCommand(int argument) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        this.argument \u003d argument;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public void execute(Storage storage, TaskList taskList, UI ui) throws DukeException, IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        ui.printToConsole(taskList.markTaskAsDone(argument, storage));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 22
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private final String argument;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public EventCommand(String argument) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        this.argument \u003d argument;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public void execute(Storage storage, TaskList taskList, UI ui) throws DukeException, IOException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        Event newEvent \u003d Event.createNewEvent(argument);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        storage.writeLineToStorage(newEvent.generateStorageString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        ui.printToConsole(taskList.addTaskToList(newEvent));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 25
    }
  },
  {
    "path": "src/main/java/duke/command/InvalidCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public class InvalidCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public InvalidCommand() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public void execute(Storage storage, TaskList taskList, UI ui) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        throw new DukeException(\"Invalid Command.\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 17
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.UI;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public void execute(Storage storage, TaskList taskList, UI ui) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        ui.printToConsole(taskList.convertTaskListToString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 18
    }
  },
  {
    "path": "src/main/java/duke/command/ToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.UI;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public class ToDoCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private final String argument;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public ToDoCommand(String argument) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        this.argument \u003d argument;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public void execute(Storage storage, TaskList taskList, UI ui) throws DukeException, IOException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        ToDo newTodo \u003d ToDo.createNewToDo(argument);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        storage.writeLineToStorage(newTodo.generateStorageString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        ui.printToConsole(taskList.addTaskToList(newTodo));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 25
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private final LocalDate deadlineDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private final LocalTime deadlineTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private final String originalArguments;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public static Deadline createNewDeadline(String argument) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        String[] deadlineArguments \u003d argument.split(\" /by \");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        if (deadlineArguments.length !\u003d 2) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            throw new DukeException(\"Invalid arguments for a new deadline.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        String deadlineName \u003d deadlineArguments[0];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        if (deadlineName.isBlank()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            throw new DukeException(\"duke.task.Deadline name cannot be blank!\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        String deadlineDateTime \u003d deadlineArguments[1];"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        if (deadlineDateTime.isBlank()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            throw new DukeException(\"duke.task.Deadline time cannot be blank!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        String[] datetime \u003d deadlineDateTime.split(\" \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        LocalDate deadlineDate;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        LocalTime deadlineTime \u003d null;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            deadlineDate \u003d LocalDate.parse(datetime[0]);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            if (datetime.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"HH[:]mm\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                deadlineTime \u003d LocalTime.parse(datetime[1], dtf);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            throw new DukeException(\"DateTime format is invalid.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return new Deadline(deadlineName, argument, deadlineDate, deadlineTime);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private Deadline(String taskName, String originalArguments, LocalDate deadlineDate, LocalTime deadlineTime) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        this.originalArguments \u003d originalArguments;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        this.deadlineDate \u003d deadlineDate;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        this.deadlineTime \u003d deadlineTime;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private String printDateTime() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        String output \u003d deadlineDate.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        if (deadlineTime !\u003d null) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            output +\u003d \", \" + deadlineTime.format(DateTimeFormatter.ofLocalizedTime(FormatStyle.SHORT));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public boolean isOnSameDay(LocalDate localDate) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return localDate.isEqual(this.deadlineDate);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public String generateStorageString() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return String.format(\"DEADLINE | %s | %s\", isDone ? \"TRUE\" : \"FALSE\", originalArguments);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(), printDateTime());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 88
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private final LocalDate startDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private final LocalTime startTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private final String originalArguments;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public static Event createNewEvent(String argument) throws DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        String[] eventArguments \u003d argument.split(\" /at \");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        if (eventArguments.length !\u003d 2) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            throw new DukeException(\"Invalid arguments for a new event.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        String eventName \u003d eventArguments[0];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        if (eventName.isBlank()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            throw new DukeException(\"duke.task.Event name cannot be blank!\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        String startDateTime \u003d eventArguments[1];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        if (startDateTime.isBlank()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            throw new DukeException(\"duke.task.Event time cannot be blank!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        String[] datetime \u003d startDateTime.split(\" \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        LocalDate startDate;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        LocalTime startTime \u003d null;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            startDate \u003d LocalDate.parse(datetime[0]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            if (datetime.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                DateTimeFormatter dtf \u003d DateTimeFormatter.ofPattern(\"HH[:]mm\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                startTime \u003d LocalTime.parse(datetime[1], dtf);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            throw new DukeException(\"DateTime format is invalid.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return new Event(eventName, argument, startDate, startTime);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private String printDateTime() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        String output \u003d startDate.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.LONG));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        if (startTime !\u003d null) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            output +\u003d \", \" + startTime.format(DateTimeFormatter.ofLocalizedTime(FormatStyle.SHORT));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private Event(String taskName, String originalArguments, LocalDate startDate, LocalTime startTime) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        this.originalArguments \u003d originalArguments;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        this.startDate \u003d startDate;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        this.startTime \u003d startTime;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public String generateStorageString() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return String.format(\"EVENT | %s | %s\", isDone ? \"TRUE\" : \"FALSE\", originalArguments);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public boolean isOnSameDay(LocalDate localDate) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return localDate.isEqual(this.startDate);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(), printDateTime());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 86
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    final String taskData;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    boolean isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    Task(String taskData) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        this.taskData \u003d taskData;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public void competeTask() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public boolean isOnSameDay(LocalDate localDate) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public abstract String generateStorageString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            return \"[\\u2713] \" + taskData;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            return \"[\\u2718] \" + taskData;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 32
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private final List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public String convertTaskListToString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return convertTaskListToString(this.tasks);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private String convertTaskListToString(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            return \"You have no tasks!\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            sb.append((i+1));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            sb.append(\".\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            sb.append(tasks.get(i));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            sb.append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        // remove last newline character"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        sb.deleteCharAt(sb.length() - 1);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public String markTaskAsDone(int taskID, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        if (taskID \u003c 1 || taskID \u003e tasks.size()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            throw new DukeException(\"duke.task.Task ID is invalid!\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        Task task \u003d tasks.get(taskID - 1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        String oldTaskString \u003d task.generateStorageString();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        task.competeTask();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        String newTaskString \u003d task.generateStorageString();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        storage.editLineInStorage(oldTaskString, newTaskString);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return String.format(\"Nice! I\u0027ve marked this duke.task as done.\\n%s\", task.toString());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public String deleteTask(int taskID, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        if (taskID \u003c 1 || taskID \u003e tasks.size()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            throw new DukeException(\"duke.task.Task ID is invalid!\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        Task task \u003d tasks.get(taskID - 1);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        storage.deleteLineFromStorage(task.generateStorageString());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        tasks.remove(taskID - 1);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return String.format(\"Nice! I\u0027ve marked this duke.task as done.\\n%s\\nNow you have %d tasks in the list\","
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                task.toString(), tasks.size());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public String addTaskToList(Task task) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return String.format(\"Got it. I\u0027ve added this duke.task: \\n%s\\nNow you have %d tasks in the list\","
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                task.toString(), tasks.size());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public String taskListToDateFilteredString(String dateString) throws DukeException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        LocalDate date;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            date \u003d LocalDate.parse(dateString);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            throw new DukeException(\"DateTime format is invalid.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        List\u003cTask\u003e temp \u003d tasks.stream()"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                .filter(task -\u003e task.isOnSameDay(date))"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                .collect(Collectors.toList());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return convertTaskListToString(temp);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public void loadDataFromStorage(Path filePath) throws DukeException, IOException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        FileReader reader \u003d new FileReader(filePath.toString());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        BufferedReader bufferedReader \u003d new BufferedReader(reader);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        while ((line \u003d bufferedReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            String[] entry \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            if (entry.length \u003d\u003d 3) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                String taskType \u003d entry[0];"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                if (!entry[1].toUpperCase().equals(\"TRUE\") \u0026\u0026 !entry[1].toUpperCase().equals(\"FALSE\")) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                    throw new DukeException(\"One or more duke.task statuses are not stored correctly\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                boolean taskIsDone \u003d Boolean.parseBoolean(entry[1]);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                String taskArgument \u003d entry[2];"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                Task newTask;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                switch (taskType) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                case \"TODO\":"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                    newTask \u003d ToDo.createNewToDo(taskArgument);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                case \"EVENT\":"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                    newTask \u003d Event.createNewEvent(taskArgument);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                case \"DEADLINE\":"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                    newTask \u003d Deadline.createNewDeadline(taskArgument);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                    throw new DukeException(\"One or more duke.task types are not stored correctly\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                if (taskIsDone) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                    newTask.competeTask();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                tasks.add(newTask);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "                throw new DukeException(\"One or more entries have an invalid number of arguments\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        reader.close();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 147
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public static ToDo createNewToDo(String argument) throws DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        if (argument.isBlank()) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "            throw new DukeException(\"duke.task.Task name cannot be empty!\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return new ToDo(argument);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    private ToDo(String taskName) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public String generateStorageString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return String.format(\"TODO | %s | %s\", isDone ? \"TRUE\" : \"FALSE\", taskData);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 28
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "todo todo test"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "event"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "event  /at time"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "event name /at  "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "event name /at time"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "event name /at 2020-12-12 23:59"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "event name /at 2020-12-12"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "event name /at 2020-12-13 2359"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "deadline  /by time"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "deadline name /by  "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "deadline name /by time"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "deadline name /by 2020-12-12 23:59"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "deadline name /by 2020-12-13"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "deadline name /by 2020-12-12 2359"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "date 2020-12-12"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "done 999"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "list"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "delete 999"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 30
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "java -Dfile.encoding\u003dUTF-8 -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pr4aveen"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "fi "
      }
    ],
    "authorContributionMap": {
      "pr4aveen": 3,
      "-": 31
    }
  }
]
