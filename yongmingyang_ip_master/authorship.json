[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    String date;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public Deadline(String taskName, String date) throws DukeInvalidDateException, DukeInvalidTaskException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        if(!date.equals(null) \u0026\u0026 !date.equals(\" \")){"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            this.date \u003d date;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            throw new DukeInvalidDateException();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        String finished \u003d this.done ? \"✓\" : \"✗\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        String toReturn \u003d \"[D]\" + \"[\" + finished + \"] \" + taskName + \" (by: \" + date +\")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        return toReturn;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongmingyang": 21
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "import main.java.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    final static String UNDERSCORE \u003d \"____________________________________________________________ \\n\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        String intro \u003d \"____________________________________________________________ \\n\" +"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                        \"Hello! I\u0027m Duke \\n\" + \"What can I do for you? \\n\" +"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                        \"____________________________________________________________\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        System.out.println(intro);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        Scanner input \u003d  new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        while(input.hasNextLine()) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                line \u003d input.nextLine();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                if (line.equals(\"bye\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                    System.out.println(UNDERSCORE + \" Bye. Hope to see you again soon!\" + \"\\n\" + UNDERSCORE);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                } else if (line.equals(\"list\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                    taskList.list();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                } else if (line.indexOf(\"delete\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                    taskList.delete(line);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                } else if (line.indexOf(\"done\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                    taskList.checkOff(line);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                    taskList.addTask(line);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            } catch (DukeInvalidDateException err){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                System.out.println(err.getMessage());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            } catch (DukeInvalidDayException err) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                System.out.println(err.getMessage());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            } catch (DukeInvalidTaskException err) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                System.out.println(err.getMessage());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            } catch (DukeException err) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                System.out.println(err.getMessage());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        input.close();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongmingyang": 39,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public DukeException(String message){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongmingyang": 7
    }
  },
  {
    "path": "src/main/java/DukeInvalidDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "public class DukeInvalidDateException extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public DukeInvalidDateException(){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        super(\"Date is invalid, date cannot be left blank :(\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongmingyang": 7
    }
  },
  {
    "path": "src/main/java/DukeInvalidDayException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "public class DukeInvalidDayException extends DukeException{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public DukeInvalidDayException(){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        super(\"Day of event is invalid :(, please do not leave it as empty\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongmingyang": 7
    }
  },
  {
    "path": "src/main/java/DukeInvalidTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "public class DukeInvalidTaskException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public DukeInvalidTaskException(){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        super(\"Task is invalid, description cannot be empty :(\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongmingyang": 7
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    String day;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public Event(String taskName, String day) throws DukeInvalidDayException, DukeInvalidTaskException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        if(!day.equals(null) \u0026\u0026 !day.equals(\" \")) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            this.day \u003d day;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            throw new DukeInvalidDayException();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        String finished \u003d this.done ? \"✓\" : \"✗\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        String toReturn \u003d \"[E]\" + \"[\" + finished + \"] \" + taskName + \" (at: \" + day + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        return toReturn;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongmingyang": 21
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    String taskName;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    Boolean done;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public Task(String taskName) throws DukeInvalidTaskException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        if (!taskName.equals(null) \u0026\u0026 !taskName.equals(\" \")) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            this.done \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            throw new DukeInvalidTaskException();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public void checkOff() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        this.done \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        String finished \u003d this.done ? \"✓\" : \"✗\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        String toReturn \u003d \"[\" + finished + \"]\" + taskName;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        return toReturn;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongmingyang": 26
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    private ArrayList\u003cTask\u003e todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    final static String UNDERSCORE \u003d \"____________________________________________________________ \\n\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public TaskList(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        todo \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public void delete (String line) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        String[] splits \u003d line.split(\"delete \");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        if(splits.length \u003e 1) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            int taskNumber \u003d  Integer.parseInt(splits[1]);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            if (taskNumber - 1 \u003e\u003d todo.size() || taskNumber - 1 \u003c 0 || todo.size() \u003d\u003d 0){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                throw new DukeException(\"Invalid task number\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                int size \u003d todo.size() - 1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                System.out.println(UNDERSCORE + \"Noted. I\u0027ve removed this task: \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                        + todo.get(taskNumber - 1) + \"\\n\" + \"Now you have \" + size + \" task in the list \\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                        + UNDERSCORE"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                );"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                todo.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            throw new DukeException(\"Please key in the task number to be marked done\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public void addTask (String line) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        if (line.indexOf(\"todo\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            addToDo(line);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        } else if (line.indexOf(\"deadline\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            addDeadline(line);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        } else if (line.indexOf(\"event\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            addEvent(line);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            throw new DukeException(\"I\u0027m sorry i don\u0027t know what you mean :(\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    private void addEvent (String line) throws DukeInvalidDayException, DukeInvalidTaskException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        String[] splits \u003d line.split(\"event |/at\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        if (splits.length \u003e 2){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            Event task \u003d new Event(splits[1], splits[2]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            todo.add(task);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            System.out.println(UNDERSCORE + \"Got it. I\u0027ve added this to task: \\n\" + task + \"\\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                    + \"Now you have \" + todo.size() + \" tasks in the list \\n\" + UNDERSCORE"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            );"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        } else if (splits.length \u003e 1){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            throw new DukeInvalidDayException();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            throw new DukeInvalidTaskException();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    private void addDeadline (String line) throws DukeInvalidDateException, DukeInvalidTaskException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        String[] splits \u003d line.split(\"deadline |/by \");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        if (splits.length \u003e 2) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            Deadline task \u003d new Deadline(splits[1], splits[2]);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            todo.add(task);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            System.out.println(UNDERSCORE + \"Got it. I\u0027ve added this to task: \\n\" + task + \"\\n\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                    + \"Now you have \" + todo.size() + \" tasks in the list \\n\" + UNDERSCORE"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            );"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        } else if (splits.length \u003e 1) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            throw new DukeInvalidDateException();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            throw new DukeInvalidTaskException();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    private void addToDo (String line) throws DukeInvalidTaskException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        String[] splits \u003d line.split(\"todo\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        if(splits.length \u003e 1) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            Todo task \u003d new Todo(splits[1]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            todo.add(task);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            System.out.println(UNDERSCORE + \"Got it. I\u0027ve added this to task: \\n\" + task + \"\\n\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                    + \"Now you have \" + todo.size() + \" tasks in the list \\n\" + UNDERSCORE"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            );"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            throw new DukeInvalidTaskException();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public void checkOff (String line) throws DukeException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        String[] splits \u003d line.split(\"done \");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        if(splits.length \u003e 1){"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(splits[1]);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            if(taskNumber - 1 \u003e\u003d todo.size() ){"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                throw new DukeException(\"Invalid Task Number\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            todo.get(taskNumber - 1).checkOff();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            System.out.println(UNDERSCORE + \"Nice! I\u0027ve marked this task as done: \\n\" +"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                    todo.get(taskNumber - 1) + \"\\n\" + UNDERSCORE"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            );"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            throw new DukeException(\"Please key in the task number to be marked done\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public void list() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        System.out.println(UNDERSCORE);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        if(todo.size() \u003d\u003d 0){"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            System.out.println(\"you do not have any tasks yet\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            for (int i \u003d 0; i \u003c todo.size(); i++) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                int number \u003d i + 1;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "                System.out.println(\" \" + number + \".\" + todo.get(i));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        System.out.println(UNDERSCORE);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongmingyang": 115
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public Todo(String taskName) throws DukeInvalidTaskException{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        String finished \u003d this.done ? \"✓\" : \"✗\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "        return \"[T]\" + \"[\" + finished + \"]\" + taskName;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "yongmingyang": 13
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "todo work"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "todo return books"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "deadline this friday /by sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "yongmingyang": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "    PAUSE"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "yongmingyang"
        },
        "content": "PAUSE"
      }
    ],
    "authorContributionMap": {
      "yongmingyang": 5,
      "-": 20
    }
  }
]
