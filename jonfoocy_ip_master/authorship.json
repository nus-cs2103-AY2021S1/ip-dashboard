[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    protected String dueDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public Deadline(String description, String dueDate) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(), this.dueDate);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 13
    }
  },
  {
    "path": "src/main/java/EmptyDeadlineDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class EmptyDeadlineDescriptionException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public EmptyDeadlineDescriptionException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 5
    }
  },
  {
    "path": "src/main/java/EmptyEventDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class EmptyEventDescriptionException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public EmptyEventDescriptionException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 5
    }
  },
  {
    "path": "src/main/java/EmptyTodoDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class EmptyTodoDescriptionException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public EmptyTodoDescriptionException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public Event(String description, String date) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(), this.date);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 13
    }
  },
  {
    "path": "src/main/java/InvalidDeadlineByException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class InvalidDeadlineByException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public InvalidDeadlineByException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 5
    }
  },
  {
    "path": "src/main/java/InvalidEventAtException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class InvalidEventAtException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public InvalidEventAtException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 5
    }
  },
  {
    "path": "src/main/java/MissingTaskNumberException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class MissingTaskNumberException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public MissingTaskNumberException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 5
    }
  },
  {
    "path": "src/main/java/Sparrow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.lang.StringBuilder;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class Sparrow {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        greet();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        String command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        while (handle(command)) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static boolean handle(String command) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        String[] commandArr \u003d command.trim().split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            switch (commandArr[0]) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                    reply(\"Bye. Hope t\u0027 see ye again soon!\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                    displayList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                        markAsDone(commandArr[1]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                        throw new MissingTaskNumberException(\"No task number passed to done command.\", e);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                        addTask(\"todo\", commandArr[1]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                        throw new EmptyTodoDescriptionException(\"No description provided for todo.\", e);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                        addTask(\"deadline\", commandArr[1]);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                        throw new EmptyDeadlineDescriptionException(\"No description provided for deadline.\", e);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                        addTask(\"event\", commandArr[1]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                        throw new EmptyEventDescriptionException(\"No description provided for event.\", e);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                        deleteTask(commandArr[1]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                        throw new MissingTaskNumberException(\"No task number passed to delete command.\", e);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                    throw new UnknownCommandException(commandArr[0]);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } catch (MissingTaskNumberException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            System.out.println(standardExceptionMessage() + \"️ Please enter a task number after the \\\"done\\\"/\\\"delete\\\" command.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } catch (EmptyTodoDescriptionException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            System.out.println(standardExceptionMessage() + \"️ The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } catch (EmptyDeadlineDescriptionException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            System.out.println(standardExceptionMessage() + \"️ The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } catch (EmptyEventDescriptionException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            System.out.println(standardExceptionMessage() + \"️ The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } catch (UnknownCommandException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            System.out.println(standardExceptionMessage() + \"️ What be the meaning of this?\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static void greet() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        String welcome \u003d \"  _  _ _   ___ _                    \\n\" +"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                \" | || (_) |_ _( )_ __               \\n\" +"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                \" | __ | |  | ||/| \u0027  \\\\              \\n\" +"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                \" |_||_|_| |___| |_|_|_|             \\n\" +"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                \" / __|_ __  __ _ _ _ _ _ _____ __ __\\n\" +"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                \" \\\\__ \\\\ \u0027_ \\\\/ _` | \u0027_| \u0027_/ _ \\\\ V  V /\\n\" +"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                \" |___/ .__/\\\\__,_|_| |_| \\\\___/\\\\_/\\\\_/ \\n\" +"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                \"     |_|                            \";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        System.out.println(welcome);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        reply(\"How can I help ye?\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static void reply(String message) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        System.out.println(\"    ________________________________________\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        Scanner sc \u003d new Scanner(message);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            System.out.println(\"      \" + line);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        System.out.println(\"    ________________________________________\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static void addTask(String type, String details) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Aye Aye Captain! I\u0027ve added this task:\\n  \");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            switch (type) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                    Todo todo \u003d new Todo(details);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                    taskList.add(todo);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                    sb.append(todo);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                        String[] taskDetails \u003d details.trim().split(\"/by\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                        String description \u003d taskDetails[0];"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                        Deadline deadline \u003d new Deadline(description, taskDetails[1].trim());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                        taskList.add(deadline);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                        sb.append(deadline);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                        throw new InvalidDeadlineByException(\"/by not passed\", e);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                        String[] taskDetails \u003d details.trim().split(\"/at\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                        String description \u003d taskDetails[0];"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                        Event event \u003d new Event(description, taskDetails[1].trim());"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                        taskList.add(event);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                        sb.append(event);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                        throw new InvalidEventAtException(\"/at not passed\", e);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            String summary \u003d String.format(\"\\nNow you have %d task(s) in the list.\", taskList.size());"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            sb.append(summary);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            reply(sb.toString());"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } catch (InvalidDeadlineByException e) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            System.out.println(standardExceptionMessage() + \"️ Please pass a /by to the deadline\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } catch (InvalidEventAtException e) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            System.out.println(standardExceptionMessage() + \"️ Please pass a /at to the event\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static void displayList() {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(\"Here are the tasks in your list: \\n\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            String temp \u003d String.format(\"%d. %s\\n\", i + 1, taskList.get(i));"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            sb.append(temp);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        reply(sb.toString());"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static void markAsDone(String taskNum) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(taskNum);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            if (taskNumber \u003c\u003d taskList.size() \u0026\u0026 taskNumber \u003e 0) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                taskList.get(taskNumber - 1).markAsDone();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                reply(\"Jolly riddance! I\u0027ve marked this task as done:\\n\" + taskList.get(taskNumber - 1));"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                System.out.println(\"Please enter a valid task number.\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            System.out.println(\"Please enter a valid task number.\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    "
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static String standardExceptionMessage() {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "       return \"ARR!\\uD83C\\uDFF4\\u200D\\u2620\\uFE0F️ \";"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static void deleteTask(String taskNum) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(taskNum);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            if (taskNumber \u003c\u003d taskList.size() \u0026\u0026 taskNumber \u003e 0) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                Task removedTask \u003d taskList.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                reply(\"Jolly riddance! I\u0027ve deleted this task:\\n\" + \"  \" + removedTask.toString() + String.format(\"\\nNow you have %d task(s) in the list.\", taskList.size()));"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                System.out.println(\"Please enter a valid task number.\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            System.out.println(\"Please enter a valid task number.\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 190
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 22
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 10
    }
  },
  {
    "path": "src/main/java/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class UnknownCommandException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public UnknownCommandException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 5
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "todo buy ship"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "todo sail to Tortuga"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "wrong command"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "todo"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "todo find treasure"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "deadline find a crew"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "deadline find a crew /by"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "deadline find a crew /by end of Aug"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "event"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "event brethren\u0027s court meeting"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "event brethren\u0027s court meeting /at"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "event brethren\u0027s court meeting /at next Wed 2-4pm"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "done"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "done -5"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "done 1000"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "delete"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "delete -99"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "delete 999"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "bye"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 24
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "java -classpath ../bin Sparrow \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 2,
      "-": 36
    }
  }
]
