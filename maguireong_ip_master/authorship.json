[
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maguireong"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maguireong"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maguireong"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maguireong"
        },
        "content": "  [E][✘] project meeting (at: Aug 17 2010)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maguireong"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maguireong"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maguireong"
        },
        "content": "1.[E][✘] project meeting (at: Aug 17 2010)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maguireong"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maguireong"
        },
        "content": "  [✓] return book"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maguireong"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maguireong"
        },
        "content": "1.[E][✓] project meeting (at: Aug 17 2010)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "maguireong"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "maguireong": 12
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maguireong"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maguireong"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maguireong"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maguireong"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maguireong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maguireong"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maguireong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maguireong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maguireong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maguireong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maguireong"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "maguireong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "maguireong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maguireong": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maguireong"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maguireong"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maguireong"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maguireong"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maguireong"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maguireong"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maguireong"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maguireong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maguireong"
        },
        "content": "    public final static String FILEPATH \u003d System.getProperty(\"user.dir\") + \"/duke.txt\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maguireong"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "maguireong"
        },
        "content": "    private static void appendToFile(String filePath, String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "maguireong"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "maguireong"
        },
        "content": "        fw.write(textToAppend + \"\\n\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "maguireong"
        },
        "content": "//        System.out.println(textToAppend);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "maguireong"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "maguireong"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "maguireong"
        },
        "content": "    public static void main(String[] args) throws IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "maguireong"
        },
        "content": "        "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "maguireong"
        },
        "content": "        boolean directoryExists \u003d new File(FILEPATH).exists();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "maguireong"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "maguireong"
        },
        "content": "        if (!directoryExists) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "maguireong"
        },
        "content": "            FileWriter fw \u003d new FileWriter(FILEPATH, true);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "maguireong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "maguireong"
        },
        "content": "        appendToFile(FILEPATH, \"Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                \"What can I do for you?\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "maguireong"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "maguireong"
        },
        "content": "        ArrayList\u003cTask\u003e books \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "maguireong"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "maguireong"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "maguireong"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                String echo \u003d sc.nextLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                String[] s \u003d echo.split(\"\\\\s\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                String first \u003d s[0];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "maguireong"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                if (first.equals(\"bye\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                    appendToFile(FILEPATH, \"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                if (first.equals(\"list\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                    appendToFile(FILEPATH, \"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                    for (int i \u003d 0; i \u003c books.size(); i++) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                        int l \u003d i + 1;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                        appendToFile(FILEPATH, l + \".\" + books.get(i));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                } else if (first.equals(\"done\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                    int index \u003d Integer.parseInt(s[1]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                    books.get(index - 1).markAsDone();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                    appendToFile(FILEPATH, \"Nice! I\u0027ve marked this task as done:\\n  \" + books.get(index - 1).getStatusIcon() + \" return book\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                    if (first.equals(\"todo\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                        if (s.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                            throw new EmptyTodoException();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                        Todo t \u003d new Todo(echo.substring(5));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                        books.add(t);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "maguireong"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                        appendToFile(FILEPATH, \"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                        appendToFile(FILEPATH, \"  \" + books.get(books.size() - 1));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                        appendToFile(FILEPATH, \"Now you have \" + books.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                    } else if (first.equals(\"event\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                        if (s.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                            throw new EmptyEventsException();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                        int start \u003d echo.indexOf(\"/at\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                        String date \u003d echo.substring(start + 4);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                        LocalDate d \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                        String formattedDate \u003d d.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "maguireong"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                        Event t \u003d new Event(echo.substring(6, start - 1), formattedDate);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                        books.add(t);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "maguireong"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                        appendToFile(FILEPATH, \"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                        appendToFile(FILEPATH, \"  \" + books.get(books.size() - 1));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                        appendToFile(FILEPATH, \"Now you have \" + books.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                    } else if (first.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                        if (s.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                            throw new EmptyDeadlineException();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "maguireong"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                        int start \u003d echo.indexOf(\"/by\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                        String date \u003d echo.substring(start + 4);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                        LocalDate d \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                        String formattedDate \u003d d.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "maguireong"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                        Deadline t \u003d new Deadline(echo.substring(9, start - 1), formattedDate);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                        books.add(t);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "maguireong"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                        appendToFile(FILEPATH, \"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                        appendToFile(FILEPATH, \"  \" + books.get(books.size() - 1));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                        appendToFile(FILEPATH, \"Now you have \" + books.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                    } else if (first.equals(\"delete\")) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                        int index \u003d Integer.parseInt(s[1]);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                        Task t \u003d books.get(index - 1);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                        books.remove(index - 1);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                        appendToFile(FILEPATH, \"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                        appendToFile(FILEPATH, \"  \" + t);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                        appendToFile(FILEPATH, \"Now you have \" + books.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                        throw new UnknownCommandException();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "maguireong"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "maguireong"
        },
        "content": "                appendToFile(FILEPATH, e.getMessage());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "maguireong"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "maguireong"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maguireong": 105,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maguireong"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maguireong"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maguireong"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maguireong"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maguireong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maguireong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maguireong": 6
    }
  },
  {
    "path": "src/main/java/EmptyDeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maguireong"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maguireong"
        },
        "content": "public class EmptyDeadlineException extends DukeException {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maguireong"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maguireong"
        },
        "content": "    public EmptyDeadlineException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maguireong"
        },
        "content": "        super(\"\\u2639 OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maguireong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maguireong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maguireong": 7
    }
  },
  {
    "path": "src/main/java/EmptyEventsException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maguireong"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maguireong"
        },
        "content": "public class EmptyEventsException extends DukeException {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maguireong"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maguireong"
        },
        "content": "    public EmptyEventsException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maguireong"
        },
        "content": "        super(\"\\u2639 OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maguireong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maguireong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maguireong": 7
    }
  },
  {
    "path": "src/main/java/EmptyTodoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maguireong"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maguireong"
        },
        "content": "public class EmptyTodoException extends DukeException {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maguireong"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maguireong"
        },
        "content": "    public EmptyTodoException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maguireong"
        },
        "content": "        super(\"\\u2639 OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maguireong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maguireong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maguireong": 7
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maguireong"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maguireong"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maguireong"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maguireong"
        },
        "content": "    public Event(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maguireong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maguireong"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maguireong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maguireong"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maguireong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maguireong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maguireong"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "maguireong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "maguireong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maguireong": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maguireong"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maguireong"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maguireong"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maguireong"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maguireong"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maguireong"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maguireong"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maguireong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maguireong"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maguireong"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maguireong"
        },
        "content": "        return (isDone ? \"[\\u2713]\" : \"[\\u2718]\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "maguireong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "maguireong"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "maguireong"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "maguireong"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "maguireong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "maguireong"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "maguireong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "maguireong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "maguireong"
        },
        "content": "        return getStatusIcon() + \" \" + description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "maguireong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "maguireong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maguireong": 22
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maguireong"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maguireong"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maguireong"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maguireong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maguireong"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maguireong"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maguireong"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maguireong"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maguireong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maguireong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maguireong": 10
    }
  },
  {
    "path": "src/main/java/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maguireong"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maguireong"
        },
        "content": "public class UnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maguireong"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maguireong"
        },
        "content": "    public UnknownCommandException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maguireong"
        },
        "content": "        super(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maguireong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maguireong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "maguireong": 7
    }
  },
  {
    "path": "text-ui-test/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maguireong"
        },
        "content": "Hello! I\u0027m Duke"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maguireong"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maguireong"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maguireong"
        },
        "content": "  [T][?] borrow book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maguireong"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maguireong"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maguireong"
        },
        "content": "  [D][?] return book (by: Oct 15 2019)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maguireong"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maguireong"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maguireong"
        },
        "content": "  [E][?] project meeting (at: Aug 17 2010)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maguireong"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "maguireong"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "maguireong"
        },
        "content": "1.[T][?] borrow book"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "maguireong"
        },
        "content": "2.[D][?] return book (by: Oct 15 2019)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "maguireong"
        },
        "content": "3.[E][?] project meeting (at: Aug 17 2010)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "maguireong"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "maguireong"
        },
        "content": "  [?] return book"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "maguireong"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "maguireong"
        },
        "content": "1.[T][?] borrow book"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "maguireong"
        },
        "content": "2.[D][?] return book (by: Oct 15 2019)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "maguireong"
        },
        "content": "3.[E][?] project meeting (at: Aug 17 2010)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "maguireong"
        },
        "content": "? OOPS!!! The description of a todo cannot be empty."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "maguireong"
        },
        "content": "? OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "maguireong"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "maguireong"
        },
        "content": "  [D][?] return book (by: Oct 15 2019)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "maguireong"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "maguireong"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "maguireong"
        },
        "content": "1.[T][?] borrow book"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "maguireong"
        },
        "content": "2.[E][?] project meeting (at: Aug 17 2010)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "maguireong"
        },
        "content": "Bye. Hope to see you again soon!"
      }
    ],
    "authorContributionMap": {
      "maguireong": 30
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "maguireong"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "maguireong"
        },
        "content": "deadline return book /by 2019-10-15"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "maguireong"
        },
        "content": "event project meeting /at 2010-08-17"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "maguireong"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "maguireong"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "maguireong"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "maguireong"
        },
        "content": "todo"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "maguireong"
        },
        "content": "blah"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "maguireong"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "maguireong"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "maguireong"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "maguireong": 11
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "maguireong"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "maguireong": 1,
      "-": 37
    }
  }
]
