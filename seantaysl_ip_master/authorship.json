[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seantaysl"
        },
        "content": " * Represents a Deadline task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seantaysl"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    private final String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Constructor for Deadline task object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param name The name of task to be done"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param by The due date of the task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public Deadline(String name, String by) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Overloaded constructor for Deadline task object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param name The name of task to be done"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param done The boolean for task completion status"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param by The due date of the task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public Deadline(String name, boolean done, String by) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        super(name, done);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Getter method for attribute by."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @return The attribute by of Deadline object"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Setter method for setting done attribute to given input."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param b The new completion status"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @return New Deadline task with same parameters but attribute done changed to given input"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public Deadline setDone(boolean b) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return new Deadline(this.getName(),true, this.by);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Returns the Deadline object string."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @return The Deadline object string name"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seantaysl": 54
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seantaysl"
        },
        "content": " * Represents the Duke bot."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seantaysl"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    private final TaskList taskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Creates a Duke bot."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param name The name of the text file data is stored at"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public Duke(String name) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        this.taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        this.storage \u003d new Storage(taskList, name);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Runs the Duke bot program"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        ui.startUp(taskList, storage);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        Parser.parseInput(taskList, storage);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        new Duke(\"duke\").run();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seantaysl": 25,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seantaysl"
        },
        "content": " * Exceptions class for Duke Bot related errors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seantaysl"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Constructor for Duke Exception."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param message The message of the exception"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seantaysl": 12
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seantaysl"
        },
        "content": " * Represents an Event task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seantaysl"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    private final String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Constructor for Event task object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param name The name of event to attend"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param at The due date of the task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public Event(String name, String at) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Overloaded constructor for Event task object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param name The name of task to be done"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param done The boolean for task completion status"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param at The event date"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public Event(String name, boolean done, String at) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        super(name, done);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Getter method for attribute at."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @return The attribute at of Event object"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Setter method for setting done attribute to given input."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param b The new completion status"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @return New Event task with same parameters but attribute done changed to given input"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public Event setDone(boolean b) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return new Event(this.getName(), true, this.at);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Returns the Event object string."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @return The Event object string name"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + this.at + \")\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seantaysl": 54
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seantaysl"
        },
        "content": " * Represents the user input Parser handler."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seantaysl"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    private static final Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Processes the user input date and returns it in the correct format."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param s The user input date"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @return The formatted date for use."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public static String parseDateTime(String s) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd MMM yyyy h:mma\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        SimpleDateFormat parser \u003d new SimpleDateFormat(\"yyyy-MM-dd HHmm\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        SimpleDateFormat dateFormatter \u003d new SimpleDateFormat(\"dd MMM yyyy\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        SimpleDateFormat dateParser \u003d new SimpleDateFormat(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            if (s.contains(\" \")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                return formatter.format((parser.parse(s)));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                return dateFormatter.format(dateParser.parse(s));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            return ui.getBorder() + \"Please input the time and date in\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                + dateParser.toPattern() + \" or \" + parser.toPattern() + \"\\n\" + ui.getBorder();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public static boolean checkBye(String s) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return s.equals(\"bye\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public static boolean checkList(String s) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return s.equals(\"list\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    private static boolean checkFind(String test) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return test.equals(\"find\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public static boolean checkDone(String s) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return s.equals(\"done\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public static boolean checkDel(String s) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return s.equals(\"delete\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Parses the user input and calls the appropriate functions."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param taskList The list of tasks handler"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param storage The storage call handler"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public static void parseInput(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        Scanner scan \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        while (scan.hasNext()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            String test \u003d scan.next().toLowerCase();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            if (checkBye(test)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                ui.exitLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                String next \u003d scan.nextLine().replaceFirst(\" \", \"\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                if (checkList(test)) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    taskList.displayList();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                } else if (checkFind(test)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    taskList.findTask(next);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                } else if (checkDone(test)) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                        taskList.doneTask(next);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                        storage.updateFile();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                        System.out.println(ui.getBorder() + e.getMessage() + \"\\n\" + ui.getBorder());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                } else if (checkDel(test)) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                        taskList.delTask(next);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                        storage.updateFile();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                        System.out.println(ui.getBorder() + e.getMessage() + \"\\n\" + ui.getBorder());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                        taskList.addTask(test, next);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                        storage.updateFile();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                        System.out.println(ui.getBorder() + e.getMessage() + \"\\n\" + ui.getBorder());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        scan.close();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seantaysl": 99
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seantaysl"
        },
        "content": " * Represents the Storage handler for the bot."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seantaysl"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    private final TaskList taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    private final String pathname;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    private final File file;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Constructor for class Storage."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param taskList The task list of the bot"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param name The name of the text file used to store the save data"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public Storage(TaskList taskList, String name) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        pathname \u003d Storage.getStoragePath(name);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        file \u003d new File(pathname);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Checks and makes save file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public void fileCheck() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            File f \u003d new File(pathname);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            f.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            if (!f.createNewFile()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                loadFile();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            System.out.println(\"Something went wrong! Backup could not be made.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Saves current task list state to save file."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public void saveFile() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            FileWriter fw \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            List\u003cTask\u003e storageCopy \u003d this.taskList.getList();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            String split \u003d \"_\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            int index \u003d 0;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            while (!storageCopy.isEmpty()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                Task curr \u003d storageCopy.remove(index);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                String currString \u003d curr.toString();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                String type \u003d currString.substring(currString.indexOf(\"[\") + 1, currString.indexOf(\"]\"));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                boolean completed \u003d curr.isDone();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                String name \u003d curr.getName();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                fw.write(type + split);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                fw.write(completed + split);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                fw.write(name + split);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                switch (type) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    Event event \u003d (Event) curr;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    fw.write(event.getAt() + System.lineSeparator());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    Deadline deadline \u003d (Deadline) curr;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    fw.write(deadline.getBy() + System.lineSeparator());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    fw.write(\"mark\" + System.lineSeparator());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            System.out.println(\"Oops. Something went wrong while saving data.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Loads state from save file."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public  void loadFile() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            Scanner scan \u003d new Scanner(file);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            while (scan.hasNext()) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                String curr \u003d scan.nextLine();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                String[] data \u003d curr.split(\"_\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                String type \u003d data[0];"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                boolean done \u003d Boolean.parseBoolean(data[1]);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                String name \u003d data[2];"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                String time \u003d null;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                if (!data[3].equals(\"mark\")) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    time \u003d data[3];"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                switch (type) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    taskList.getList().add(new Event(name, done, time));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    taskList.getList().add(new Deadline(name, done, time));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    taskList.getList().add(new ToDo(name, done));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Updates save file."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public  void updateFile() {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        file.delete();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        saveFile();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        loadFile();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Returns the file path of the save file."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param name The name of the save file"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @return The absolute path to the save file"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public static String getStoragePath(String name) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return System.getProperty(\"user.dir\")"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            + File.separator + \"data\" + File.separator + name + \".txt\";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Getter method for file attribute."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @return The file attribute of Storage object"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public File getFile() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return file;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seantaysl": 143
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    private final String name;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    private final boolean done;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public Task(String name, boolean done) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        this.done \u003d done;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    abstract Task setDone(boolean b);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return (done ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return done;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        String statusIcon \u003d \"[\" + this.getStatusIcon() + \"] \";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return statusIcon + this.getName();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seantaysl": 34
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seantaysl"
        },
        "content": " * Represents the task list handler."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seantaysl"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    private static final List\u003cTask\u003e storage \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Constructor for TaskList Object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Displays the task list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public  void displayList() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        if (storage.isEmpty()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            System.out.println(ui.getBorder() + \"Your list is empty!\\n\" + ui.getBorder());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            int listLen \u003d storage.size();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            System.out.println(ui.getBorder().replace(\"\\n\", \"\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d listLen; i++) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                Task curr \u003d storage.get(i - 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                System.out.println(i + \".\" + curr);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            System.out.println(ui.getBorder());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Adds task to the task list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param s The type of task to add"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param next The remaining task description"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @throws DukeException The Exception of Duke bot"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public void addTask(String s, String next) throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        Task toAdd \u003d null;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        if (s.matches(\"todo|deadline|event|done|delete\") \u0026\u0026 next.equals(\"\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            throw new DukeException(\"OOPS!!! The description of \" + s + \" cannot be empty.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        switch (s) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            ToDo todo \u003d new ToDo(next);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            storage.add(todo);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            toAdd \u003d todo;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            if (next.contains(\"/by \")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                String[] ls \u003d next.split(\" /by \");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                String date \u003d Parser.parseDateTime(ls[1]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                if (date.contains(ui.getBorder())) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    System.out.println(date);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    toAdd \u003d new Deadline(ls[0], date);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    storage.add(toAdd);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                throw new DukeException(\"Sorry, please specify expected deadline after \\\"/by\\\".\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            if (next.contains(\"/at \")) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                String[] ls \u003d next.split(\" /at \");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                String date \u003d Parser.parseDateTime(ls[1]);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                if (date.contains(ui.getBorder())) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    System.out.println(date);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    toAdd \u003d new Event(ls[0], date);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    storage.add(toAdd);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                throw new DukeException(\"Sorry, please specify event date after \\\"/at\\\".\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :(\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        ui.addTaskLine(toAdd, storage.size());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Completes given from the task list."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param s Index of task to be completed on the list"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @throws DukeException The Exception of Duke bot"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public void doneTask(String s) throws DukeException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            int i \u003d Integer.parseInt(s);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            if (i \u003c 1 || i \u003e storage.size()) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                throw new DukeException(\"You have entered an invalid number: \" + i"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    + \". Please try again.\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                Task t \u003d storage.get(i - 1);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                Task completed \u003d t.setDone(true);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                storage.set(i - 1, completed);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                System.out.println("
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    ui.getBorder() + \"Nice! I\u0027ve marked this task as done:\\n\" + \"  \""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                        + completed + \"\\n\" + ui.getBorder()"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                );"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            System.out.println("
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                ui.getBorder() + \"Please state the completed task number after \\\"done\\\".\\n\""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    + ui.getBorder()"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            );"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Deletes given task from the task list."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param s Index of task to be completed on the list"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @throws DukeException The Exception of Duke bot"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public void delTask(String s) throws DukeException {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        if (storage.size() \u003d\u003d 0 || s.toLowerCase().equals(\"all\")) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            storage.clear();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            System.out.println(ui.getBorder() + \"All tasks cleared!!\\n\" + ui.getBorder());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        } else if (s.equals(\"\")) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                addTask(\"delete\", \"\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                System.out.println(ui.getBorder() + e.getMessage() + \"\\n\" + ui.getBorder());"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                int i \u003d Integer.parseInt(s);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                if (i \u003c 1 || i \u003e storage.size()) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    throw new DukeException(\"You have entered an invalid number: \" + i"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                        + \". Please try again.\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    Task t \u003d storage.get(i - 1);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    storage.remove(i - 1);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    ui.removeTaskLine(t, storage.size());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                System.out.println("
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    ui.getBorder() + \"Please state the completed task number after \\\"delete\\\".\\n\""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                        + ui.getBorder()"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                );"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Prints the list of tasks that contain the given string."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param s The string that should appear in the task"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public void findTask(String s) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        if (storage.isEmpty()) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            System.out.println(ui.getBorder() + \"Your list is empty!\\n\" + ui.getBorder());"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            int index \u003d 1;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            System.out.println(ui.getBorder().replace(\"\\n\", \"\"));"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            System.out.println(\"Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            for (Task curr : storage) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                if (curr.getName().toLowerCase().contains(s.toLowerCase())) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    System.out.println(index + \".\" + curr);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    index++;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            System.out.println(ui.getBorder());"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Getter method for task list."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @return The current task list of the bot"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return storage;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seantaysl": 184
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seantaysl"
        },
        "content": " * Represents the Todo Task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seantaysl"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Constructor for Todo task object."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param name The name of task to be done"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public ToDo(String name) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Overloaded Constructor for Todo tasl object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param name The name of task to be done"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param done The boolean for task completion status"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public ToDo(String name, boolean done) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "       super(name, done);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Setter method for setting done attribute to given input."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param b The new completion status"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @return New ToDo task with same parameters but attribute done changed to given input"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public ToDo setDone(boolean b) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return new ToDo(this.getName(), true);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Returns the ToDo object string."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @return The ToDo object string name"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seantaysl": 40
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seantaysl"
        },
        "content": " * Represents the Ui control object."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seantaysl"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    private static final String BORDER \u003d \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Prints the exit line of the bot."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public void exitLine() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        System.out.println(BORDER + \"Bye. Hope to see you again soon!\\n\" + BORDER);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Prints the Welcome message depending on the save state."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param taskList The handler for task list calls"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param storage The handler for storage calls"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public void startUp(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        storage.fileCheck();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        if (!storage.getFile().exists() || storage.getFile().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            System.out.println("
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                BORDER + \"Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    + \"What can I do for you?\\n\" + BORDER"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            );"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            System.out.println("
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                BORDER + \"Well come back!\\n\" + \"You still have \""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    + taskList.getList().size() + \" tasks left to clear.\\n\" + BORDER"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            );"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Prints the line for adding tasks."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param toAdd The new task to add to the list"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param size  The size of current list"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public void addTaskLine(Task toAdd, int size) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "            BORDER + \"Got it. I\u0027ve added this task:\\n\" + \"  \" + toAdd + \"\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                + \"Now you have \" + size + \" tasks in the list.\\n\" + BORDER"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        );"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Prints the line for removing tasks."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param toRemove The task to remove"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @param size The size of current list"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public void removeTaskLine(Task toRemove, int size) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                BORDER + \"Noted. I\u0027ve removed this task:\\n\" + \"  \" + toRemove + \"\\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                    + \"Now you have \" + size + \" tasks in the list.\\n\" + BORDER"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        );"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * Returns the bots Border string."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     * @return The Border string"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public String getBorder() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        return BORDER;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seantaysl": 65
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public void checkBye() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        assertTrue(Parser.checkBye(\"bye\"));"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public void checkDone() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        assertTrue(Parser.checkDone(\"done\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public void checkList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        assertTrue(Parser.checkList(\"list\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public void checkDel() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        assertTrue(Parser.checkDel(\"delete\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seantaysl": 25
    }
  },
  {
    "path": "src/test/java/UiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "seantaysl"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "public class UiTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    public void getBorder() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        assertEquals("
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "        \"____________________________________________________________\\n\","
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "                new Ui().getBorder());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "seantaysl": 11
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "if [ ! -d \"./bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "if [ -e \"./text-ui-test/ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "    rm ./text-ui-test/ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "if ! javac -cp ./src/main/java -Xlint:none -d ../bin ./src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "java -classpath ../bin Duke \u003c ./text-ui-test/input.txt \u003e ./text-ui-test/ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "cp ./text-ui-test/EXPECTED.TXT ./text-ui-test/EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "dos2unix ./text-ui-test/ACTUAL.TXT ./text-ui-test/EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "seantaysl"
        },
        "content": "diff ./text-ui-test/ACTUAL.TXT ./text-ui-test/EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "seantaysl": 8,
      "-": 30
    }
  }
]
