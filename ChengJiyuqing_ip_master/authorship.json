[
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " * Deadline class extends Task class."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " * Represents a task with a deadline."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    String dueDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    LocalDate localDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Constructor of the class."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Creates a Deadline object with task name, completion status and due date."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @param name Name of the Deadline task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @param status Completion status (whether it is completed)."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @param dueDate Due date of the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public Deadline(String name, Status status, String dueDate) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        super(name, status);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        this.localDate \u003d LocalDate.parse(dueDate);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * String value to represent the object when printed for user."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @return String value that represents the Deadline object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    @Override public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        return \"[D] \" + this.status.statusToSymbol() + this.name +"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                \" by: \" +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                localDate.format(DateTimeFormatter.ofPattern(\"dd-MMM-yyyy\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Generates a String that represents the object to be stored in the data management file."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @return A String to be written into the text file."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    @Override public String toStore() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        return \"[D] \" + this.status.statusToSymbol() + this.name +"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                \" by: \" + dueDate;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengJiyuqing": 46
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " * The Duke program implements an application that simulates a smart task manager with the name Duke."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " * The program takes in user inputs with various formats and process them as tasks to be finished."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Constructor of the class."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Returns a new Duke object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @param filePath The path or intended path of the data management file"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @throws IOException If data management file fails to be created or accessed."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @throws DukeException If other errors occur."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public Duke(String filePath) throws IOException, DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Runs the Duke program."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Prompt user to key in their input with a welcome message"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @throws DukeException If user input is of incorrect format or other unidentified error occurs"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @throws IOException If fails to take user input or create/access data management file"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public void run() throws DukeException, IOException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        //welcoming message"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        System.out.println(\"Hello! Duke at your service. Please name your request.\" +"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                \"\\nAll dates should be in the form of YYYY-MM-DD: \");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        // Take user Input"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        ui.takeUserInput(storage);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Creates a new Duke object and runs the program"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public static void main(String[] args) throws DukeException, IOException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        new Duke(\"src/main/java/duke/todo.txt\").run();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengJiyuqing": 58,
      "-": 9
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " * Sends error message."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Contructor of the class."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Sends an error message to the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @param msg"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public DukeException (String msg) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengJiyuqing": 15
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " * Event class extends Task class to represent a task that happens at certain time."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    String time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    LocalDate localDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @param name Name of the event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @param status Completion status of the event."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @param time Time of the event."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public Event(String name, Status status, String time) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        super(name, status);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        this.localDate \u003d LocalDate.parse(time);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * String value to represent the object when printed for user."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @return String value that represents the Event object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    @Override public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        return \"[E] \" + this.status.statusToSymbol() + this.name + \" at: \" +"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                localDate.format(DateTimeFormatter.ofPattern(\"dd-MMM-yyyy\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Generates a String that represents the object to be stored in the data management file."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @return A String to be written into the text file."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    @Override public String toStore() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        return \"[E] \" + this.status.statusToSymbol() + this.name + \" at: \" + time;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengJiyuqing": 44
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Parse a line from storage file and generate the corresponding task object."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @param taskString String retrieved from storage file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @return The task item that was recorded."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @throws DukeException If the String is of invalid format."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    static Task parseFileItemToTask (String taskString) throws DukeException{"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        if (taskString.startsWith(\"[T]\")) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            String name \u003d taskString.substring(8);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            if (taskString.charAt(5) \u003d\u003d \u0027\\u2713\u0027) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                return new Todo(name, Task.Status.DONE);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            } else if (taskString.charAt(5) \u003d\u003d \u0027\\u2718\u0027) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                return new Todo(name, Task.Status.PENDING);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                throw new DukeException(\"Status not recognizable\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        } else if (taskString.startsWith(\"[D]\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            String name \u003d taskString.split(\" by: \")[0].substring(8);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            String dueDate \u003d taskString.split(\" by: \")[1];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            if (taskString.charAt(5) \u003d\u003d \u0027\\u2713\u0027) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                return new Deadline(name, Task.Status.DONE,dueDate);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            } else if (taskString.charAt(5) \u003d\u003d \u0027\\u2718\u0027) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                return new Deadline(name, Task.Status.PENDING,dueDate);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                throw new DukeException(\"Status not recognizable\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        } else if (taskString.startsWith(\"[E]\")){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            String name \u003d taskString.split(\" at: \")[0].substring(8);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            String dueDate \u003d taskString.split(\" at: \")[1];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            if (taskString.charAt(5) \u003d\u003d \u0027\\u2713\u0027) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                return new Event(name, Task.Status.DONE,dueDate);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            } else if (taskString.charAt(5) \u003d\u003d \u0027\\u2718\u0027){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                return new Event(name, Task.Status.PENDING,dueDate);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                throw new DukeException(\"Status not recognizable\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        } else if (taskString.isEmpty() || taskString.isBlank()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            throw new DukeException(\"error parsing storage file\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Parse user\u0027s input."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Store the task created by the user into the storage file if applicable."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @param userMessage User input."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @param storage Storage item that contains information of data storage file."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @throws DukeException If user input is of invalid format."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @throws IOException For error with files."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    static void parseInput (String userMessage, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        ArrayList\u003cTask\u003e itemList \u003d storage.load();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        if (userMessage.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            ArrayList\u003cTask\u003e selectedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            String searchedItem \u003d userMessage.substring(5);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            for (Task task: itemList) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                if (task.name.contains(searchedItem)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                    selectedTasks.add(task);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            System.out.println(\"Here are the matching tasks in your list: \");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            for (int i \u003d 0; i \u003c selectedTasks.size(); i++) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                Task task \u003d selectedTasks.get(i);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                System.out.println((i+1) + \" \" + task.toString());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        //list down the contents in the list"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        if (userMessage.equals(\"list\")) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            itemList \u003d storage.load();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            System.out.println(\"Here is your list: \");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            for (int i \u003d 0; i \u003c itemList.size(); i++) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                Task task \u003d itemList.get(i);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                System.out.println((i+1) + \" \" + task.toString());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        //mark something as done"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        if (userMessage.contains(\"done\")) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            int index \u003d Character.getNumericValue(userMessage.charAt(5)) - 1;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            Task task \u003d itemList.get(index);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            storage.modifyWithList(itemList);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            System.out.println(\"Good job! You have finished this task!\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            System.out.println(task.toString());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        //delete task"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        if (userMessage.contains(\"delete\")) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            int index \u003d Character.getNumericValue(userMessage.charAt(7)) - 1;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            Task task \u003d itemList.get(index);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            itemList.remove(index);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            storage.modifyWithList(itemList);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            System.out.println(\"I have deleted this task for you: \");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            System.out.println(task.toString());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            System.out.println(\"You now have \" + itemList.size() + \" tasks in your list!\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        //valid task entries"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        Task newItem;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        if (userMessage.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            String name \u003d userMessage.substring(5);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            if (!name.isEmpty() \u0026\u0026 !name.isBlank()) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                newItem \u003d new Todo(name, Task.Status.PENDING);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                throw new DukeException(\"Oops, tasks cannot be empty\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        } else if (userMessage.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            String name \u003d userMessage.split(\"/by\")[0].substring(9);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            if (!userMessage.contains(\"/by\")) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                throw new DukeException(\"Sorry, incorrect format for Deadlines. \\n Please specify a Due Date \" +"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                        \"(and task name)\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            if (name.isEmpty() || name.isBlank()) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                throw new DukeException(\"Oops, tasks cannot be empty\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            String dueDate \u003d userMessage.split(\"/by\")[1].substring(1);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            newItem \u003d new Deadline(name, Task.Status.PENDING,dueDate);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        } else if (userMessage.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            String name \u003d userMessage.split(\"/at \")[0].substring(5);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            if (!userMessage.contains(\"/at\")) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                throw new DukeException(\"Sorry, incorrect format for Events. \\n Please specify a time \" +"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                        \"(and task name)\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            if (name.isEmpty() || name.isBlank()) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                throw new DukeException(\"Oops, tasks cannot be empty\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            String time \u003d userMessage.split(\"/at \")[1];"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            newItem \u003d new Event(name, Task.Status.PENDING,time);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            throw new DukeException(\"Sorry, I do not understand this command\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        Storage.todoToFile(newItem);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        System.out.println(\"new task added: \" + newItem.toString());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        System.out.println(\"You now have \" + (itemList.size() + 1) + \" tasks in your list!\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengJiyuqing": 158
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " * Data and file manager of Duke"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    static String path;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    File file;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    ArrayList\u003cTask\u003e itemList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Record a task into the data management file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @param task Task to be recorded."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @throws IOException If file fails to be created or accessed"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    static void todoToFile(Task task) throws IOException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        FileWriter appendFile \u003d new FileWriter(path, true);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        System.out.println(task.toStore());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        appendFile.write(task.toStore());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        appendFile.write(\"\\n\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        appendFile.close();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Constructor of the class."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Creates a new Storage object."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @param path The path to create (or access) the data management file."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @throws IOException If file fails to be created or accessed."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public Storage (String path) throws IOException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        this.path \u003d path;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        file \u003d new File(path);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        if (! file.exists()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Rewrites the data management file with a new array of tasks."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @param list List of tasks to be written."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @throws IOException If data management file fails to be created or accessed."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public void modifyWithList(ArrayList\u003cTask\u003e list) throws IOException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        FileWriter clearFile \u003d new FileWriter(path);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        clearFile.write(\"\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        clearFile.close();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        FileWriter appendFile \u003d new FileWriter(path, true);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            Task task \u003d list.get(i);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            appendFile.write(task.toStore());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            appendFile.write(\"\\n\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        appendFile.close();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Load the content in the file to an ArrayList of tasks."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @return An ArrayList of tasks as recorded in the data management file."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @throws DukeException If other error occurs."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @throws FileNotFoundException If data management file fails to be created or accessed."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException, FileNotFoundException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        //load data onto itemList"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        Scanner fileSc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        itemList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        while (fileSc.hasNextLine()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            Task newItem;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            String taskString \u003d fileSc.nextLine();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            newItem \u003d Parser.parseFileItemToTask(taskString);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            itemList.add(newItem);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        return itemList;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengJiyuqing": 87
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " * Represents a task item that user creates."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Represents the completion status of a task object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * PENDING: the task has yet to be completed."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * DONE: the task is already completed."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public enum Status {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        PENDING,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        DONE;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "         * Produce a String to represent the completion status of a task to user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "         * @return"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "         */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        public String statusToSymbol() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            if (this \u003d\u003d DONE) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                return \"[\\u2713] \";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                return \"[\\u2718] \";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    String name;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    Status status;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @param name Name of the task"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @param status Completion status of the task"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public Task(String name, Status status) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        this.status \u003d status;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Change the status of the task to DONE"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        this.status \u003d Status.DONE;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Generate a String that represents this task object."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * This String is to be stored into data management file, not to be printed for user."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @return The String generated"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public String toStore() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        return this.toString();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Undo the task, change the status of a task back to PENDING."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public void undo() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        this.status \u003d Status.PENDING;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengJiyuqing": 64
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " * A list of tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Constructor."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @param list A list of tasks to be managed."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        this.taskList \u003d list;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Add a task to the task list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @param task task to be added."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengJiyuqing": 27
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " * TODO class extends Task class to represent a task that does not have a specific time."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @param name Name of the todo task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @param status Completion status of the task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public Todo(String name, Status status) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        super(name, status);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Generates a String that represents the object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * This String is used for printing to user as well as to be stored in the data management file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @return A String."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    @Override public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        return \"[T] \" + this.status.statusToSymbol() + this.name;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengJiyuqing": 25
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " * This class handles interaction with user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " * This class prompts user to input their message and react accordingly."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    Scanner sc;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    //Object to store the list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    ArrayList\u003cTask\u003e itemList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    //create file"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    String path \u003d \"out/todo.txt\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Constructor of the class."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Creates a new Ui object with a Scanner."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @throws DukeException For invalid user inputs."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @throws IOException For file errors."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public Ui() throws DukeException, IOException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Handles user input."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * Passes valid user input to Parser class for further process."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @param storage A Storage object that handles data storage."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public void takeUserInput(Storage storage) throws IOException, DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            String userMessage \u003d sc.nextLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            //exit"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            if (userMessage.equals(\"bye\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                System.out.println(\"Bye! Nice serving you. Hope to see you again soon! :D\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "            Parser.parseInput(userMessage, storage);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengJiyuqing": 48
    }
  },
  {
    "path": "src/main/java/duke/todo.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "[T] [✘] hihi"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "[T] [✘] sleep"
      }
    ],
    "authorContributionMap": {
      "ChengJiyuqing": 2
    }
  },
  {
    "path": "src/main/out/production/ip/duke/todo.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "[T] [✘] hihi"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "[T] [✘] sleep"
      }
    ],
    "authorContributionMap": {
      "ChengJiyuqing": 2
    }
  },
  {
    "path": "src/main/out/todo.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "[T] [✓] sleep"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "[D] [✓] shower  by: 11"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "[D] [✓] proj  by: tmr"
      }
    ],
    "authorContributionMap": {
      "ChengJiyuqing": 3
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    //set up a Storage instance for testing"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    Storage defaultStorage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    File file;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public ParserTest() throws IOException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        this.defaultStorage \u003d new Storage(\"parserTest.txt\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        FileWriter clearFile \u003d new FileWriter(\"parserTest.txt\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        clearFile.write(\"\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        clearFile.close();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        file \u003d new File(\"parserTest.txt\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "     public void parse_input_to_file_test() throws IOException, DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        String msg \u003d \"todo sleep\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        Parser.parseInput(msg,defaultStorage);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        Scanner fileSc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        String taskString \u003d fileSc.nextLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        assertEquals(\"[T] [✘] sleep\", taskString, \"wrong file recording\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengJiyuqing": 34
    }
  },
  {
    "path": "src/test/java/duke/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    Storage testStorage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    File file;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public StorageTest() throws IOException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        testStorage \u003d new Storage(\"storageTest.txt\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        file \u003d new File(\"storageTest.txt\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    public void is_file_created_test() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "        assertEquals(true,file.isFile(), \"failed to create a file\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ChengJiyuqing": 22
    }
  },
  {
    "path": "src/test/parserTest.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "[T] [✘] sleep"
      }
    ],
    "authorContributionMap": {
      "ChengJiyuqing": 1
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "ChengJiyuqing": 3,
      "-": 37
    }
  },
  {
    "path": "todo.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "[T] [✘] sleep"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ChengJiyuqing"
        },
        "content": "[T] [✘] wake up"
      }
    ],
    "authorContributionMap": {
      "ChengJiyuqing": 2
    }
  }
]
