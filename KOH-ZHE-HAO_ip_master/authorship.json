[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KOH-ZHE-HAO": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    private static final String LINE_BREAK \u003d \"   ____________________________\" +"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            \"________________________________\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    private static final String SPACE1 \u003d \"    \";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    private static final String SPACE2 \u003d \"     \";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    private static boolean isInteger (String str) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            Integer.parseInt(str);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        String logo \u003d \" ____        _\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        System.out.println(LINE_BREAK);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        System.out.println(SPACE1 + \"Hey, I\u0027m Emilia \\u2764 !\\n\" + SPACE1 +"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                \"What can I do for you?\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        System.out.println(LINE_BREAK);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            String input \u003d sc.nextLine().trim().toLowerCase();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            System.out.println(LINE_BREAK);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                System.out.println(SPACE1 + \"Welcome back \\u2764 !\\n\" + LINE_BREAK);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                System.out.println(SPACE1 + \"Please take a look at the tasks:\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                int count \u003d 1;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                for (Task task : tasks) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    System.out.println(SPACE1 + count + \". \" + task);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    count++;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                System.out.println(LINE_BREAK);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            String[] process \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                if (process[0].equals(\"done\") \u0026\u0026 isInteger(process[1])) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    int index \u003d Integer.parseInt(process[1]) - 1;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    Task task \u003d tasks.get(index);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    task.markAsDone();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    System.out.println(SPACE1 + \"Understood, I\u0027ve marked this \" +"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                            \"task as done:\\n\" + SPACE2 + task);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                if (process[0].equals(\"delete\") \u0026\u0026 isInteger(process[1])) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    int index \u003d Integer.parseInt(process[1]) - 1;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    Task task \u003d tasks.get(index);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    tasks.remove(index);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    System.out.println(SPACE1 + \"Understood, I\u0027ve deleted this task\\n\" +"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                             SPACE2 + task + \"\\n\" + SPACE1 + \"You have \" + tasks.size() +"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                            \" tasks in your list now!\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                System.out.println(SPACE1 + \"Sorry, I can\u0027t seem \" +"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                        \"to find the task...\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            String firstWord \u003d process[0];"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            Task current;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                switch (firstWord) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    case \"todo\":"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                        current \u003d new ToDo(process[1].trim());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    case \"deadline\": {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                        int byIndex \u003d process[1].indexOf(\" /by \");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                        if (byIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                            throw new DukeException(\"better description\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                        String deadline \u003d process[1].substring(byIndex + 4).trim();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                        String description \u003d process[1].substring(0, byIndex).trim();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                        current \u003d new Deadline(description, deadline);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    case \"event\": {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                        int atIndex \u003d process[1].indexOf(\" /at \");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                        if (atIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                            throw new DukeException(\"better description\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                        String deadline \u003d process[1].substring(atIndex + 4).trim();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                        String description \u003d process[1].substring(0, atIndex).trim();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                        current \u003d new Event(description, deadline);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                        throw new DukeException(\"nothing understood\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                System.out.println(SPACE1 + \"The description of \" +"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                        \"a task cannot be empty!\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                String type \u003d e.getMessage();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                if (type.equals(\"better description\")) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    System.out.println(SPACE1 + \"I need a better \" +"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                            \"description of the task and time!\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                } else if (type.equals(\"nothing understood\")) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    System.out.println(SPACE1 + \"I don\u0027t understand you at all...\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            tasks.add(current);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            System.out.println(SPACE1 + \"Understood! I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    SPACE2 + current);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            System.out.println(SPACE1 + \"You have \" +"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "                    tasks.size() + \" tasks in your list now!\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "            System.out.println(LINE_BREAK);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KOH-ZHE-HAO": 130,
      "-": 8
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KOH-ZHE-HAO": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KOH-ZHE-HAO": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    protected boolean status;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public Task(String name) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        this.status \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        return this.status;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        this.status \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        return \"[\" + (status ? \"\\u2713\" : \"\\u2718\") + \"] \" + this.name;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KOH-ZHE-HAO": 22
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "public class ToDo extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "KOH-ZHE-HAO": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "todo      buy milk"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "event                  project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "deadline where is my by"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "event go to sleep/at 8pm"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "event"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "todo"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "done 8"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "why are you so cute ?"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "delete 10"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "bye"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "KOH-ZHE-HAO": 23
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "KOH-ZHE-HAO"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "KOH-ZHE-HAO": 3,
      "-": 20
    }
  }
]
